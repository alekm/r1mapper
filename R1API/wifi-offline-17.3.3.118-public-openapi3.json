{
  "openapi" : "3.0.1",
  "info" : {
    "description" : "# Overview\n\n ## Rate Limit\n For the Wifi REST API the following will be true: \n - Limits are applied to each tenant.\n - A maximum of 200 calls can be made per second.\n - Each second 100 calls will be returned to be used.",
    "license" : {
      "name" : "RUCKUS Cloud Privacy Policy",
      "url" : "https://support.ruckuswireless.com/ruckus-cloud-privacy-policy"
    },
    "title" : "Wi-Fi API and Model Documentation",
    "version" : "17.3.3.118"
  },
  "externalDocs" : {
    "url" : "https://support.ruckuswireless.com/ruckus-cloud-wifi-legal-terms-and-conditions"
  },
  "servers" : [ {
    "url" : "https://api.asia.ruckus.cloud",
    "description" : "Asian region"
  }, {
    "url" : "https://api.eu.ruckus.cloud",
    "description" : "European region"
  }, {
    "url" : "https://api.ruckus.cloud",
    "description" : "North American region"
  } ],
  "tags" : [ {
    "description" : "Manage VLAN pool profiles.",
    "name" : "VLAN Pool Profile"
  }, {
    "description" : "Manage location based service server profiles.",
    "name" : "LBS Server Profile"
  }, {
    "description" : "Query AP Feature compatibility report, including incompatible feature of AP model and firmware version.",
    "name" : "AP Compatibility"
  }, {
    "description" : "Manage client isolation profiles.<br><br>Client isolation features, when enabled, prevent clients residing on a common VLAN from exchanging packets with each other.  Client isolation is enforced by APs working at layer 2 (bridging).  If client isolation is needed between VLANs/IP subnets, routers must also be configured to prevent packet exchange at layer 3.  A client isolation profile provides the capability for administrators to configure exceptions to this isolation behavior.  For example, an administrator may want to allow clients on a public network to access a printer in a common area of their venue.  If so, the MAC and IP addresses of the printer (or any excepted device) can be configured on the client isolation profile.<br><br> Client isolation can be used in conjunction with walled gardens for public networks.  Walled gardens provide limited access to services _prior_ to client authentication whereas client isolation profiles provide connectivity options _post_ authentication.<br><br>Client isolation does not work when clients are assigned static IP addresses.  For this reason, Ruckus recommends using DHCP lease reservations in lieu of static IP addresses when using this feature.  Administrators may also want to consider use of the force DHCP option, available during wireless network configuration.<br><br>Complications to client isolation can arise when the VLAN's default gateway employs VRRP or HSRP for high availability or when Multicast DNS Proxy is configured on the same WLAN as the profile.  If either of these situations applies in your network, please contact Ruckus customer support for assistance.",
    "name" : "Client Isolation Profile"
  }, {
    "description" : "Portal service profile.",
    "name" : "Wi-Fi Portal Service Profile"
  }, {
    "description" : "Manage the current tenant's application library settings.",
    "name" : "Application Library"
  }, {
    "description" : "Manage SAML identity provider profiles.",
    "name" : "SAML Identity Provider Profile"
  }, {
    "description" : "Manage Wi-Fi calling service profiles.",
    "name" : "Wi-Fi Calling Service Profile"
  }, {
    "description" : "Manage Wi-Fi network-venue activation relationships.",
    "name" : "Wi-Fi Network Activation"
  }, {
    "description" : "Manage APs including pinging, trace-routing, resetting, rebooting, floor-plan positioning and LAN-Ports settings.",
    "name" : "AP"
  }, {
    "description" : "Manage layer-3 ACL policy profiles.",
    "name" : "L3ACL Policy"
  }, {
    "description" : "Manage RADIUS server profiles.",
    "name" : "RADIUS Profile"
  }, {
    "description" : "Manage Syslog server profiles.",
    "name" : "Syslog Server Profile"
  }, {
    "description" : "Manage Wi-Fi network profiles.",
    "name" : "Wi-Fi Network"
  }, {
    "description" : "Manage application policy profiles.",
    "name" : "Application Policy"
  }, {
    "description" : "Manage AP-Groups.",
    "name" : "AP Group"
  }, {
    "description" : "Manage client connections.",
    "name" : "Client"
  }, {
    "description" : "Manage DHCP configuration service profiles.",
    "name" : "DHCP Configuration Service Profile"
  }, {
    "description" : "Manage MAC registration pool profiles.",
    "name" : "MAC Registration Pool"
  }, {
    "description" : "Manage client isolation allowlists.<br><br>Client isolation features, when enabled, prevent clients residing on a common VLAN from exchanging packets with each other.  Client isolation is enforced by APs working at layer 2 (bridging).  If client isolation is needed between VLANs/IP subnets, routers must also be configured to prevent packet exchange at layer 3.  A client isolation allowlist provides the capability for administrators to configure exceptions to this isolation behavior.  For example, an administrator may want to allow clients on a public network to access a printer in a common area of their venue.  If so, the MAC and IP addresses of the printer (or any excepted device) can be configured on the client isolation allowlist.<br><br> Client isolation can be used in conjunction with walled gardens for public networks.  Walled gardens provide limited access to services _prior_ to client authentication whereas client isolation allowlists provide connectivity options _post_ authentication.<br><br>Client isolation does not work when clients are assigned static IP addresses.  For this reason, Ruckus recommends using DHCP lease reservations in lieu of static IP addresses when using this feature.  Administrators may also want to consider use of the force DHCP option, available during wireless network configuration.<br><br>Complications to client isolation can arise when the VLAN's default gateway employs VRRP or HSRP for high availability or when Multicast DNS Proxy is configured on the same WLAN as the allowlist.  If either of these situations applies in your network, please contact Ruckus customer support for assistance.",
    "name" : "Client Isolation Allowlist"
  }, {
    "description" : "Manage AP SNMP policy profiles.",
    "name" : "AP SNMP Agent Profile"
  }, {
    "description" : "Manage Hotspot 2.0 Operators.",
    "name" : "Hotspot 2.0 Operator"
  }, {
    "description" : "Manage rogue AP detection policies.<br><br>Rogue APs are Wi-Fi APs which are in radio range of your Wi-Fi network, but are unknown to the Ruckus cloud. For example, these may be APs in installed your venues without explicit authorization from your administrators, whether added by a well-meaning employee or by a malicious attacker; as such, they could be on the same LAN as your authorized APs. They could also be APs installed in nearby venues (for example, if your venue is part of a multi-tenant facility). Rogue classification polices help to automatically classify these unknown APs by setting up rules which trigger a rogue AP report when specific-rogue detection criteria are met.",
    "name" : "Rogue AP Detection Policy"
  }, {
    "description" : "Manage Wi-Fi venue configuration, including radio settings, mesh, LEDs, LAN-ports, and syslog.",
    "name" : "AP Venue"
  }, {
    "description" : "Manage tunnel service profiles.",
    "name" : "Tunnel Service Profile"
  }, {
    "description" : "Manage layer-2 ACL policy profiles.",
    "name" : "L2ACL Policy"
  }, {
    "description" : "Manage ethernet port profiles.",
    "name" : "Ethernet Port Profile"
  }, {
    "description" : "Manage SNMP agent profiles.",
    "name" : "SNMP Agent Profile"
  }, {
    "description" : "Manage device policies.",
    "name" : "Device Policy"
  }, {
    "description" : "Manage Hotspot 2.0 Identity Providers.",
    "name" : "Hotspot 2.0 Identity Provider"
  }, {
    "description" : "Manage Multicast DNS proxy service profiles.",
    "name" : "MDNS Proxy Service Profile"
  }, {
    "description" : "Manage SoftGRE profiles.",
    "name" : "SoftGRE Profile"
  }, {
    "description" : "Manage access control profiles.",
    "name" : "Access Control Profile"
  }, {
    "description" : "Manage VLAN pool profiles.",
    "name" : "VLAN Pool"
  }, {
    "description" : "Manage the current tenant's application library and settings.",
    "name" : "Application Library"
  }, {
    "description" : "Retrieve and set the recovery PSK.",
    "name" : "Recovery"
  }, {
    "description" : "Managing the relationships for Wi-Fi network activation within venue associations.",
    "name" : "Wi-Fi Network"
  }, {
    "description" : "Manage certificate templates.",
    "name" : "Certificate Template Activation"
  }, {
    "description" : "Manage DPSK services.",
    "name" : "DPSK Service"
  } ],
  "paths" : {
    "/accessControlProfiles" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete multiple access control profiles by profile identities.",
        "operationId" : "deleteBulkAccessControlProfiles",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Multiple Access Control Profiles",
        "tags" : [ "Access Control Profile" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get all access control profiles.",
        "operationId" : "getAllAccessControlProfiles",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AccessControlProfile"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get All Access Control Profiles",
        "tags" : [ "Access Control Profile" ]
      },
      "post" : {
        "description" : "Add an access control profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/9/1.",
        "operationId" : "addAccessControlProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccessControlProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccessControlProfile"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccessControlProfileV1_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessControlProfileOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessControlProfileOperationResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Add Access Control Profile",
        "tags" : [ "Access Control Profile" ]
      }
    },
    "/accessControlProfiles/{accessControlProfileId}" : {
      "delete" : {
        "description" : "Delete the specified access control profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/9/1.",
        "operationId" : "deleteAccessControlProfile",
        "parameters" : [ {
          "description" : "Access control profile identity",
          "in" : "path",
          "name" : "accessControlProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Access Control Profile",
        "tags" : [ "Access Control Profile" ]
      },
      "get" : {
        "description" : "Get an access control profile by profile identity. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/9/1.",
        "operationId" : "getAccessControlProfile",
        "parameters" : [ {
          "description" : "Access control profile identity",
          "in" : "path",
          "name" : "accessControlProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessControlProfile"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessControlProfile"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessControlProfileV1_1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Access Control Profile",
        "tags" : [ "Access Control Profile" ]
      },
      "put" : {
        "description" : "Update the specified access control profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/9/1.",
        "operationId" : "updateAccessControlProfile",
        "parameters" : [ {
          "description" : "Access control profile identity",
          "in" : "path",
          "name" : "accessControlProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccessControlProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccessControlProfile"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccessControlProfileV1_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Access Control Profile",
        "tags" : [ "Access Control Profile" ]
      }
    },
    "/accessControlProfiles/{accessControlProfileId}/applicationPolicies/{applicationPolicyId}" : {
      "delete" : {
        "description" : "Use this API command to deactivate an application policy on an access control profile.",
        "operationId" : "deactivateApplicationPolicyOnAccessControlProfile",
        "parameters" : [ {
          "in" : "path",
          "name" : "accessControlProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "applicationPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Application Policy On Access Control Profile",
        "tags" : [ "Application Policy" ]
      },
      "put" : {
        "description" : "Use this API command to activate an application policy on an access control profile.",
        "operationId" : "activateApplicationPolicyOnAccessControlProfile",
        "parameters" : [ {
          "in" : "path",
          "name" : "accessControlProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "applicationPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Application Policy On Access Control Profile",
        "tags" : [ "Application Policy" ]
      }
    },
    "/accessControlProfiles/{accessControlProfileId}/devicePolicies/{devicePolicyId}" : {
      "delete" : {
        "description" : "Use this API command to delete a relationship between device policy and access control profile.",
        "operationId" : "deactivateDevicePolicyOnAccessControlProfile",
        "parameters" : [ {
          "description" : "Access Control Profile ID",
          "in" : "path",
          "name" : "accessControlProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Device Policy ID",
          "in" : "path",
          "name" : "devicePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Device Policy On Access Control Profile",
        "tags" : [ "Device Policy" ]
      },
      "put" : {
        "description" : "Use this API command to build a relationship between device policy and access control profile.",
        "operationId" : "activateDevicePolicyOnAccessControlProfile",
        "parameters" : [ {
          "description" : "Access Control Profile ID",
          "in" : "path",
          "name" : "accessControlProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Device Policy ID",
          "in" : "path",
          "name" : "devicePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Device Policy On Access Control Profile",
        "tags" : [ "Device Policy" ]
      }
    },
    "/accessControlProfiles/{accessControlProfileId}/l2AclPolicies/{l2AclPolicyId}" : {
      "delete" : {
        "description" : "Deactivate layer-2 ACL policy on access control profile.",
        "operationId" : "deactivateL2AclPolicyOnAccessControlProfile",
        "parameters" : [ {
          "description" : "Access Control Profile ID",
          "in" : "path",
          "name" : "accessControlProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "L2Acl Policy ID",
          "in" : "path",
          "name" : "l2AclPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Layer-2 ACL Policy On Access Control Profile",
        "tags" : [ "L2ACL Policy" ]
      },
      "put" : {
        "description" : "Activate layer-2 ACL policy on access control profile.",
        "operationId" : "activateL2AclPolicyOnAccessControlProfile",
        "parameters" : [ {
          "description" : "Access Control Profile ID",
          "in" : "path",
          "name" : "accessControlProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "L2Acl Policy ID",
          "in" : "path",
          "name" : "l2AclPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Layer-2 ACL Policy On Access Control Profile",
        "tags" : [ "L2ACL Policy" ]
      }
    },
    "/accessControlProfiles/{accessControlProfileId}/l3AclPolicies/{l3AclPolicyId}" : {
      "delete" : {
        "description" : "Deactivate layer-3 ACL policy on access control profile.",
        "operationId" : "deactivateL3AclPolicyOnAccessControlProfile",
        "parameters" : [ {
          "description" : "Access Control Profile ID",
          "in" : "path",
          "name" : "accessControlProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "L3Acl Policy ID",
          "in" : "path",
          "name" : "l3AclPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Layer-3 ACL Policy On Access Control Profile",
        "tags" : [ "L3ACL Policy" ]
      },
      "put" : {
        "description" : "Activate layer-3 ACL policy on access control profile.",
        "operationId" : "activateL3AclPolicyOnAccessControlProfile",
        "parameters" : [ {
          "description" : "Access Control Profile ID",
          "in" : "path",
          "name" : "accessControlProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "L3Acl Policy ID",
          "in" : "path",
          "name" : "l3AclPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Layer-3 ACL Policy On Access Control Profile",
        "tags" : [ "L3ACL Policy" ]
      }
    },
    "/apSnmpAgentProfiles" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a list of AP SNMP agent profiles.",
        "operationId" : "deleteApSnmpAgentProfilesBulk",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of AP SNMP Agent Profile IDs",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete AP SNMP Agent Profiles",
        "tags" : [ "AP SNMP Agent Profile" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the AP SNMP agent profiles.",
        "operationId" : "getApSnmpAgentProfiles",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApSnmpAgentProfile"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP SNMP Agent Profiles",
        "tags" : [ "AP SNMP Agent Profile" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "Create a new AP SNMP agent profile.",
        "operationId" : "createApSnmpAgentProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApSnmpAgentProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApSnmpAgentProfileOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create AP SNMP Agent Profile",
        "tags" : [ "AP SNMP Agent Profile" ]
      }
    },
    "/apSnmpAgentProfiles/{apSnmpProfileId}" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a AP SNMP agent profile.",
        "operationId" : "deleteApSnmpAgentProfile",
        "parameters" : [ {
          "description" : "AP SNMP Agent Profile ID",
          "in" : "path",
          "name" : "apSnmpProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete AP SNMP Agent Profile",
        "tags" : [ "AP SNMP Agent Profile" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the details for this AP SNMP profile.",
        "operationId" : "getApSnmpAgentProfile",
        "parameters" : [ {
          "description" : "AP SNMP Agent Profile ID",
          "in" : "path",
          "name" : "apSnmpProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApSnmpAgentProfile"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP SNMP Profile",
        "tags" : [ "AP SNMP Agent Profile" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update a AP SNMP agent profile.",
        "operationId" : "updateApSnmpAgentProfile",
        "parameters" : [ {
          "description" : "AP SNMP Agent Profile ID",
          "in" : "path",
          "name" : "apSnmpProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApSnmpAgentProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP SNMP Agent Profile",
        "tags" : [ "AP SNMP Agent Profile" ]
      }
    },
    "/apSnmpAgentProfiles/{apSnmpProfileId}/aps/query" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get a list of APs of the AP SNMP agent profile.",
        "operationId" : "getApSnmpAgentProfileApUsage",
        "parameters" : [ {
          "description" : "AP SNMP Agent Profile ID",
          "in" : "path",
          "name" : "apSnmpProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApSnmpAgentProfileApQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApSnmpAgentProfileApQueryResponse"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP SNMP Agent Profile AP Usage",
        "tags" : [ "AP SNMP Agent Profile" ]
      }
    },
    "/applicationLibraries/{applicationLibraryId}/categories" : {
      "get" : {
        "operationId" : "getApplicationLibraryCategories",
        "parameters" : [ {
          "description" : "The ID (version) of the application library.",
          "in" : "path",
          "name" : "applicationLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationLibraryCategories"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationLibraryCategories"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Application Library Categories",
        "tags" : [ "Application Library" ]
      }
    },
    "/applicationLibraries/{applicationLibraryId}/categories/{categoryId}/applications" : {
      "get" : {
        "operationId" : "getApplicationLibraryApplications",
        "parameters" : [ {
          "description" : "The ID (version) of the application library.",
          "in" : "path",
          "name" : "applicationLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the application category.",
          "in" : "path",
          "name" : "categoryId",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationLibraryApplications"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationLibraryApplications"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Application Library Applications",
        "tags" : [ "Application Library" ]
      }
    },
    "/applicationLibrarySettings" : {
      "get" : {
        "description" : "Use this API to get the current application library settings.",
        "operationId" : "getApplicationLibrarySettingsCsv",
        "parameters" : [ {
          "description" : "Specify which type of changed application would be included in the response",
          "in" : "query",
          "name" : "type",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Include changed application information in response",
          "in" : "query",
          "name" : "changesIncluded",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/ApplicationLibrarySettings"
                  }, {
                    "type" : "object"
                  } ]
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/ApplicationLibrarySettings"
                  }, {
                    "type" : "object"
                  } ]
                }
              },
              "text/csv" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/ApplicationLibrarySettings"
                  }, {
                    "type" : "object"
                  } ]
                }
              },
              "text/vnd.ruckus.v1+csv" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/ApplicationLibrarySettings"
                  }, {
                    "type" : "object"
                  } ]
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Application Library Settings",
        "tags" : [ "Application Library" ]
      },
      "patch" : {
        "description" : "Patch application library settings.",
        "operationId" : "patchApplicationLibrarySettings",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationLibrarySettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationLibrarySettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Patch Application Library Settings",
        "tags" : [ "Application Library" ]
      }
    },
    "/applicationPolicies" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Use this API command to delete an application policy list.",
        "operationId" : "deleteApplicationPolicies",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Application Policies",
        "tags" : [ "Application Policy" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Use this API command to get the application policy list.",
        "operationId" : "getApplicationPolicies",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationPolicy"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Application Policies",
        "tags" : [ "Application Policy" ]
      },
      "post" : {
        "description" : "Use this API command to create a new application policy. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "addApplicationPolicy",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationPolicy"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationPolicy"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationPolicyV1_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationPolicyOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationPolicyOperationResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Add Application Policy",
        "tags" : [ "Application Policy" ]
      }
    },
    "/applicationPolicies/capabilities/applications" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "getAvcApplications",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AvcApp"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Application Policies Applications",
        "tags" : [ "Recovery" ]
      }
    },
    "/applicationPolicies/capabilities/categories" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "getAvcCategories",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AvcCat"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Application Policies Categories",
        "tags" : [ "Recovery" ]
      }
    },
    "/applicationPolicies/{applicationPolicyId}" : {
      "delete" : {
        "description" : "Use this API command to delete application policy.",
        "operationId" : "deleteApplicationPolicy",
        "parameters" : [ {
          "in" : "path",
          "name" : "applicationPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Application Policy",
        "tags" : [ "Application Policy" ]
      },
      "get" : {
        "description" : "Use this API command to get the application policy details. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "getApplicationPolicy",
        "parameters" : [ {
          "in" : "path",
          "name" : "applicationPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationPolicy"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationPolicy"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationPolicyV1_1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Application Policy",
        "tags" : [ "Application Policy" ]
      },
      "put" : {
        "description" : "Use this API command to update application policy. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "updateApplicationPolicy",
        "parameters" : [ {
          "in" : "path",
          "name" : "applicationPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationPolicy"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationPolicy"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationPolicyV1_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Application Policy",
        "tags" : [ "Application Policy" ]
      }
    },
    "/aps/clients" : {
      "patch" : {
        "deprecated" : true,
        "description" : "Control a list of clients.",
        "operationId" : "clientControl",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClientControlAction"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Clients Control",
        "tags" : [ "Client" ]
      }
    },
    "/clientIsolationProfiles" : {
      "post" : {
        "description" : "Create a new client isolation profile.",
        "operationId" : "createClientIsolationProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClientIsolationProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClientIsolationProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Client Isolation Profile",
        "tags" : [ "Client Isolation Profile" ]
      }
    },
    "/clientIsolationProfiles/{clientIsolationProfileId}" : {
      "delete" : {
        "description" : "Delete this client isolation profile.",
        "operationId" : "deleteClientIsolationProfile",
        "parameters" : [ {
          "description" : "Client Isolation Profile ID",
          "in" : "path",
          "name" : "clientIsolationProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Client Isolation Profile",
        "tags" : [ "Client Isolation Profile" ]
      },
      "get" : {
        "description" : "Get the details for this client isolation profile.",
        "operationId" : "getClientIsolationProfile",
        "parameters" : [ {
          "description" : "Client Isolation Profile ID",
          "in" : "path",
          "name" : "clientIsolationProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientIsolationProfile"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientIsolationProfile"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Client Isolation Profile",
        "tags" : [ "Client Isolation Profile" ]
      },
      "put" : {
        "description" : "Update this client isolation profile.",
        "operationId" : "updateClientIsolationProfile",
        "parameters" : [ {
          "description" : "Client Isolation Profile ID",
          "in" : "path",
          "name" : "clientIsolationProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClientIsolationProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClientIsolationProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Client Isolation Profile",
        "tags" : [ "Client Isolation Profile" ]
      }
    },
    "/devicePolicies" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a list of device-policies.",
        "operationId" : "deleteDevicePoliciesBulk",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of device-policy IDs",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Device-Policies",
        "tags" : [ "Device Policy" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the device-policy collection.",
        "operationId" : "getAllDevicePolicies",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DevicePolicy"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get All Device Policies",
        "tags" : [ "Device Policy" ]
      },
      "post" : {
        "description" : "Create a new device-policy. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "addDevicePolicy",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DevicePolicy"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DevicePolicy"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DevicePolicyV1_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DevicePolicyOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DevicePolicyOperationResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Device-Policy",
        "tags" : [ "Device Policy" ]
      }
    },
    "/devicePolicies/{devicePolicyId}" : {
      "delete" : {
        "description" : "Delete a device-policy. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "deleteDevicePolicy",
        "parameters" : [ {
          "description" : "Device-policy ID",
          "in" : "path",
          "name" : "devicePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Device-Policy",
        "tags" : [ "Device Policy" ]
      },
      "get" : {
        "description" : "Get the device-policy details.",
        "operationId" : "getDevicePolicy",
        "parameters" : [ {
          "description" : "Device-policy ID",
          "in" : "path",
          "name" : "devicePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DevicePolicy"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DevicePolicy"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DevicePolicyV1_1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Device-Policy",
        "tags" : [ "Device Policy" ]
      },
      "put" : {
        "description" : "Update a device-policy. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "updateDevicePolicy",
        "parameters" : [ {
          "description" : "Device-policy ID",
          "in" : "path",
          "name" : "devicePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DevicePolicy"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DevicePolicy"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DevicePolicyV1_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Device-Policy",
        "tags" : [ "Device Policy" ]
      }
    },
    "/dhcpConfigServiceProfiles" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a list of DHCP configuration service profiles. Use DELETE:/venues/{venueId}/dhcpConfigServiceProfiles/{dhcpConfigServiceProfileId} instead.",
        "operationId" : "deleteDhcpConfigServiceProfileBulk",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of DHCP Config Service Profile IDs",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete DHCP Configuration Service Profiles",
        "tags" : [ "DHCP Configuration Service Profile" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the DHCP configuration service profiles.",
        "operationId" : "getDhcpConfigServiceProfiles",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DhcpConfigServiceProfileDeep"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get DHCP Configuration Service Profiles",
        "tags" : [ "DHCP Configuration Service Profile" ]
      },
      "post" : {
        "description" : "Create a new DHCP configuration service profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "createDhcpConfigServiceProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpConfigServiceProfileDeep"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpConfigServiceProfileDeep"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpConfigServiceProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpConfigServiceProfileDeepOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpConfigServiceProfileDeepOperationResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create DHCP Configuration Service Profile",
        "tags" : [ "DHCP Configuration Service Profile" ]
      }
    },
    "/dhcpConfigServiceProfiles/{dhcpConfigServiceProfileId}" : {
      "delete" : {
        "description" : "Delete a DHCP configuration service profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "deleteDhcpConfigServiceProfile",
        "parameters" : [ {
          "description" : "DHCP Config Service Profile ID",
          "in" : "path",
          "name" : "dhcpConfigServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete DHCP Configuration Service Profile",
        "tags" : [ "DHCP Configuration Service Profile" ]
      },
      "get" : {
        "description" : "Get the DHCP configuration service profile details. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "getDhcpConfigServiceProfile",
        "parameters" : [ {
          "description" : "DHCP Config Service Profile ID",
          "in" : "path",
          "name" : "dhcpConfigServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpConfigServiceProfileDeep"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpConfigServiceProfileDeep"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpConfigServiceProfile"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get DHCP Configuration Service Profile",
        "tags" : [ "DHCP Configuration Service Profile" ]
      },
      "put" : {
        "description" : "Update a DHCP configuration service profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "updateDhcpConfigServiceProfile",
        "parameters" : [ {
          "description" : "DHCP Config Service Profile ID",
          "in" : "path",
          "name" : "dhcpConfigServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpConfigServiceProfileDeep"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpConfigServiceProfileDeep"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpConfigServiceProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update DHCP Configuration Service Profile",
        "tags" : [ "DHCP Configuration Service Profile" ]
      }
    },
    "/ethernetPortProfiles" : {
      "post" : {
        "description" : "Create a new ethernet port profile.",
        "operationId" : "createEthernetPortProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EthernetPortProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EthernetPortProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Ethernet Port Profile",
        "tags" : [ "Ethernet Port Profile" ]
      }
    },
    "/ethernetPortProfiles/{ethernetPortProfileId}" : {
      "delete" : {
        "description" : "Delete an ethernet port profile.",
        "operationId" : "deleteEthernetPortProfile",
        "parameters" : [ {
          "description" : "Ethernet port profile ID",
          "in" : "path",
          "name" : "ethernetPortProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Ethernet Port Profile",
        "tags" : [ "Ethernet Port Profile" ]
      },
      "get" : {
        "description" : "Get the ethernet port profile details.",
        "operationId" : "getEthernetPortProfile",
        "parameters" : [ {
          "description" : "Ethernet port profile ID",
          "in" : "path",
          "name" : "ethernetPortProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EthernetPortProfile"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EthernetPortProfile"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Ethernet Port Profile",
        "tags" : [ "Ethernet Port Profile" ]
      },
      "put" : {
        "description" : "Update an ethernet port profile.",
        "operationId" : "updateEthernetPortProfile",
        "parameters" : [ {
          "description" : "Ethernet port profile ID",
          "in" : "path",
          "name" : "ethernetPortProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EthernetPortProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EthernetPortProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Ethernet Port Profile",
        "tags" : [ "Ethernet Port Profile" ]
      }
    },
    "/ethernetPortProfiles/{ethernetPortProfileId}/radiusServerProfiles/{radiusServerProfileId}" : {
      "delete" : {
        "description" : "Deactivate RADIUS server profile on ethernet port profile for 802.1X authentication. Should be called after creating a 802.1X ethernet port profile.",
        "operationId" : "deactivateRadiusToEthernetPortProfile",
        "parameters" : [ {
          "description" : "Ethernet port profile ID.",
          "in" : "path",
          "name" : "ethernetPortProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "RADIUS Server Profile ID.",
          "in" : "path",
          "name" : "radiusServerProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate RADIUS Server Profile On Ethernet Port Profile",
        "tags" : [ "Ethernet Port Profile" ]
      },
      "put" : {
        "description" : "Activate RADIUS server profile on ethernet port profile for 802.1X authentication. Should be called after creating a 802.1X ethernet port profile.",
        "operationId" : "activateRadiusToEthernetPortProfile",
        "parameters" : [ {
          "description" : "Ethernet port profile ID.",
          "in" : "path",
          "name" : "ethernetPortProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "RADIUS Server Profile ID.",
          "in" : "path",
          "name" : "radiusServerProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate RADIUS Server Profile On Ethernet Port Profile",
        "tags" : [ "Ethernet Port Profile" ]
      }
    },
    "/hotspot20IdentityProviders" : {
      "post" : {
        "description" : "Add a Hotspot 2.0 identity provider.",
        "operationId" : "addHotspot20IdentityProvider",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hotspot20IdentityProvider"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hotspot20IdentityProvider"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Add Hotspot 2.0 Identity Provider",
        "tags" : [ "Hotspot 2.0 Identity Provider" ]
      }
    },
    "/hotspot20IdentityProviders/{hotspot20IdentityProviderId}" : {
      "delete" : {
        "description" : "Delete a Hotspot 2.0 identity provider.",
        "operationId" : "deleteHotspot20IdentityProvider",
        "parameters" : [ {
          "description" : "Hotspot 2.0 Identity Provider ID",
          "in" : "path",
          "name" : "hotspot20IdentityProviderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Hotspot 2.0 Identity Provider",
        "tags" : [ "Hotspot 2.0 Identity Provider" ]
      },
      "get" : {
        "description" : "Get a Hotspot 2.0 identity provider.",
        "operationId" : "getHotspot20IdentityProvider",
        "parameters" : [ {
          "description" : "Hotspot 2.0 Identity Provider ID",
          "in" : "path",
          "name" : "hotspot20IdentityProviderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hotspot20IdentityProvider"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hotspot20IdentityProvider"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Hotspot 2.0 Identity Provider",
        "tags" : [ "Hotspot 2.0 Identity Provider" ]
      },
      "put" : {
        "description" : "Update a Hotspot 2.0 identity provider.",
        "operationId" : "updateHotspot20IdentityProvider",
        "parameters" : [ {
          "description" : "Hotspot 2.0 Identity Provider ID",
          "in" : "path",
          "name" : "hotspot20IdentityProviderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hotspot20IdentityProvider"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hotspot20IdentityProvider"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Hotspot 2.0 Identity Provider",
        "tags" : [ "Hotspot 2.0 Identity Provider" ]
      }
    },
    "/hotspot20IdentityProviders/{hotspot20IdentityProviderId}/radiusServerProfiles/{radiusId}" : {
      "delete" : {
        "description" : "Use this API command to delete a relationship between RADIUS server profile and Hotspot 2.0 identity provider.",
        "operationId" : "deactivateRadiusServerProfileOnHotspot20IdentityProvider",
        "parameters" : [ {
          "description" : "Hotspot 2.0 identity provider ID",
          "in" : "path",
          "name" : "hotspot20IdentityProviderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "RADIUS server profile identity",
          "in" : "path",
          "name" : "radiusId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate RADIUS Server Profile On Hotspot 2.0 Identity Provider",
        "tags" : [ "RADIUS Profile" ]
      },
      "put" : {
        "description" : "Use this API command to build a relationship between RADIUS server profile and Hotspot 2.0 identity provider.",
        "operationId" : "activateRadiusServerProfileOnHotspot20IdentityProvider",
        "parameters" : [ {
          "description" : "Hotspot 2.0 identity provider ID",
          "in" : "path",
          "name" : "hotspot20IdentityProviderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "RADIUS server profile identity",
          "in" : "path",
          "name" : "radiusId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate RADIUS Server Profile On Hotspot 2.0 Identity Provider",
        "tags" : [ "RADIUS Profile" ]
      }
    },
    "/hotspot20Operators" : {
      "post" : {
        "description" : "Create a new Hotspot 2.0 operator.",
        "operationId" : "createHotspot20Operator",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hotspot20Operator"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hotspot20Operator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Hotspot 2.0 Operator",
        "tags" : [ "Hotspot 2.0 Operator" ]
      }
    },
    "/hotspot20Operators/{hotspot20OperatorId}" : {
      "delete" : {
        "description" : "Delete a Hotspot 2.0 operator.",
        "operationId" : "deleteHotspot20Operator",
        "parameters" : [ {
          "description" : "Hotspot 2.0 Operator ID",
          "in" : "path",
          "name" : "hotspot20OperatorId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Hotspot 2.0 Operator",
        "tags" : [ "Hotspot 2.0 Operator" ]
      },
      "get" : {
        "description" : "Get the Hotspot 2.0 operator details.",
        "operationId" : "getHotspot20Operator",
        "parameters" : [ {
          "description" : "Hotspot 2.0 Operator ID",
          "in" : "path",
          "name" : "hotspot20OperatorId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hotspot20Operator"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hotspot20Operator"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Hotspot 2.0 Operator",
        "tags" : [ "Hotspot 2.0 Operator" ]
      },
      "put" : {
        "description" : "Update a Hotspot 2.0 operator.",
        "operationId" : "updateHotspot20Operator",
        "parameters" : [ {
          "description" : "Hotspot 2.0 Operator ID",
          "in" : "path",
          "name" : "hotspot20OperatorId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hotspot20Operator"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hotspot20Operator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Hotspot 2.0 Operator",
        "tags" : [ "Hotspot 2.0 Operator" ]
      }
    },
    "/isolationAllowlists" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete client isolation allowlists.",
        "operationId" : "deleteClientIsolationAllowlistsBulk",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "Client isolation allowlist IDs.",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Isolation Allowlists",
        "tags" : [ "Client Isolation Allowlist" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the client isolation allowlists.",
        "operationId" : "getClientIsolationAllowlists",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ClientIsolationAllowlist"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Client Isolation Allowlists",
        "tags" : [ "Client Isolation Allowlist" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "Create a new client isolation allowlist.",
        "operationId" : "createClientIsolationAllowlist",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClientIsolationAllowlist"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientIsolationAllowlistOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Client Isolation Allowlist",
        "tags" : [ "Client Isolation Allowlist" ]
      }
    },
    "/isolationAllowlists/{clientIsolationAllowlistId}" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete this client isolation allowlist.",
        "operationId" : "deleteClientIsolationAllowlist",
        "parameters" : [ {
          "description" : "Client Isolation Allowlist ID",
          "in" : "path",
          "name" : "clientIsolationAllowlistId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Client Isolation Allowlist",
        "tags" : [ "Client Isolation Allowlist" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the details for this client isolation allowlist.",
        "operationId" : "getClientIsolationAllowlist",
        "parameters" : [ {
          "description" : "Client Isolation Allowlist ID",
          "in" : "path",
          "name" : "clientIsolationAllowlistId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientIsolationAllowlist"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Client Isolation Allowlist",
        "tags" : [ "Client Isolation Allowlist" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update this client isolation allowlist.",
        "operationId" : "updateClientIsolationAllowlist",
        "parameters" : [ {
          "description" : "Client Isolation Allowlist ID",
          "in" : "path",
          "name" : "clientIsolationAllowlistId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClientIsolationAllowlist"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Client Isolation Allowlist",
        "tags" : [ "Client Isolation Allowlist" ]
      }
    },
    "/isolationAllowlists/{clientIsolationAllowlistId}/venues/query" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get a list of venues of the client isolation allowlist.",
        "operationId" : "GetVenueUsage",
        "parameters" : [ {
          "description" : "Client Isolation Allowlist ID",
          "in" : "path",
          "name" : "clientIsolationAllowlistId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClientIsolationAllowlistVenueQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientIsolationAllowlistVenueQueryResponse"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Usage",
        "tags" : [ "Client Isolation Allowlist" ]
      }
    },
    "/l2AclPolicies" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete layer-2 ACL policies.",
        "operationId" : "deleteBulkL2AclPolicies",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Layer-2 ACL Policies.",
        "tags" : [ "L2ACL Policy" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get layer-2 ACL policy collection.",
        "operationId" : "getAllL2AclPolicies",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/L2AclPolicy"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Layer-2 ACL Policies.",
        "tags" : [ "L2ACL Policy" ]
      },
      "post" : {
        "description" : "Add layer-2 ACL by policy. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "addL2AclPolicy",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/L2AclPolicy"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/L2AclPolicy"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/L2AclPolicy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/L2AclPolicyOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/L2AclPolicyOperationResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Add Layer-2 ACL",
        "tags" : [ "L2ACL Policy" ]
      }
    },
    "/l2AclPolicies/{l2AclPolicyId}" : {
      "delete" : {
        "description" : "Delete layer-2 ACL by policy id. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "deleteL2AclPolicy",
        "parameters" : [ {
          "description" : "L2Acl Policy ID",
          "in" : "path",
          "name" : "l2AclPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Layer-2 ACL",
        "tags" : [ "L2ACL Policy" ]
      },
      "get" : {
        "description" : "Get layer-2 ACL by policy id.",
        "operationId" : "getL2AclPolicy",
        "parameters" : [ {
          "description" : "L2Acl Policy ID",
          "in" : "path",
          "name" : "l2AclPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/L2AclPolicy"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/L2AclPolicy"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Layer-2 ACL",
        "tags" : [ "L2ACL Policy" ]
      },
      "put" : {
        "description" : "Update layer-2 ACL by policy id. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "updateL2AclPolicy",
        "parameters" : [ {
          "description" : "L2Acl Policy ID",
          "in" : "path",
          "name" : "l2AclPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/L2AclPolicy"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/L2AclPolicy"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/L2AclPolicy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Layer-2 ACL",
        "tags" : [ "L2ACL Policy" ]
      }
    },
    "/l3AclPolicies" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete layer-3 ACL policies.",
        "operationId" : "deleteBulkL3AclPolicies",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Layer-3 ACL Policies.",
        "tags" : [ "L3ACL Policy" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get layer-3 ACL policy collection.",
        "operationId" : "getAllL3AclPolicies",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/L3AclPolicy"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Layer-3 ACL Policies.",
        "tags" : [ "L3ACL Policy" ]
      },
      "post" : {
        "description" : "Add layer-3 ACL by policy. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "addL3AclPolicy",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/L3AclPolicy"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/L3AclPolicy"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/L3AclPolicy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/L3AclPolicyOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/L3AclPolicyOperationResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Add Layer-3 ACL",
        "tags" : [ "L3ACL Policy" ]
      }
    },
    "/l3AclPolicies/{l3AclPolicyId}" : {
      "delete" : {
        "description" : "Delete layer-3 ACL by policy id. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "deleteL3AclPolicy",
        "parameters" : [ {
          "description" : "L3Acl Policy ID",
          "in" : "path",
          "name" : "l3AclPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Layer-3 ACL",
        "tags" : [ "L3ACL Policy" ]
      },
      "get" : {
        "description" : "Get layer-3 ACL by policy id.",
        "operationId" : "getL3AclPolicy",
        "parameters" : [ {
          "description" : "L3Acl Policy ID",
          "in" : "path",
          "name" : "l3AclPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/L3AclPolicy"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/L3AclPolicy"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Layer-3 ACL",
        "tags" : [ "L3ACL Policy" ]
      },
      "put" : {
        "description" : "Update layer-3 ACL by policy id. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "updateL3AclPolicy",
        "parameters" : [ {
          "description" : "L3Acl Policy ID",
          "in" : "path",
          "name" : "l3AclPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/L3AclPolicy"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/L3AclPolicy"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/L3AclPolicy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Layer-3 ACL",
        "tags" : [ "L3ACL Policy" ]
      }
    },
    "/lbsServerProfiles" : {
      "post" : {
        "description" : "Create a new location based service server profile.",
        "operationId" : "createLbsServerProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LbsServerProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LbsServerProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Location Based Service Server Profile",
        "tags" : [ "LBS Server Profile" ]
      }
    },
    "/lbsServerProfiles/{lbsServerProfileId}" : {
      "delete" : {
        "description" : "Delete a location based service server profile.",
        "operationId" : "deleteLbsServerProfile",
        "parameters" : [ {
          "description" : "Location based service server profile ID",
          "in" : "path",
          "name" : "lbsServerProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Location Based Service Server Profile",
        "tags" : [ "LBS Server Profile" ]
      },
      "get" : {
        "description" : "Get the location based service server profile details.",
        "operationId" : "getLbsServerProfile",
        "parameters" : [ {
          "description" : "Location based service server profile ID",
          "in" : "path",
          "name" : "lbsServerProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LbsServerProfile"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LbsServerProfile"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Location Based Service Server Profile",
        "tags" : [ "LBS Server Profile" ]
      },
      "put" : {
        "description" : "Update a location based service server profile.",
        "operationId" : "updateLbsServerProfile",
        "parameters" : [ {
          "description" : "Location based service server profile ID",
          "in" : "path",
          "name" : "lbsServerProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LbsServerProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LbsServerProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Location Based Service Server Profile",
        "tags" : [ "LBS Server Profile" ]
      }
    },
    "/mDnsProxyServiceProfiles" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a list of multicast DNS proxy service profiles.",
        "operationId" : "deleteMulticastDnsProxyServiceProfilesBulk",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of Multicast DNS Proxy Service Profile IDs",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Multicast DNS Proxy Service Profiles",
        "tags" : [ "MDNS Proxy Service Profile" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the multicast DNS proxy service profiles.",
        "operationId" : "getMulticastDnsProxyServiceProfiles",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MulticastDnsProxyServiceProfileResponse"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Multicast DNS Proxy Service Profiles",
        "tags" : [ "MDNS Proxy Service Profile" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "Create a new multicast DNS proxy service profile.",
        "operationId" : "createMulticastDnsProxyServiceProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MulticastDnsProxyServiceProfileRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Multicast DNS Proxy Service Profile",
        "tags" : [ "MDNS Proxy Service Profile" ]
      }
    },
    "/mDnsProxyServiceProfiles/{mDnsProxyProfileId}" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a multicast DNS proxy service profile.",
        "operationId" : "deleteMulticastDnsProxyServiceProfile",
        "parameters" : [ {
          "description" : "Multicast DNS Proxy Service Profile ID",
          "in" : "path",
          "name" : "mDnsProxyProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Multicast DNS Proxy Service Profile",
        "tags" : [ "MDNS Proxy Service Profile" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the multicast DNS proxy service profile details.",
        "operationId" : "getMulticastDnsProxyServiceProfile",
        "parameters" : [ {
          "description" : "Multicast DNS Proxy profile ID",
          "in" : "path",
          "name" : "mDnsProxyProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MulticastDnsProxyServiceProfileResponse"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Multicast DNS Proxy Service Profile",
        "tags" : [ "MDNS Proxy Service Profile" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update a multicast DNS proxy service profile.",
        "operationId" : "updateMulticastDnsProxyServiceProfile",
        "parameters" : [ {
          "description" : "Multicast DNS Proxy Service Profile ID",
          "in" : "path",
          "name" : "mDnsProxyProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MulticastDnsProxyServiceProfileRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Multicast DNS Proxy Service Profile",
        "tags" : [ "MDNS Proxy Service Profile" ]
      }
    },
    "/mDnsProxyServiceProfiles/{mDnsProxyProfileId}/aps" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Deactivate multicast DNS proxy service profile for APs.",
        "operationId" : "deactivateMulticastDnsProxyServiceProfileAp",
        "parameters" : [ {
          "description" : "Multicast DNS Proxy Service Profile ID",
          "in" : "path",
          "name" : "mDnsProxyProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of AP Serial Numbers",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Multicast DNS Proxy Service Profile for APs",
        "tags" : [ "MDNS Proxy Service Profile" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "Activate multicast DNS proxy service profile for APs.",
        "operationId" : "activateMulticastDnsProxyServiceProfileAp",
        "parameters" : [ {
          "description" : "Multicast DNS Proxy Service Profile ID",
          "in" : "path",
          "name" : "mDnsProxyProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of AP Serial Numbers",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Multicast DNS Proxy Service Profile for APs",
        "tags" : [ "MDNS Proxy Service Profile" ]
      }
    },
    "/multicastDnsProxyProfiles" : {
      "post" : {
        "description" : "Create a new multicast DNS proxy service profile.",
        "operationId" : "createMulticastDnsProxyProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MulticastDnsProxyProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MulticastDnsProxyProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Multicast DNS Proxy Service Profile",
        "tags" : [ "MDNS Proxy Service Profile" ]
      }
    },
    "/multicastDnsProxyProfiles/{multicastDnsProxyProfileId}" : {
      "delete" : {
        "description" : "Delete a multicast DNS proxy service profile.",
        "operationId" : "deleteMulticastDnsProxyProfile",
        "parameters" : [ {
          "description" : "Multicast DNS Proxy Profile ID",
          "in" : "path",
          "name" : "multicastDnsProxyProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Multicast DNS Proxy Service Profile",
        "tags" : [ "MDNS Proxy Service Profile" ]
      },
      "get" : {
        "description" : "Get the multicast DNS proxy service profile details.",
        "operationId" : "getMulticastDnsProxyProfile",
        "parameters" : [ {
          "description" : "Multicast DNS Proxy profile ID",
          "in" : "path",
          "name" : "multicastDnsProxyProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MulticastDnsProxyProfile"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MulticastDnsProxyProfile"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Multicast DNS Proxy Service Profile",
        "tags" : [ "MDNS Proxy Service Profile" ]
      },
      "put" : {
        "description" : "Update a multicast DNS proxy service profile.",
        "operationId" : "updateMulticastDnsProxyProfile",
        "parameters" : [ {
          "description" : "Multicast DNS Proxy Profile ID",
          "in" : "path",
          "name" : "multicastDnsProxyProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MulticastDnsProxyProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MulticastDnsProxyProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Multicast DNS Proxy Service Profile",
        "tags" : [ "MDNS Proxy Service Profile" ]
      }
    },
    "/networkActivations" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a list of network-venue activation.",
        "operationId" : "deleteNetworkVenuesBulk",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of network-venue activation IDs",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Network Activation",
        "tags" : [ "Wi-Fi Network Activation" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "Create a new network-venue activation.",
        "operationId" : "createNetworkVenue",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkVenue"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkVenueOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Network Activation",
        "tags" : [ "Wi-Fi Network Activation" ]
      }
    },
    "/networkActivations/mappings" : {
      "post" : {
        "deprecated" : true,
        "description" : "Create multiple network-venue activations.",
        "operationId" : "createNetworkVenueMappings",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/NetworkActivationMapping"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Network Activation Mappings",
        "tags" : [ "Wi-Fi Network Activation" ]
      }
    },
    "/networkActivations/query" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get network-venue activation list.",
        "operationId" : "getNetworkActivationsByQuery",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkActivationsQueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkActivationsQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkActivationsQueryResponse"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Network Activations by Query Filter",
        "tags" : [ "Wi-Fi Network Activation" ]
      }
    },
    "/networkActivations/{networkVenueId}" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a network-venue activation.",
        "operationId" : "deleteNetworkVenue",
        "parameters" : [ {
          "description" : "Network-venue activation ID",
          "in" : "path",
          "name" : "networkVenueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Network Activation",
        "tags" : [ "Wi-Fi Network Activation" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the network-venue activation details.",
        "operationId" : "getNetworkVenue",
        "parameters" : [ {
          "description" : "Network-venue activation ID",
          "in" : "path",
          "name" : "networkVenueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkVenue"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Network Activation",
        "tags" : [ "Wi-Fi Network Activation" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update this network-venue activation.",
        "operationId" : "updateNetworkVenue",
        "parameters" : [ {
          "description" : "Network-venue activation ID",
          "in" : "path",
          "name" : "networkVenueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkVenue"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Network Activation",
        "tags" : [ "Wi-Fi Network Activation" ]
      }
    },
    "/networks" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a list of networks.",
        "operationId" : "deleteNetworksBulk",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of network IDs",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Networks",
        "tags" : [ "Wi-Fi Network" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the network list.",
        "operationId" : "getNetworks",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Network"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Networks",
        "tags" : [ "Wi-Fi Network" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "Create a new network.",
        "operationId" : "createNetwork",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/AAANetwork"
                }, {
                  "$ref" : "#/components/schemas/DpskNetwork"
                }, {
                  "$ref" : "#/components/schemas/GuestNetwork"
                }, {
                  "$ref" : "#/components/schemas/Hotspot20Network"
                }, {
                  "$ref" : "#/components/schemas/OpenNetwork"
                }, {
                  "$ref" : "#/components/schemas/PskNetwork"
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Network",
        "tags" : [ "Wi-Fi Network" ]
      }
    },
    "/networks/qosMapSets" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get default rules for QoS map set.",
        "operationId" : "getDefaultQosMapSets",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QosMapSetOptions"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Default Rules for QoS Map Set",
        "tags" : [ "Wi-Fi Network" ]
      }
    },
    "/networks/wisprProviders" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get the list of external WISPr providers for a captive portal network. Note: these providers have integrated their service with the RUCKUS cloud.",
        "operationId" : "getExternalProviders",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalProviders"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get External WISPr Providers",
        "tags" : [ "Wi-Fi Network" ]
      }
    },
    "/networks/{networkId}" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a network.",
        "operationId" : "deleteNetwork",
        "parameters" : [ {
          "description" : "Network ID",
          "in" : "path",
          "name" : "networkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Network",
        "tags" : [ "Wi-Fi Network" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the network details.",
        "operationId" : "getNetwork",
        "parameters" : [ {
          "description" : "Network ID",
          "in" : "path",
          "name" : "networkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Get deep details of this network.",
          "in" : "query",
          "name" : "deep",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Network"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Network",
        "tags" : [ "Wi-Fi Network" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update this network, including nested details.",
        "operationId" : "updateNetwork",
        "parameters" : [ {
          "description" : "Network ID",
          "in" : "path",
          "name" : "networkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/AAANetwork"
                }, {
                  "$ref" : "#/components/schemas/DpskNetwork"
                }, {
                  "$ref" : "#/components/schemas/GuestNetwork"
                }, {
                  "$ref" : "#/components/schemas/Hotspot20Network"
                }, {
                  "$ref" : "#/components/schemas/OpenNetwork"
                }, {
                  "$ref" : "#/components/schemas/PskNetwork"
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Network",
        "tags" : [ "Wi-Fi Network" ]
      }
    },
    "/radiusServerProfiles" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a list of RADIUS profiles.",
        "operationId" : "deleteRadiuses",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete RADIUS Profiles",
        "tags" : [ "RADIUS Profile" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "List RADIUS profiles.",
        "operationId" : "getRadiuses",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Radius"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "List RADIUS Profiles",
        "tags" : [ "RADIUS Profile" ]
      },
      "post" : {
        "description" : "Add a RADIUS profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "addRadius",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Radius"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Radius"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RadiusServerProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RadiusOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RadiusOperationResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Add RADIUS Profile",
        "tags" : [ "RADIUS Profile" ]
      }
    },
    "/radiusServerProfiles/{radiusId}" : {
      "delete" : {
        "description" : "Delete a specific RADIUS profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "deleteRadius",
        "parameters" : [ {
          "description" : "RADIUS server profile ID",
          "in" : "path",
          "name" : "radiusId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete RADIUS Profile",
        "tags" : [ "RADIUS Profile" ]
      },
      "get" : {
        "description" : "Get a specific RADIUS profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "getRadius",
        "parameters" : [ {
          "description" : "RADIUS server profile ID",
          "in" : "path",
          "name" : "radiusId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Radius"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Radius"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RadiusServerProfile"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get RADIUS Profile",
        "tags" : [ "RADIUS Profile" ]
      },
      "put" : {
        "description" : "Update a specific RADIUS profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "updateRadius",
        "parameters" : [ {
          "description" : "RADIUS server profile ID",
          "in" : "path",
          "name" : "radiusId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Radius"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Radius"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RadiusServerProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update RADIUS Profile",
        "tags" : [ "RADIUS Profile" ]
      }
    },
    "/recoveryPskSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get the PSK for the recovery network.",
        "operationId" : "getRecoveryPsk",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPsk"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Recovery PSK",
        "tags" : [ "Recovery" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update the PSK for the recovery network.",
        "operationId" : "updateRecoveryPsk",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecoveryPsk"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Recovery PSK",
        "tags" : [ "Recovery" ]
      }
    },
    "/rogueApPolicyProfiles" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a list of rogue AP detection policies. Use DELETE /roguePolicies/{roguePolicyId} instead.",
        "operationId" : "deleteRogueApPolicyProfiles",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of Rogue AP Detection Policy IDs.",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete AP Detection Policies",
        "tags" : [ "Rogue AP Detection Policy" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get a list of rogue AP detection policies. Use POST /roguePolicies/query instead.",
        "operationId" : "getRogueApPolicyProfiles",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RogueClassificationPolicy"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Rogue AP Detection Policies",
        "tags" : [ "Rogue AP Detection Policy" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "Create a rogue AP detection policy. Use POST /roguePolicies instead.",
        "operationId" : "addRogueApPolicyProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RogueClassificationPolicy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RogueClassificationPolicyOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Rogue AP Detection Policy",
        "tags" : [ "Rogue AP Detection Policy" ]
      }
    },
    "/rogueApPolicyProfiles/{roguePolicyId}" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete this rogue AP detection policy. Use DELETE /roguePolicies/{roguePolicyId} instead.",
        "operationId" : "deleteRogueApPolicyProfile",
        "parameters" : [ {
          "description" : "Rogue AP Detection Policy ID.",
          "in" : "path",
          "name" : "roguePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Rogue AP Detection Policy",
        "tags" : [ "Rogue AP Detection Policy" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get this rogue AP detection policy. Use GET /roguePolicies/{roguePolicyId} instead.",
        "operationId" : "getRogueApPolicyProfile",
        "parameters" : [ {
          "description" : "Rogue AP Detection Policy ID.",
          "in" : "path",
          "name" : "roguePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RogueClassificationPolicy"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Rogue AP Detection Policy",
        "tags" : [ "Rogue AP Detection Policy" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update this rogue AP detection policy. Use PUT /roguePolicies/{roguePolicyId} instead.",
        "operationId" : "updateRogueApPolicyProfile",
        "parameters" : [ {
          "description" : "Rogue AP Detection Policy ID.",
          "in" : "path",
          "name" : "roguePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RogueClassificationPolicy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Rogue AP Detection Policy",
        "tags" : [ "Rogue AP Detection Policy" ]
      }
    },
    "/rogueApPolicyProfiles/{roguePolicyId}/venues" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete the binding between a rogue AP detection policy and its list of venues and apply the default policy to those venues instead. Note that unbinding a policy from a venue does not disable rogue AP detection in that venue. Use DELETE /venues/{venueId}/roguePolicies/{roguePolicyId} instead.",
        "operationId" : "unbindRogueApPolicyProfileFromVenues",
        "parameters" : [ {
          "description" : "Rogue AP Detection Policy ID.",
          "in" : "path",
          "name" : "roguePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of Venue IDs.",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Unbind Rogue AP Detection Policy from Venues",
        "tags" : [ "Rogue AP Detection Policy" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "Bind a rogue AP detection policy to a list of venues. Use PUT /venues/{venueId}/roguePolicies/{roguePolicyId} instead.",
        "operationId" : "bindRogueApPolicyProfileToVenues",
        "parameters" : [ {
          "description" : "Rogue AP Detection Policy ID.",
          "in" : "path",
          "name" : "roguePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of Venue IDs.",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Rogue AP Detection Policy Venue Bindings",
        "tags" : [ "Rogue AP Detection Policy" ]
      }
    },
    "/roguePolicies" : {
      "post" : {
        "description" : "Create a rogue AP detection policy.",
        "operationId" : "addRoguePolicy",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoguePolicy"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoguePolicy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Rogue AP Detection Policy",
        "tags" : [ "Rogue AP Detection Policy" ]
      }
    },
    "/roguePolicies/{roguePolicyId}" : {
      "delete" : {
        "description" : "Delete this rogue AP detection policy.",
        "operationId" : "deleteRoguePolicy",
        "parameters" : [ {
          "description" : "Rogue AP Detection Policy ID.",
          "in" : "path",
          "name" : "roguePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Rogue AP Detection Policy",
        "tags" : [ "Rogue AP Detection Policy" ]
      },
      "get" : {
        "description" : "Get this rogue AP detection policy.",
        "operationId" : "getRoguePolicy",
        "parameters" : [ {
          "description" : "Rogue AP Detection Policy ID.",
          "in" : "path",
          "name" : "roguePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoguePolicy"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoguePolicy"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Rogue AP Detection Policy",
        "tags" : [ "Rogue AP Detection Policy" ]
      },
      "put" : {
        "description" : "Update this rogue AP detection policy.",
        "operationId" : "updateRoguePolicy",
        "parameters" : [ {
          "description" : "Rogue AP Detection Policy ID.",
          "in" : "path",
          "name" : "roguePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoguePolicy"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoguePolicy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Rogue AP Detection Policy",
        "tags" : [ "Rogue AP Detection Policy" ]
      }
    },
    "/snmpAgentProfiles" : {
      "post" : {
        "description" : "Create a new SNMP agent profile.",
        "operationId" : "createSnmpAgentProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SnmpAgentProfileV1_1"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SnmpAgentProfileV1_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create SNMP Agent Profile",
        "tags" : [ "SNMP Agent Profile" ]
      }
    },
    "/snmpAgentProfiles/{snmpAgentProfileId}" : {
      "delete" : {
        "description" : "Delete a SNMP agent profile.",
        "operationId" : "deleteSnmpAgentProfile",
        "parameters" : [ {
          "description" : "SNMP Agent Profile ID",
          "in" : "path",
          "name" : "snmpAgentProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete SNMP Agent Profile",
        "tags" : [ "SNMP Agent Profile" ]
      },
      "get" : {
        "description" : "Get the details for this SNMP agent profile.",
        "operationId" : "getSnmpAgentProfile",
        "parameters" : [ {
          "description" : "SNMP Agent Profile ID",
          "in" : "path",
          "name" : "snmpAgentProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SnmpAgentProfileV1_1"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SnmpAgentProfileV1_1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get SNMP Agent Profile",
        "tags" : [ "SNMP Agent Profile" ]
      },
      "put" : {
        "description" : "Update a SNMP agent profile.",
        "operationId" : "updateSnmpAgentProfile",
        "parameters" : [ {
          "description" : "SNMP Agent Profile ID",
          "in" : "path",
          "name" : "snmpAgentProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SnmpAgentProfileV1_1"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SnmpAgentProfileV1_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update SNMP Agent Profile",
        "tags" : [ "SNMP Agent Profile" ]
      }
    },
    "/softGreProfiles" : {
      "post" : {
        "description" : "Add a SoftGRE profile.",
        "operationId" : "addSoftGreProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SoftGreProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SoftGreProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Add SoftGRE Profile",
        "tags" : [ "SoftGRE Profile" ]
      }
    },
    "/softGreProfiles/{softGreProfileId}" : {
      "delete" : {
        "description" : "Delete the specified SoftGRE profile.",
        "operationId" : "deleteSoftGreProfile",
        "parameters" : [ {
          "description" : "SoftGRE profile identity",
          "in" : "path",
          "name" : "softGreProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete SoftGRE Profile",
        "tags" : [ "SoftGRE Profile" ]
      },
      "get" : {
        "description" : "Get a SoftGRE profile by profile identity.",
        "operationId" : "getSoftGreProfile",
        "parameters" : [ {
          "description" : "SoftGRE profile identity",
          "in" : "path",
          "name" : "softGreProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SoftGreProfile"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SoftGreProfile"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get SoftGRE Profile",
        "tags" : [ "SoftGRE Profile" ]
      },
      "put" : {
        "description" : "Update the specified SoftGRE profile.",
        "operationId" : "updateSoftGreProfile",
        "parameters" : [ {
          "description" : "SoftGRE profile identity",
          "in" : "path",
          "name" : "softGreProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SoftGreProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SoftGreProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update SoftGRE Profile",
        "tags" : [ "SoftGRE Profile" ]
      }
    },
    "/syslogServerProfiles" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a list of syslog server profiles.",
        "operationId" : "deleteSyslogServerProfileBulk",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of Syslog Server Profile IDs",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Syslog Server Profiles",
        "tags" : [ "Syslog Server Profile" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the syslog server profiles.",
        "operationId" : "getSyslogServerProfiles",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SyslogServerProfile"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Syslog Server Profiles",
        "tags" : [ "Syslog Server Profile" ]
      },
      "post" : {
        "description" : "Create a new syslog server profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "createSyslogServerProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyslogServerProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyslogServerProfile"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyslogServerProfileV1_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Syslog Server Profile",
        "tags" : [ "Syslog Server Profile" ]
      }
    },
    "/syslogServerProfiles/{syslogServerProfileId}" : {
      "delete" : {
        "description" : "Delete a syslog server profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "deleteSyslogServerProfile",
        "parameters" : [ {
          "description" : "Syslog Server Profile ID",
          "in" : "path",
          "name" : "syslogServerProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Syslog Server Profile",
        "tags" : [ "Syslog Server Profile" ]
      },
      "get" : {
        "description" : "Get syslog server profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "getSyslogServerProfile",
        "parameters" : [ {
          "description" : "Syslog Server Profile ID",
          "in" : "path",
          "name" : "syslogServerProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyslogServerProfile"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyslogServerProfile"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyslogServerProfileV1_1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Syslog Server Profile",
        "tags" : [ "Syslog Server Profile" ]
      },
      "put" : {
        "description" : "Update a syslog server profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "updateSyslogServerProfile",
        "parameters" : [ {
          "description" : "Syslog Server Profile ID",
          "in" : "path",
          "name" : "syslogServerProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyslogServerProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyslogServerProfile"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyslogServerProfileV1_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Syslog Server Profile",
        "tags" : [ "Syslog Server Profile" ]
      }
    },
    "/tunnelServiceProfiles" : {
      "post" : {
        "description" : "Use this API command to create a new tunnel service profile.",
        "operationId" : "createTunnelServiceProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TunnelServiceProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TunnelServiceProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Add Tunnel Service Profile",
        "tags" : [ "Tunnel Service Profile" ]
      }
    },
    "/tunnelServiceProfiles/{tunnelServiceProfileId}" : {
      "delete" : {
        "description" : "Use this API command to delete a tunnel service profile.",
        "operationId" : "deleteTunnelServiceProfile",
        "parameters" : [ {
          "description" : "Tunnel Service Profile ID",
          "in" : "path",
          "name" : "tunnelServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Tunnel Service Profile",
        "tags" : [ "Tunnel Service Profile" ]
      },
      "get" : {
        "description" : "Use this API command to get the tunnel service profile details.",
        "operationId" : "getTunnelServiceProfile",
        "parameters" : [ {
          "description" : "Tunnel Service Profile ID",
          "in" : "path",
          "name" : "tunnelServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TunnelServiceProfile"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TunnelServiceProfile"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Tunnel Service Profile",
        "tags" : [ "Tunnel Service Profile" ]
      },
      "patch" : {
        "description" : "Use this API command to partial update a tunnel service profile.",
        "operationId" : "patchTunnelServiceProfile",
        "parameters" : [ {
          "description" : "Tunnel Service Profile ID",
          "in" : "path",
          "name" : "tunnelServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TunnelServiceProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TunnelServiceProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Partial Update Tunnel Service Profile",
        "tags" : [ "Tunnel Service Profile" ]
      },
      "put" : {
        "description" : "Use this API command to update a tunnel service profile.",
        "operationId" : "updateTunnelServiceProfile",
        "parameters" : [ {
          "description" : "Tunnel Service Profile ID",
          "in" : "path",
          "name" : "tunnelServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TunnelServiceProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TunnelServiceProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Tunnel Service Profile",
        "tags" : [ "Tunnel Service Profile" ]
      }
    },
    "/venues/apAvailableLteBands" : {
      "get" : {
        "description" : "Get available LTE bands for each region.",
        "operationId" : "getVenueApAvailableLteBands",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VenueApAvailableLteBands"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VenueApAvailableLteBands"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Available LTE Bands",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/apCompatibilities/query" : {
      "post" : {
        "description" : "Details of the feature requirements, including the supported AP firmware and models, as well as the count of compatible and incompatible APs based on the targeted venues.",
        "operationId" : "venueCompatibilitiesQuery",
        "parameters" : [ {
          "in" : "query",
          "name" : "preCheck",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompatibilityVenueNetworkRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompatibilityVenueNetworkRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApCompatibilitiesV1"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApCompatibilitiesV1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Venue Compatibility Query",
        "tags" : [ "AP Compatibility" ]
      }
    },
    "/venues/apGroups" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a list of AP-groups.",
        "operationId" : "deleteAPGroupsBulk",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of AP-group IDs",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete AP-Groups",
        "tags" : [ "AP Group" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the AP-group list.",
        "operationId" : "getApGroups",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApGroupDeep"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP-Groups",
        "tags" : [ "AP Group" ]
      }
    },
    "/venues/apGroups/{apGroupId}" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete an AP-group.",
        "operationId" : "deleteAPGroup",
        "parameters" : [ {
          "description" : "AP-group ID",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete AP-Group",
        "tags" : [ "AP Group" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the AP-group details.",
        "operationId" : "getAPGroup",
        "parameters" : [ {
          "description" : "AP-group ID",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApGroupDeep"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP-Group",
        "tags" : [ "AP Group" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update an AP-group.<BR>Note: AP-Groups cannot be moved between venues, but a single AP can be moved between venues using the update AP endpoint.",
        "operationId" : "updateAPGroup",
        "parameters" : [ {
          "description" : "AP-group ID",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApGroup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP-Group",
        "tags" : [ "AP Group" ]
      }
    },
    "/venues/apGroups/{apGroupId}/aps" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get the APs in the AP-group.",
        "operationId" : "getApsByAPGroup",
        "parameters" : [ {
          "description" : "AP-group ID",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Ap"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get APs by AP-Group",
        "tags" : [ "AP" ]
      }
    },
    "/venues/apModelCapabilities" : {
      "get" : {
        "description" : "Get all AP model capabilities of the venue.",
        "operationId" : "getApModelCapabilities",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApModelCapabilities"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApModelCapabilities"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue All AP-Model Capabilities",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/aps" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a list of APs.",
        "operationId" : "deleteApsBulk",
        "parameters" : [ {
          "description" : "Reset AP firmware to Standalone image.",
          "in" : "query",
          "name" : "resetFirmware",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of AP serial-numbers",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete APs",
        "tags" : [ "AP" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the AP list.",
        "operationId" : "getAps",
        "parameters" : [ {
          "description" : "Include operational data in response",
          "in" : "query",
          "name" : "operational",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Ap"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get APs",
        "tags" : [ "AP" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "Add a list of new APs.",
        "operationId" : "addAps_1",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ApRequest"
                }
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                },
                "required" : [ "file" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Add APs",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/apCompatibilities/query" : {
      "post" : {
        "description" : "Details of the feature requirements, including the supported AP firmware and models based on the targeted APs.",
        "operationId" : "apCompatibilitiesQuery",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompatibilityApRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompatibilityApRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApCompatibilitiesV1"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApCompatibilitiesV1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "AP Compatibility Query",
        "tags" : [ "AP Compatibility" ]
      }
    },
    "/venues/aps/capabilities" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "getCapabilities",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Capabilities"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Capabilities",
        "tags" : [ "Recovery" ]
      }
    },
    "/venues/aps/importResults" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get result for import APs from CSV file.",
        "operationId" : "getImportApsResults",
        "parameters" : [ {
          "description" : "The request-id of import aps request for querying the result.",
          "in" : "query",
          "name" : "requestId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportDetails"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "402" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Insufficient license [ENT-10003: \"Insufficient Licenses\"]"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Result for Import APs from CSV File",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete an AP.",
        "operationId" : "deleteAP",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Reset AP firmware to Standalone image.",
          "in" : "query",
          "name" : "resetFirmware",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete AP",
        "tags" : [ "AP" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the AP operational and configuration data.",
        "operationId" : "getAP",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Include operational data in response",
          "in" : "query",
          "name" : "operational",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApDeep"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP",
        "tags" : [ "AP" ]
      },
      "patch" : {
        "deprecated" : true,
        "description" : "Trigger AP action.",
        "operationId" : "TriggerApAction",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApPatchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApPatchResponseOperationResponse"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Trigger AP Action",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update an AP.",
        "operationId" : "updateAP",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/bssColoringSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get basic service set coloring settings of this AP.",
        "operationId" : "getApBssColoringSettings",
        "parameters" : [ {
          "description" : "The serial number of the AP",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApBssColoring"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Basic Service Set Coloring Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update basic service set coloring settings of this AP.",
        "operationId" : "updateApBssColoringSettings",
        "parameters" : [ {
          "description" : "The serial number of the AP",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApBssColoring"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Basic Service Set Coloring Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/capabilities" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "getApCapabilities",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Capabilities"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Capabilities",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/channels" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get AP default regulatory channels.",
        "operationId" : "getValidChannelsBySerialNumber",
        "parameters" : [ {
          "description" : "AP serialNumber",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueRegulatoryChannels"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Default Regulatory-Channels",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/clientAdmissionControlSettings" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Reset the client admission control settings of this AP to the default values.",
        "operationId" : "resetApClientAdmissionControlSettings",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Reset AP Client Admission Control Settings",
        "tags" : [ "AP" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the client admission control settings of this AP.",
        "operationId" : "getApClientAdmissionControlSettings",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApClientAdmissionControl"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApClientAdmissionControl"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Client Admission Control Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update the client admission control settings of this AP.",
        "operationId" : "updateApClientAdmissionControlSettings",
        "parameters" : [ {
          "description" : "The serial number of the AP",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApClientAdmissionControl"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApClientAdmissionControl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Client Admission Control Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/dhcpLeases" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get DHCP lease time collections.",
        "operationId" : "getDhcpLeaseTimes",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DhcpClientLeaseTime"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get DHCP Lease Times",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/dhcpPoolUsages" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get DHCP pool usage.",
        "operationId" : "getDhcpPoolUsages",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DhcpServiceProfileUsage"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get DHCP Pool Usages",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/directedMulticastSettings" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Reset AP directed multicast to default settings.",
        "operationId" : "resetApDirectedMulticast",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Reset AP Directed Multicast Settings",
        "tags" : [ "AP" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get directed multicast settings for this AP.",
        "operationId" : "getApDirectedMulticast",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApDirectedMulticast"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Directed Multicast Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update directed multicast settings of this AP.",
        "operationId" : "updateApDirectedMulticast",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApDirectedMulticast"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Directed Multicast Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/floorPositions" : {
      "put" : {
        "deprecated" : true,
        "description" : "Update an AP floor-plan position.",
        "operationId" : "updateAPPosition",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApPosition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Position",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/lanPortSettings" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Reset the LAN-ports of an AP to the default values.",
        "operationId" : "resetAPLanPorts",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Reset AP LAN-Ports",
        "tags" : [ "AP" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get AP LAN-ports details.",
        "operationId" : "getAPLanPorts",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApLanPorts"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP LAN-Ports",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update LAN-ports of an AP.",
        "operationId" : "updateAPLanPorts",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApLanPorts"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP LAN-Ports",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/ledSettings" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Reset the LED of an AP to the default values.",
        "operationId" : "resetAPLED",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Reset AP LED",
        "tags" : [ "AP" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get AP LED settings.",
        "operationId" : "getAPLed",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApLed"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP LED",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update LED of an AP.",
        "operationId" : "updateAPLED",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApLed"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP LED",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/logs" : {
      "get" : {
        "deprecated" : true,
        "description" : "Download the AP log file.",
        "operationId" : "downloadAPLog",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApDownloadLog"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Download AP Log",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/meshSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get mesh settings for this AP.",
        "operationId" : "getApMeshOptions",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApMesh"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Mesh Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update mesh settings of this AP.",
        "operationId" : "UpdateApMeshOptions",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApMesh"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Mesh Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/networkSettings" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Reset AP network settings.",
        "operationId" : "resetApNetworkSettings",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Reset AP Network Settings",
        "tags" : [ "AP" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get network settings for this AP.",
        "operationId" : "getApNetworkSettings",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Network Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update network settings of this AP.",
        "operationId" : "updateApNetworkSettings",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Network Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/packets" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Stop packet capture.",
        "operationId" : "stopPacketCapture",
        "parameters" : [ {
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ACXApPacketCaptureStopRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Stop Packet Capture",
        "tags" : [ "AP" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get packet capture state.",
        "operationId" : "getPacketCaptureState",
        "parameters" : [ {
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ACXApPacketCaptureStateResponse"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Packet Capture State",
        "tags" : [ "AP" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "Start packet capture.",
        "operationId" : "startPacketCapture",
        "parameters" : [ {
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApPacketCaptureStartRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ACXApPacketCaptureStartResponseOperationResponse"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "409" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Conflict [WIFI-10477: \"Duplicate sessionId exists\"]"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Start Packet Capture",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/pictures" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete AP picture.",
        "operationId" : "DeleteApPicture",
        "parameters" : [ {
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete AP Picture",
        "tags" : [ "AP" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get AP picture.",
        "operationId" : "getApPicture",
        "parameters" : [ {
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApPicture"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Picture",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Upload AP picture.",
        "operationId" : "UploadApPicture",
        "parameters" : [ {
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                },
                "required" : [ "file" ]
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Upload AP Picture",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/radioSettings" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Reset AP radio to default settings.",
        "operationId" : "resetAPRadio",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Reset AP Radio Customization",
        "tags" : [ "AP" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get AP radio details.",
        "operationId" : "getAPRadio",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApRadioCustomization"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Radio",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update an AP radio settings.",
        "operationId" : "updateAPRadio",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApRadioCustomization"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Radio",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/snmpAgentSettings" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Reset AP SNMP agent to default settings.",
        "operationId" : "resetApSnmpAgent",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Reset AP SNMP Agent Settings",
        "tags" : [ "AP" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get SNMP agent settings for this AP.",
        "operationId" : "getApSnmpAgent",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApSnmpAgent"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP SNMP Agent Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update SNMP agent settings of this AP.",
        "operationId" : "updateApSnmpAgent",
        "parameters" : [ {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApSnmpAgent"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP SNMP Agent Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/aps/{serialNumber}/wifiOverwriteSettings" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Reset the customization of an AP to the default values.",
        "operationId" : "resetApCustomization",
        "parameters" : [ {
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Reset AP Customization",
        "tags" : [ "AP" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "GET AP customization details.",
        "operationId" : "getApCustomization",
        "parameters" : [ {
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApModelSpecific"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Customization",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update the customization of an AP.",
        "operationId" : "updateApCustomization",
        "parameters" : [ {
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApModelSpecific"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Customization",
        "tags" : [ "AP" ]
      }
    },
    "/venues/lteBands" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get available LTE bands for each region.",
        "operationId" : "getAvailableLteBands",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AvailableLteBands"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Available LTE Bands",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/wifiSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get the venue list of Wi-Fi details.",
        "operationId" : "getVenuesWifiSettings",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Venue"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venues Wi-Fi Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apBssColoringSettings" : {
      "get" : {
        "description" : "Get basic service set coloring settings of this venue.",
        "operationId" : "getVenueApBssColoringSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApBssColoringSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApBssColoringSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Basic Service Set Coloring Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update basic service set coloring settings of this venue.",
        "operationId" : "updateVenueApBssColoringSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApBssColoringSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApBssColoringSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Basic Service Set Coloring Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apCellularSettings" : {
      "get" : {
        "description" : "Get AP model cellular settings and LTE band lock channels of the venue.",
        "operationId" : "getVenueApCellularSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApCellularSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApCellularSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue AP-Model Cellular",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update AP model cellular settings and LTE band lock channels of the venue.",
        "operationId" : "updateVenueApCellularSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApCellularSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApCellularSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue AP-Model Cellular",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apClientAdmissionControlSettings" : {
      "get" : {
        "description" : "Get this venue's client admission control settings.",
        "operationId" : "getVenueApClientAdmissionControlSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApClientAdmissionControlSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApClientAdmissionControlSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Client Admission Control Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update this venue's client admission control settings.",
        "operationId" : "updateVenueApClientAdmissionControlSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApClientAdmissionControlSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApClientAdmissionControlSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Client Admission Control Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apDirectedMulticastSettings" : {
      "get" : {
        "description" : "Get directed multicast settings for this venue.",
        "operationId" : "getVenueApDirectedMulticastSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApDirectedMulticastSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApDirectedMulticastSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Directed Multicast Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Venue directed multicast settings of this venue.",
        "operationId" : "updateVenueApDirectedMulticastSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApDirectedMulticastSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApDirectedMulticastSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Directed Multicast Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apDosProtectionSettings" : {
      "get" : {
        "description" : "Get DoS protection of this venue.",
        "operationId" : "getVenueApDosProtectionSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApDosProtectionSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApDosProtectionSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue DoS Protection",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update DoS protection of this venue.",
        "operationId" : "updateVenueApDosProtectionSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApDosProtectionSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApDosProtectionSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue DoS Protection",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apGroups" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get the AP-group list by venue.",
        "operationId" : "getAPGroupsByVenue",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Only get the details of default AP Group in this venue.",
          "in" : "query",
          "name" : "defaultOnly",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApGroupDeep"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP-Groups by Venue",
        "tags" : [ "AP Group" ]
      },
      "post" : {
        "description" : "Create a new AP-group. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "createAPGroup",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApGroup"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApGroup"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApGroup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create AP-Group",
        "tags" : [ "AP Group" ]
      }
    },
    "/venues/{venueId}/apGroups/{apGroupId}" : {
      "delete" : {
        "description" : "Delete an AP group.",
        "operationId" : "deleteVenueApGroup",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Group ID",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete AP Group",
        "tags" : [ "AP Group" ]
      },
      "get" : {
        "description" : "Get the AP group details.",
        "operationId" : "getVenueApGroup",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Group ID",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApGroup"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApGroup"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Group",
        "tags" : [ "AP Group" ]
      },
      "put" : {
        "description" : "Update an AP group.",
        "operationId" : "updateVenueApGroup",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Group ID",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApGroup"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApGroup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Group",
        "tags" : [ "AP Group" ]
      }
    },
    "/venues/{venueId}/apGroups/{apGroupId}/aps" : {
      "post" : {
        "description" : "Add a new AP with AP group.",
        "operationId" : "addApWithApGroup",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Group ID.",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApCreationV1"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApCreationV1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Add AP with AP Group",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/apGroups/{apGroupId}/aps/{serialNumber}" : {
      "put" : {
        "description" : "Use this API to move AP into the AP group.",
        "operationId" : "activateApOnApGroup",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Group ID.",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Move AP Into AP Group",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/apIotSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get this venue's IoT settings.",
        "operationId" : "getVenueApIotSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApIotSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApIotSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue IoT Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update this venue's IoT settings.",
        "operationId" : "updateVenueIotSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApIotSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApIotSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue IoT Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apLoadBalancingSettings" : {
      "get" : {
        "description" : "Get load balancing settings for this venue.",
        "operationId" : "getVenueApLoadBalancingSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApLoadBalancingSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApLoadBalancingSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Load Balancing Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update venue load balancing settings of this venue.",
        "operationId" : "updateVenueApLoadBalancingSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApLoadBalancingSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApLoadBalancingSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Load Balancing Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apManagementTrafficVlanSettings" : {
      "get" : {
        "description" : "Get AP management traffic VLAN settings of this venue.",
        "operationId" : "getVenueApManagementVlanSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApManagementTrafficVlanSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApManagementTrafficVlanSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue AP Management VLAN Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update AP management traffic VLAN settings of this venue.",
        "operationId" : "updateVenueApManagementVlanSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApManagementTrafficVlanSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApManagementTrafficVlanSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue AP Management VLAN Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apMeshSettings" : {
      "get" : {
        "description" : "Get the venue mesh settings.",
        "operationId" : "getVenueApMeshSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApMeshSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApMeshSettings"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApMeshSettingsV1_1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Mesh Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Enable/disable the venue mesh.",
        "operationId" : "updateVenueApMeshSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApMeshSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApMeshSettings"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApMeshSettingsV1_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Mesh",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apModelAntennaTypeSettings" : {
      "get" : {
        "description" : "Get venue antenna type settings. The settings are defined per AP model.",
        "operationId" : "getVenueAntennaType",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VenueApModelAntennaTypeSettings"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VenueApModelAntennaTypeSettings"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Antenna Type",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update venue antenna type settings. The settings are defined per AP model.",
        "operationId" : "updateVenueAntennaType",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VenueApModelAntennaTypeSettings"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VenueApModelAntennaTypeSettings"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Antenna Type",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apModelBandModeSettings" : {
      "get" : {
        "description" : "Get venue band mode settings. The settings are defined per AP model.",
        "operationId" : "getVenueBandMode",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VenueApModelBandModeSettings"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VenueApModelBandModeSettings"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Band Mode",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update venue band mode settings. The settings are defined per AP model.",
        "operationId" : "updateVenueBandMode",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VenueApModelBandModeSettings"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VenueApModelBandModeSettings"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Band Mode",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apModelCapabilities" : {
      "get" : {
        "description" : "Get AP model capabilities of the venue.",
        "operationId" : "getVenueAPModelCapabilities",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApModelCapabilities"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApModelCapabilities"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue AP-Model Capabilities",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apModelExternalAntennaSettings" : {
      "get" : {
        "description" : "List venue external antenna settings. The settings are defined per AP model.",
        "operationId" : "getVenueApModelExternalAntennaSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VenueApModelExternalAntennaSettings"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VenueApModelExternalAntennaSettings"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue AP Model External Antenna Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update a venue external antenna settings. The settings are defined per AP model.",
        "operationId" : "updateVenueApModelExternalAntennaSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VenueApModelExternalAntennaSettings"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VenueApModelExternalAntennaSettings"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue AP Model External Antenna Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apModelLanPortSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "List venue LAN-port settings. The settings are defined per AP model.",
        "operationId" : "getVenueApModelLanPortSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Only get the details of default LAN-port settings in this venue.",
          "in" : "query",
          "name" : "defaultOnly",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VenueApModelLanPortSettings"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VenueApModelLanPortSettings"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue LAN-Ports",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update a venue LAN-port settings. The settings are defined per AP model.",
        "operationId" : "updateVenueApModelLanPortSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VenueApModelLanPortSettings"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VenueApModelLanPortSettings"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue LAN-Ports",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apModelLedSettings" : {
      "get" : {
        "description" : "Get venue LED settings. The settings are defined per AP model.",
        "operationId" : "getVenueApModelLedSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VenueApModelLedSettings"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VenueApModelLedSettings"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue LED",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update venue LED settings. The settings are defined per AP model.",
        "operationId" : "updateVenueApModelLedSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VenueApModelLedSettings"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VenueApModelLedSettings"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue LED",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apModelUsbPortSettings" : {
      "get" : {
        "description" : "Get venue USB port settings. The settings are defined per AP model.",
        "operationId" : "getVenueApModelUsbPortSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VenueApModelUsbPortSettings"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VenueApModelUsbPortSettings"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue USB Port",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update venue USB port settings. The settings are defined per AP model.",
        "operationId" : "updateVenueApModelUsbPortSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VenueApModelUsbPortSettings"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VenueApModelUsbPortSettings"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue USB Port",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apModels/{apModel}/lanPortSpecificSettings" : {
      "get" : {
        "description" : "Get venue AP model LAN port specific settings.",
        "operationId" : "getVenueApModelLanPortSpecificSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Model Name.",
          "in" : "path",
          "name" : "apModel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApModelLanPortSpecificSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApModelLanPortSpecificSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue AP Model LAN Port Specific Settings",
        "tags" : [ "Ethernet Port Profile" ]
      },
      "put" : {
        "description" : "Update venue AP model LAN port specific settings.",
        "operationId" : "updateVenueApModelLanPortSpecificSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Model Name.",
          "in" : "path",
          "name" : "apModel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApModelLanPortSpecificSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApModelLanPortSpecificSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue AP Model LAN Port Specific Settings",
        "tags" : [ "Ethernet Port Profile" ]
      }
    },
    "/venues/{venueId}/apModels/{apModel}/lanPorts/{portId}/clientIsolationProfiles/{clientIsolationProfileId}" : {
      "delete" : {
        "description" : "Deactivate the client isolation profile for the LAN port, specifying the AP model and the venue.",
        "operationId" : "deactivateClientIsolationProfileOnVenueApModelLanPort",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Model Name",
          "in" : "path",
          "name" : "apModel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Client isolation profile identity",
          "in" : "path",
          "name" : "clientIsolationProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Client Isolation Profile On Venue AP Model LAN Port",
        "tags" : [ "Client Isolation Profile" ]
      },
      "put" : {
        "description" : "Activate the client isolation profile for the LAN port, specifying the AP model and the venue.",
        "operationId" : "activateClientIsolationProfileOnVenueApModelLanPort",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Model Name",
          "in" : "path",
          "name" : "apModel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Client isolation profile identity",
          "in" : "path",
          "name" : "clientIsolationProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Client Isolation Profile On Venue AP Model LAN Port",
        "tags" : [ "Client Isolation Profile" ]
      }
    },
    "/venues/{venueId}/apModels/{apModel}/lanPorts/{portId}/ethernetPortProfiles/{ethernetPortProfileId}" : {
      "delete" : {
        "description" : "Deactivate ethernet port profile on venue, specific to AP model and LAN ports.",
        "operationId" : "deactivateEthernetPortProfileToVenueApModelLanPort",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Model Name.",
          "in" : "path",
          "name" : "apModel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID.",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Ethernet port profile ID.",
          "in" : "path",
          "name" : "ethernetPortProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Ethernet Port Profile On Venue AP Model LAN Port",
        "tags" : [ "Ethernet Port Profile" ]
      },
      "put" : {
        "description" : "Activate ethernet port profile on venue, specific to AP model and LAN ports.",
        "operationId" : "activateEthernetPortProfileToVenueApModelLanPort",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Model Name.",
          "in" : "path",
          "name" : "apModel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID.",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Ethernet port profile ID.",
          "in" : "path",
          "name" : "ethernetPortProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Ethernet Port Profile On Venue AP Model LAN Port",
        "tags" : [ "Ethernet Port Profile" ]
      }
    },
    "/venues/{venueId}/apModels/{apModel}/lanPorts/{portId}/settings" : {
      "get" : {
        "description" : "Get venue AP model LAN port settings.",
        "operationId" : "getVenueApModelLanPortOverwriteSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Model Name.",
          "in" : "path",
          "name" : "apModel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID.",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApModelLanPortSettingsV1"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApModelLanPortSettingsV1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue AP Model LAN Port Settings",
        "tags" : [ "Ethernet Port Profile" ]
      },
      "put" : {
        "description" : "Update venue AP model LAN port settings.",
        "operationId" : "updateVenueApModelLanPortOverwriteSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Model Name.",
          "in" : "path",
          "name" : "apModel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID.",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApModelLanPortSettingsV1"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApModelLanPortSettingsV1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue AP Model LAN Port Settings",
        "tags" : [ "Ethernet Port Profile" ]
      }
    },
    "/venues/{venueId}/apModels/{apModel}/lanPorts/{portId}/softGreProfiles/{softGreProfileId}" : {
      "delete" : {
        "description" : "Deactivate the SoftGRE profile for the LAN port, specifying the AP model and the venue.",
        "operationId" : "deactivateSoftGreProfileOnVenueApModelLanPort",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Model Name",
          "in" : "path",
          "name" : "apModel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "SoftGRE profile identity",
          "in" : "path",
          "name" : "softGreProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate SoftGRE Profile On Venue AP Model LAN Port",
        "tags" : [ "SoftGRE Profile" ]
      },
      "put" : {
        "description" : "Activate the SoftGRE profile for the LAN port, specifying the AP model and the venue.",
        "operationId" : "activateSoftGreProfileOnVenueApModelLanPort",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Model Name",
          "in" : "path",
          "name" : "apModel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "SoftGRE profile identity",
          "in" : "path",
          "name" : "softGreProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LanPortSoftGreProfileSettings"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate SoftGRE Profile On Venue AP Model LAN Port",
        "tags" : [ "SoftGRE Profile" ]
      }
    },
    "/venues/{venueId}/apMulticastDnsFencingSettings" : {
      "get" : {
        "description" : "Get multicast DNS fencing settings of the APs in this venue.",
        "operationId" : "getVenueApMulticastDnsFencingSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApMulticastDnsFencingSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApMulticastDnsFencingSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Multicast DNS Fencing Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update multicast DNS fencing settings of the APs in this venue.",
        "operationId" : "updateVenueApMulticastDnsFencingSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApMulticastDnsFencingSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApMulticastDnsFencingSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Multicast DNS Fencing Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apRadioSettings" : {
      "get" : {
        "description" : "Get the venue radio.",
        "operationId" : "getVenueApRadioSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Only get the details of default radio settings in this venue.",
          "in" : "query",
          "name" : "defaultOnly",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApRadioSettingsV1_1"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApRadioSettings"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApRadioSettingsV1_1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Radio",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update the venue radio.",
        "operationId" : "updateVenueApRadioSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApRadioSettingsV1_1"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApRadioSettings"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApRadioSettingsV1_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Radio",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apRadiusOptions" : {
      "get" : {
        "description" : "Get this venue's RADIUS options settings.",
        "operationId" : "getVenueApRadiusOptions",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApRadiusOptionSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApRadiusOptionSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue RADIUS Options Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update this venue's RADIUS options settings.",
        "operationId" : "updateVenueApRadiusOptions",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApRadiusOptionSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApRadiusOptionSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue RADIUS Options Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apRebootTimeoutSettings" : {
      "get" : {
        "description" : "Get this venue's reboot timeout settings.",
        "operationId" : "getVenueApRebootTimeoutSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApRebootTimeoutSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApRebootTimeoutSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Reboot Timeout Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update this venue's reboot timeout settings.",
        "operationId" : "updateVenueRebootTimeoutSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApRebootTimeoutSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApRebootTimeoutSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Reboot Timeout Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apSmartMonitorSettings" : {
      "get" : {
        "description" : "Get this venue's smart monitor settings.",
        "operationId" : "getVenueApSmartMonitorSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApSmartMonitorSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApSmartMonitorSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Smart Monitor Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update this venue's smart monitor settings.",
        "operationId" : "updateVenueSmartMonitorSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApSmartMonitorSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApSmartMonitorSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Smart Monitor Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/apTlsKeyEnhancedSettings" : {
      "get" : {
        "description" : "Get transport layer security key enhanced mode settings of the APs in this venue.",
        "operationId" : "getVenueApTlsKeyEnhancedModeSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApTlsKeyEnhancedModeSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApTlsKeyEnhancedModeSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Transport Layer Security KEY Enhanced Mode Settings for APs",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "description" : "Update transport layer security key enhanced mode settings of the APs in this venue.",
        "operationId" : "updateVenueApTlsKeyEnhancedModeSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApTlsKeyEnhancedModeSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApTlsKeyEnhancedModeSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Transport Layer Security KEY Enhanced Mode Settings for APs",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/aps" : {
      "post" : {
        "description" : "Add a new AP or import a bunch of APs by a CSV file.",
        "operationId" : "addAp",
        "parameters" : [ {
          "description" : "The ID of the venue.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApCreationV1"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApCreationV1"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                },
                "required" : [ "file" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/EntityIdOperationResponse"
                  }, {
                    "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                  } ]
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/EntityIdOperationResponse"
                  }, {
                    "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                  } ]
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Add AP or Import APs",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/capabilities" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get AP model capabilities of the venue.",
        "operationId" : "getVenueApModelCapabilities",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Capabilities"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue AP-Model Capabilities",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/aps/importResults" : {
      "get" : {
        "description" : "Get result for import venue APs from CSV file.",
        "operationId" : "getImportVenueApsResults",
        "parameters" : [ {
          "description" : "The ID of the venue.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The request ID of the import venue APs operation.",
          "in" : "query",
          "name" : "operationRequestId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApsImportResults"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApsImportResults"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Import Venue APs Results",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{apSerialNumber}/multicastDnsProxyProfiles/{multicastDnsProxyProfileId}" : {
      "delete" : {
        "description" : "Deactivate multicast DNS proxy service profile on the AP.",
        "operationId" : "deactivateMulticastDnsProxyProfile",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "apSerialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Multicast DNS Proxy Profile ID",
          "in" : "path",
          "name" : "multicastDnsProxyProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Multicast DNS Proxy Service Profile On the AP",
        "tags" : [ "MDNS Proxy Service Profile" ]
      },
      "put" : {
        "description" : "Activate multicast DNS proxy service profile on the AP.",
        "operationId" : "activateMulticastDnsProxyProfile",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "apSerialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Multicast DNS Proxy Profile ID",
          "in" : "path",
          "name" : "multicastDnsProxyProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Multicast DNS Proxy Service Profile On the AP",
        "tags" : [ "MDNS Proxy Service Profile" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}" : {
      "delete" : {
        "description" : "Delete an AP.",
        "operationId" : "deleteAp",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Reset AP firmware to Standalone image.",
          "in" : "query",
          "name" : "resetFirmware",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete AP",
        "tags" : [ "AP" ]
      },
      "get" : {
        "description" : "Get the AP general info.",
        "operationId" : "getAp",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApV1"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApV1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP",
        "tags" : [ "AP" ]
      },
      "put" : {
        "description" : "Update an AP.",
        "operationId" : "updateAp",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApV1"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApV1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/antennaTypeSettings" : {
      "get" : {
        "description" : "Get AP antenna type settings.",
        "operationId" : "getAPAntennaType",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApAntennaTypeSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApAntennaTypeSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Antenna Type",
        "tags" : [ "AP" ]
      },
      "put" : {
        "description" : "Update AP antenna type settings.",
        "operationId" : "updateAPAntennaType",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApAntennaTypeSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApAntennaTypeSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Antenna Type",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/bandModeSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get AP band mode settings.",
        "operationId" : "getAPBandMode",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApBandModeSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApBandModeSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Band Mode",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update AP band mode settings.",
        "operationId" : "updateAPBandMode",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApBandModeSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApBandModeSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Band Mode",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/bssColoringSettings" : {
      "get" : {
        "description" : "Get basic service set coloring settings of this AP.",
        "operationId" : "GetApBssColoringSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApBssColoringSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApBssColoringSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Basic Service Set Coloring Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "description" : "Update basic service set coloring settings of this AP.",
        "operationId" : "UpdateApBssColoringSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApBssColoringSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApBssColoringSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Basic Service Set Coloring Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/capabilities" : {
      "get" : {
        "operationId" : "GetApCapabilities",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApCapabilities"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApCapabilities"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Capabilities",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/clientAdmissionControlSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get the client admission control settings of this AP.",
        "operationId" : "GetApClientAdmissionControlSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApClientAdmissionControlSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApClientAdmissionControlSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Client Admission Control Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update the client admission control settings of this AP.",
        "operationId" : "UpdateApClientAdmissionControlSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApClientAdmissionControlSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApClientAdmissionControlSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Client Admission Control Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/clients/{clientMacAddress}" : {
      "patch" : {
        "description" : "Patch the AP's client.",
        "operationId" : "patchApClient",
        "parameters" : [ {
          "description" : "The ID of the venue.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The mac address of the client.",
          "in" : "path",
          "name" : "clientMacAddress",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApClient"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApClient"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Patch AP Client",
        "tags" : [ "Client" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/dhcpSettings" : {
      "get" : {
        "description" : "Get DHCP settings by AP serial number.",
        "operationId" : "getApDhcpSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApDhcpSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApDhcpSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP DHCP Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/diagnosisCommands" : {
      "patch" : {
        "description" : "Trigger diagnosis commands for the AP.",
        "operationId" : "TriggerApDiagnosisCommands",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApDiagnosisCommand"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApDiagnosisCommand"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApDiagnosisCommandResponseOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApDiagnosisCommandResponseOperationResponse"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Trigger AP Diagnosis Commands",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/directedMulticastSettings" : {
      "get" : {
        "description" : "Get directed multicast settings for this AP.",
        "operationId" : "getApDirectedMulticastSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApDirectedMulticastSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApDirectedMulticastSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Directed Multicast Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "description" : "Update directed multicast settings of this AP.",
        "operationId" : "updateApDirectedMulticastSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApDirectedMulticastSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApDirectedMulticastSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Directed Multicast Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/externalAntennaSettings" : {
      "get" : {
        "description" : "Get AP external antenna settings.",
        "operationId" : "getApExternalAntennaSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApExternalAntennaSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApExternalAntennaSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP External Antenna Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "description" : "Update external antenna settings of an AP.",
        "operationId" : "updateApExternalAntennaSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApExternalAntennaSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApExternalAntennaSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP External Antenna Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/iotSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get the IoT settings of this AP.",
        "operationId" : "GetApIotSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApIotSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApIotSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP IoT Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update the IoT settings of this AP.",
        "operationId" : "UpdateApIotSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApIotSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApIotSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP IoT Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/lanPortSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get AP LAN-ports details.",
        "operationId" : "getApLanPortSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Only get the details of default LAN-port settings of the AP.",
          "in" : "query",
          "name" : "defaultOnly",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApLanPortSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApLanPortSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP LAN-Ports",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update LAN-ports of an AP.",
        "operationId" : "updateApLanPortSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApLanPortSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApLanPortSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP LAN-Ports",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/lanPortSpecificSettings" : {
      "get" : {
        "description" : "Get AP LAN port specific settings.",
        "operationId" : "getApLanPortSpecificSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Serial Number.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApLanPortSpecificSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApLanPortSpecificSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP LAN Port Specific Settings",
        "tags" : [ "Ethernet Port Profile" ]
      },
      "put" : {
        "description" : "Update AP LAN port specific settings.",
        "operationId" : "updateApLanPortSpecificSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Serial Number.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApLanPortSpecificSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApLanPortSpecificSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP LAN Port Specific Settings",
        "tags" : [ "Ethernet Port Profile" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/lanPorts/{portId}/clientIsolationProfiles/{clientIsolationProfileId}" : {
      "delete" : {
        "description" : "Deactivate the client isolation profile for the LAN port, specifying the AP and the venue.",
        "operationId" : "deactivateClientIsolationProfileOnApLanPort",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Serial Number",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Client Isolation Profile ID",
          "in" : "path",
          "name" : "clientIsolationProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Client Isolation Profile On AP LAN Port",
        "tags" : [ "Client Isolation Profile" ]
      },
      "put" : {
        "description" : "Activate the client isolation profile for the LAN port, specifying the AP and the venue.",
        "operationId" : "activateClientIsolationProfileOnApLanPort",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Serial Number",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Client Isolation Profile ID",
          "in" : "path",
          "name" : "clientIsolationProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Client Isolation Profile On AP LAN Port",
        "tags" : [ "Client Isolation Profile" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/lanPorts/{portId}/ethernetPortProfiles/{ethernetPortProfileId}" : {
      "delete" : {
        "description" : "Deactivate ethernet port profile on AP, specific to LAN ports. It will also clear VLAN overwrite setting.",
        "operationId" : "deactivateEthernetPortProfileToApLanPort",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Serial Number.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID.",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Ethernet port profile ID.",
          "in" : "path",
          "name" : "ethernetPortProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Ethernet Port Profile On AP LAN Port",
        "tags" : [ "Ethernet Port Profile" ]
      },
      "put" : {
        "description" : "Activate ethernet port profile on AP, specific to LAN ports. It will also clear VLAN overwrite setting.",
        "operationId" : "activateEthernetPortProfileToApLanPort",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Serial Number.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID.",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Ethernet port profile ID.",
          "in" : "path",
          "name" : "ethernetPortProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Ethernet Port Profile On AP LAN Port",
        "tags" : [ "Ethernet Port Profile" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/lanPorts/{portId}/settings" : {
      "get" : {
        "description" : "Get AP LAN port settings.",
        "operationId" : "getApLanPortOverwriteSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Serial Number.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID.",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApLanPortSettingsV1"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApLanPortSettingsV1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP LAN Port Settings",
        "tags" : [ "Ethernet Port Profile" ]
      },
      "put" : {
        "description" : "Update AP LAN port settings.",
        "operationId" : "updateApLanPortOverwriteSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Serial Number.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID.",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApLanPortSettingsV1"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApLanPortSettingsV1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP LAN Port Settings",
        "tags" : [ "Ethernet Port Profile" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/lanPorts/{portId}/softGreProfiles/{softGreProfileId}" : {
      "delete" : {
        "description" : "Deactivate the SoftGRE profile for the LAN port, specifying the AP and the venue.",
        "operationId" : "deactivateSoftGreProfileOnVenueApLanPort",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Serial Number",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "SoftGRE profile identity",
          "in" : "path",
          "name" : "softGreProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate SoftGRE Profile On Venue AP LAN Port",
        "tags" : [ "SoftGRE Profile" ]
      },
      "put" : {
        "description" : "Activate the SoftGRE profile for the LAN port, specifying the AP and the venue.",
        "operationId" : "activateSoftGreProfileOnVenueApLanPort",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Serial Number",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Port ID",
          "in" : "path",
          "name" : "portId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "SoftGRE profile identity",
          "in" : "path",
          "name" : "softGreProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LanPortSoftGreProfileSettings"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate SoftGRE Profile On Venue AP LAN Port",
        "tags" : [ "SoftGRE Profile" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/ledSettings" : {
      "get" : {
        "description" : "Get AP LED settings.",
        "operationId" : "getApLedSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApLedSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApLedSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP LED",
        "tags" : [ "AP" ]
      },
      "put" : {
        "description" : "Update LED of an AP.",
        "operationId" : "updateApLedSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApLedSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApLedSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP LED",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/logs" : {
      "get" : {
        "description" : "Get the AP log info.",
        "operationId" : "getApLogs",
        "parameters" : [ {
          "description" : "The ID of the venue.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApLogs"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApLogs"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get the AP Log Info",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/managementTrafficVlanSettings" : {
      "get" : {
        "description" : "Get the AP management traffic VLAN settings of this AP.",
        "operationId" : "GetApManagementTrafficVlanSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApManagementTrafficVlanSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApManagementTrafficVlanSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Management Traffic VLAN Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "description" : "Update the AP management traffic VLAN settings of this AP.",
        "operationId" : "UpdateApManagementTrafficVlanSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApManagementTrafficVlanSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApManagementTrafficVlanSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Management Traffic VLAN Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/meshSettings" : {
      "get" : {
        "description" : "Get mesh settings for this AP.",
        "operationId" : "getApMeshSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApMeshSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApMeshSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Mesh Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "description" : "Update mesh settings of this AP.",
        "operationId" : "updateApMeshSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApMeshSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApMeshSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Mesh Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/neighbors" : {
      "patch" : {
        "description" : "Ask AP to collect neighbors.",
        "operationId" : "patchApNeighbors",
        "parameters" : [ {
          "description" : "The ID of the venue.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApNeighbors"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApNeighbors"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Patch AP Neighbors",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/neighbors/query" : {
      "post" : {
        "description" : "Query the AP's neighbors.",
        "operationId" : "queryApNeighbors",
        "parameters" : [ {
          "description" : "The ID of the venue.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApNeighborQuery"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApNeighborQuery"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApNeighborQueryData"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApNeighborQueryData"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Query AP Neighbors",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/networkSettings" : {
      "get" : {
        "description" : "Get network settings for this AP.",
        "operationId" : "GetApNetworkSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApNetworkSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApNetworkSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Network Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "description" : "Update network settings of this AP.",
        "operationId" : "UpdateApNetworkSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApNetworkSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApNetworkSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Network Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/packets" : {
      "get" : {
        "description" : "Get the AP packet capture result.",
        "operationId" : "getApPackets",
        "parameters" : [ {
          "description" : "The ID of the venue.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApPackets"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApPackets"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Packets",
        "tags" : [ "AP" ]
      },
      "patch" : {
        "description" : "To start or stop the AP packet capture.",
        "operationId" : "patchApPackets",
        "parameters" : [ {
          "description" : "The ID of the venue.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApPacketAction"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApPacketActionResponseOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApPacketActionResponseOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "409" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Conflict [WIFI-10477: \"Duplicate sessionId exists\"]"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Patch AP Packets",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/pictures" : {
      "delete" : {
        "description" : "Delete the AP's pictures.",
        "operationId" : "deleteApPictures",
        "parameters" : [ {
          "description" : "The ID of the venue.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete AP Pictures",
        "tags" : [ "AP" ]
      },
      "get" : {
        "description" : "Get the AP's pictures.",
        "operationId" : "getApPictures",
        "parameters" : [ {
          "description" : "The ID of the venue.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApPictures"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApPictures"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Pictures",
        "tags" : [ "AP" ]
      },
      "put" : {
        "description" : "Update the AP's pictures.",
        "operationId" : "updateApPictures",
        "parameters" : [ {
          "description" : "The ID of the venue.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                },
                "required" : [ "file" ]
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Pictures",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/radioSettings" : {
      "get" : {
        "description" : "Get AP radio details.",
        "operationId" : "getApRadio",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApRadioSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApRadioSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Radio",
        "tags" : [ "AP" ]
      },
      "put" : {
        "description" : "Update an AP radio settings.",
        "operationId" : "updateApRadio",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApRadioSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApRadioSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Radio",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/smartMonitorSettings" : {
      "get" : {
        "description" : "Get the smart monitor settings of this AP.",
        "operationId" : "GetApSmartMonitorSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApSmartMonitorSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApSmartMonitorSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Smart Monitor Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "description" : "Update the smart monitor settings of this AP.",
        "operationId" : "UpdateApSmartMonitorSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApSmartMonitorSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApSmartMonitorSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Smart Monitor Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/snmpAgentProfileSettings" : {
      "get" : {
        "description" : "Get the SNMP agent profile settings on AP.",
        "operationId" : "getVenueApSnmpAgentProfileSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApSnmpAgentProfileSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApSnmpAgentProfileSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get SNMP Agent Profile Settings On AP",
        "tags" : [ "SNMP Agent Profile" ]
      },
      "put" : {
        "description" : "Update the SNMP agent profile settings on AP.",
        "operationId" : "updateVenueApSnmpAgentProfileSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApSnmpAgentProfileSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApSnmpAgentProfileSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update SNMP Agent Profile Settings On AP",
        "tags" : [ "SNMP Agent Profile" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/snmpAgentProfiles/{snmpAgentProfileId}" : {
      "delete" : {
        "description" : "Deactivate the SNMP agent profile on the AP with the venue.",
        "operationId" : "deactivateSnmpAgentProfileOnAp",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "SNMP Agent Profile ID",
          "in" : "path",
          "name" : "snmpAgentProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate SNMP Agent Profile On AP",
        "tags" : [ "SNMP Agent Profile" ]
      },
      "put" : {
        "description" : "Activate the SNMP agent profile on the AP with the venue.",
        "operationId" : "activateSnmpAgentProfileOnAp",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "SNMP Agent Profile ID",
          "in" : "path",
          "name" : "snmpAgentProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate SNMP Agent Profile On AP",
        "tags" : [ "SNMP Agent Profile" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/stickyClientSteeringSettings" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Reset the sticky client steering settings of this AP to use the venue's settings.",
        "operationId" : "ResetApStickyClientSteeringSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Reset AP Sticky Client Steering Settings",
        "tags" : [ "AP" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the sticky client steering settings of this AP.",
        "operationId" : "GetApStickyClientSteeringSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApStickyClientSteeringSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApStickyClientSteeringSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Sticky Client Steering Settings",
        "tags" : [ "AP" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update the sticky client steering settings of this AP.",
        "operationId" : "UpdateApStickyClientSteeringSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApStickyClientSteeringSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApStickyClientSteeringSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Sticky Client Steering Settings",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/systemCommands" : {
      "patch" : {
        "description" : "Trigger system commands for the AP.",
        "operationId" : "TriggerApSystemCommands",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApSystemCommand"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApSystemCommand"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Trigger AP System Commands",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/usbPortSettings" : {
      "get" : {
        "description" : "Get AP USB port settings.",
        "operationId" : "getApUsbPortSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApUsbPortSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApUsbPortSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP USB Port",
        "tags" : [ "AP" ]
      },
      "put" : {
        "description" : "Update USB port of an AP.",
        "operationId" : "updateApUsbPortSettings",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApUsbPortSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApUsbPortSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP USB Port",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/wifiAvailableChannels" : {
      "get" : {
        "description" : "Get AP available channels.",
        "operationId" : "getWifiAvailableChannelsOfAp",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP serialNumber",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiAvailableChannelsV1_1"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiAvailableChannels"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiAvailableChannelsV1_1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Available Channels",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/wifiDhcpClientLeases" : {
      "get" : {
        "description" : "Get a list of DHCP client leases of the AP.",
        "operationId" : "getApWifiDhcpClientLeases",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiDhcpClientLeases"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiDhcpClientLeases"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP DHCP Client Leases",
        "tags" : [ "DHCP Configuration Service Profile" ]
      }
    },
    "/venues/{venueId}/aps/{serialNumber}/wifiDhcpPoolUsages" : {
      "get" : {
        "description" : "Get DHCP pools usage in this AP.",
        "operationId" : "getApWifiDhcpPoolUsages",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiDhcpPoolUsages"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiDhcpPoolUsages"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get DHCP Pools Usage in This AP",
        "tags" : [ "DHCP Configuration Service Profile" ]
      }
    },
    "/venues/{venueId}/bssColoringSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get basic service set coloring settings of this venue.",
        "operationId" : "getVenueBssColoringSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BssColoring"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Basic Service Set Coloring Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update basic service set coloring settings of this venue.",
        "operationId" : "updateVenueBssColoringSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BssColoring"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Basic Service Set Coloring Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/cellularSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get AP model cellular settings and LTE band lock channels of the venue.",
        "operationId" : "getVenueApModelCellular",
        "parameters" : [ {
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueApModelCellular"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue AP-Model Cellular",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update AP model cellular settings and LTE band lock channels of the venue.",
        "operationId" : "updateVenueApModelCellular",
        "parameters" : [ {
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueApModelCellular"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue AP-Model Cellular",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/channels" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get venue default regulatory channels.",
        "operationId" : "getVenueDefaultRegulatoryChannels",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueRegulatoryChannels"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Default Regulatory-Channels",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/clientAdmissionControlSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get this venue's client admission control settings.",
        "operationId" : "getVenueClientAdmissionControlSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueClientAdmissionControl"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Client Admission Control Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update this venue's client admission control settings.",
        "operationId" : "updateVenueClientAdmissionControlSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueClientAdmissionControl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Client Admission Control Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/dhcpConfigServiceProfileSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get DHCP service profile settings of this venue.",
        "operationId" : "getVenueDhcpConfigServiceProfileSetting",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueDhcpConfigServiceProfileSetting"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get DHCP Service Profile Settings of This Venue",
        "tags" : [ "AP Venue" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "Update DHCP service profile settings of this venue.",
        "operationId" : "updateVenueDhcpConfigServiceProfileSetting",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueDhcpConfigServiceProfileSetting"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update DHCP Service Profile Settings of This Venue",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/dhcpConfigServiceProfiles/{dhcpConfigServiceProfileId}" : {
      "delete" : {
        "description" : "Deactivate DHCP configuration service profile on this venue.",
        "operationId" : "deactivateDhcpConfigServiceProfileOnVenue",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "DHCP Config Service Profile ID",
          "in" : "path",
          "name" : "dhcpConfigServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate DHCP Configuration Service Profile On This Venue",
        "tags" : [ "DHCP Configuration Service Profile" ]
      },
      "get" : {
        "description" : "Get DHCP service profile settings of this venue.",
        "operationId" : "getVenueDhcpConfigServiceProfileSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "DHCP Config Service Profile ID",
          "in" : "path",
          "name" : "dhcpConfigServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueDhcpConfigServiceProfileSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueDhcpConfigServiceProfileSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get DHCP Service Profile Settings of This Venue",
        "tags" : [ "DHCP Configuration Service Profile" ]
      },
      "put" : {
        "description" : "Activate DHCP configuration service profile on this venue and update settings.",
        "operationId" : "activateDhcpConfigServiceProfileOnVenueAndUpdateSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "DHCP Config Service Profile ID",
          "in" : "path",
          "name" : "dhcpConfigServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueDhcpConfigServiceProfileSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueDhcpConfigServiceProfileSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate DHCP Configuration Service Profile On This Venue and Update Settings",
        "tags" : [ "DHCP Configuration Service Profile" ]
      }
    },
    "/venues/{venueId}/dhcpPoolLeases" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get a list of DHCP leases of the venue.",
        "operationId" : "getDhcpConfigLeaseByVenue",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DhcpConfigClientLeaseTime"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue DHCP Leases",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/dhcpPools" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get DHCP pool data and usage in this venue.",
        "operationId" : "getVenueDhcpPoolUsage",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DhcpPoolUsage"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get DHCP Pools Usage in Venue",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/dhcpPools/{dhcpPoolId}" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Deactivate DHCP pools in venue.",
        "operationId" : "deactivateVenueDhcpPool",
        "parameters" : [ {
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "dhcpPoolId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate DHCP Pools in Venue",
        "tags" : [ "AP Venue" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "Activate DHCP pools in venue.",
        "operationId" : "activateVenueDhcpPool",
        "parameters" : [ {
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "dhcpPoolId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate DHCP Pools in Venue",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/directedMulticastSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get directed multicast settings for this venue.",
        "operationId" : "getVenueDirectedMulticast",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueDirectedMulticast"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Directed Multicast Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update venue directed multicast settings of this venue.",
        "operationId" : "updateVenueDirectedMulticast",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueDirectedMulticast"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Directed Multicast Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/dosProtectionSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get DoS protection of this venue.",
        "operationId" : "getDenialOfServiceProtection",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DenialOfServiceProtection"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue DoS Protection",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update DoS protection of this venue.",
        "operationId" : "updateDenialOfServiceProtection",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DenialOfServiceProtection"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue DoS Protection",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/externalAntennaSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "List venue external antenna settings. The settings are defined per AP model.",
        "operationId" : "getVenueExternalAntenna",
        "parameters" : [ {
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApModelExternalAntenna"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue External Antenna",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update a venue external antenna settings. The settings are defined per AP model.",
        "operationId" : "updateVenueExternalAntenna",
        "parameters" : [ {
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ApModelExternalAntenna"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue External Antenna",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/floorplans/{floorplanId}/aps/{serialNumber}/floorPositions" : {
      "delete" : {
        "description" : "Deactivate the AP on a floor-plan and remove the position.",
        "operationId" : "deactivateApFloorPosition",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Floor plan ID.",
          "in" : "path",
          "name" : "floorplanId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate AP Floor Position",
        "tags" : [ "AP" ]
      },
      "get" : {
        "description" : "Get the position of the AP on a floor-plan.",
        "operationId" : "getApFloorPosition",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Floor plan ID.",
          "in" : "path",
          "name" : "floorplanId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApFloorPosition"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApFloorPosition"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Floor Position",
        "tags" : [ "AP" ]
      },
      "put" : {
        "description" : "Activate the AP on a floor-plan or update the position.",
        "operationId" : "activateApFloorPosition",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Floor plan ID.",
          "in" : "path",
          "name" : "floorplanId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The serial number of the AP.",
          "in" : "path",
          "name" : "serialNumber",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApFloorPosition"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApFloorPosition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate AP Floor Position",
        "tags" : [ "AP" ]
      }
    },
    "/venues/{venueId}/isolationAllowlists/query" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get a list of client isolation allowlists of the venue.",
        "operationId" : "GetClientIsolationAllowlistUsageByVenue",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueClientIsolationAllowlistQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueClientIsolationAllowlistQueryResponse"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Client Isolation Allowlists",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/lanPortSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "List venue LAN-port settings. The settings are defined per AP model.",
        "operationId" : "getVenueLanPorts",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApModelLanPort"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue LAN-Ports",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update a venue LAN-port settings. The settings are defined per AP model.",
        "operationId" : "updateVenueLanPorts",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ApModelLanPort"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue LAN-Ports",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/lbsServerProfiles/{lbsServerProfileId}" : {
      "delete" : {
        "description" : "Deactivate location based service server profile on venue.",
        "operationId" : "deactivateLbsServerProfileOnVenue",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Location based service server profile ID",
          "in" : "path",
          "name" : "lbsServerProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Location Based Service Server Profile On Venue",
        "tags" : [ "LBS Server Profile" ]
      },
      "put" : {
        "description" : "Activate location based service server profile on venue.",
        "operationId" : "activateLbsServerProfileOnVenue",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Location based service server profile ID",
          "in" : "path",
          "name" : "lbsServerProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Location Based Service Server Profile On Venue",
        "tags" : [ "LBS Server Profile" ]
      }
    },
    "/venues/{venueId}/ledSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get venue LED settings. The settings are defined per AP model.",
        "operationId" : "getVenueLed",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApModelLed"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue LED",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update venue LED settings. The settings are defined per AP model.",
        "operationId" : "updateVenueLed",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ApModelLed"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue LED",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/loadBalancingSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get load balancing settings for this venue.",
        "operationId" : "getVenueLoadBalancing",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueLoadBalancing"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Load Balancing Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update venue load balancing settings of this venue.",
        "operationId" : "updateVenueLoadBalancing",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueLoadBalancing"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Load Balancing Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/mDnsFencingSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get this venue's multicast DNS fencing settings.",
        "operationId" : "getVenueMulticastDnsFencing",
        "parameters" : [ {
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueMdnsFencing"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Multicast DNS Fencing Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update this venue's multicast DNS fencing settings.",
        "operationId" : "updateVenueMulticastDnsFencing",
        "parameters" : [ {
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueMdnsFencing"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Multicast DNS Fencing Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/mDnsProxyProfileAps" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get multicast DNS proxy service profile APs detail by venue.",
        "operationId" : "getMulticastDnsProxyServiceProfileApByVenue",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MulticastDnsProxyVenueAp"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Multicast DNS Proxy Service Profile APs by Venue",
        "tags" : [ "MDNS Proxy Service Profile" ]
      }
    },
    "/venues/{venueId}/meshSettings" : {
      "put" : {
        "deprecated" : true,
        "description" : "Enable/disable the venue mesh.",
        "operationId" : "updateMesh",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mesh"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Mesh",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/radioSettings" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Reset venue radio to default values.",
        "operationId" : "resetVenueRadio",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Reset Venue Radio",
        "tags" : [ "AP Venue" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the venue radio.",
        "operationId" : "getVenueRadio",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Only get the details of default radio settings in this venue.",
          "in" : "query",
          "name" : "defaultOnly",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueRadioCustomization"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Radio",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update the venue radio.",
        "operationId" : "updateVenueRadio",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueRadioCustomization"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Radio",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/radiusOptions" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get this venue's RADIUS options settings.",
        "operationId" : "getVenueRadiusOptions",
        "parameters" : [ {
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueRadiusOptions"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue RADIUS Options Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update this venue's RADIUS options settings.",
        "operationId" : "updateVenueRadiusOptions",
        "parameters" : [ {
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueRadiusOptions"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue RADIUS Options Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/rogueApSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get the venue rogue AP settings. Use GET /venues/{venueId}/roguePolicySettings instead.",
        "operationId" : "getVenueRogueAp",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueRogueAp"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Rogue AP",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update the venue rogue AP settings. Use PUT /venues/{venueId}/roguePolicySettings instead.",
        "operationId" : "updateVenueRogueAp",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueRogueAp"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Rogue AP",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/roguePolicies/{roguePolicyId}" : {
      "delete" : {
        "description" : "Deactivate a rogue AP detection policy on a venue and apply the default policy to that venue instead. Note that deactivate a policy from a venue does not disable rogue AP detection in that venue.",
        "operationId" : "deactivateRoguePolicyOnVenue",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Rogue AP Detection Policy ID.",
          "in" : "path",
          "name" : "roguePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Rogue AP Detection Policy On Venue",
        "tags" : [ "Rogue AP Detection Policy" ]
      },
      "put" : {
        "description" : "Activate a rogue AP detection policy on a venue.",
        "operationId" : "activateRoguePolicyOnVenue",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Rogue AP Detection Policy ID.",
          "in" : "path",
          "name" : "roguePolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Rogue AP Detection Policy On Venue",
        "tags" : [ "Rogue AP Detection Policy" ]
      }
    },
    "/venues/{venueId}/roguePolicySettings" : {
      "get" : {
        "description" : "Get the venue rogue policy settings.",
        "operationId" : "getVenueRoguePolicySettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueRoguePolicySettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueRoguePolicySettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Rogue Policy Settings",
        "tags" : [ "Rogue AP Detection Policy" ]
      },
      "put" : {
        "description" : "Update the venue rogue policy settings.",
        "operationId" : "updateVenueRoguePolicySettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueRoguePolicySettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueRoguePolicySettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Rogue Policy Settings",
        "tags" : [ "Rogue AP Detection Policy" ]
      }
    },
    "/venues/{venueId}/snmpAgentProfiles/{snmpAgentProfileId}" : {
      "delete" : {
        "description" : "Deactivate the SNMP agent profile on the venue.",
        "operationId" : "deactivateSnmpAgentProfileOnVenue",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "SNMP Agent Profile ID",
          "in" : "path",
          "name" : "snmpAgentProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate SNMP Agent Profile On Venue",
        "tags" : [ "SNMP Agent Profile" ]
      },
      "put" : {
        "description" : "Activate the SNMP agent profile on the venue.",
        "operationId" : "activateSnmpAgentProfileOnVenue",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "SNMP Agent Profile ID",
          "in" : "path",
          "name" : "snmpAgentProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate SNMP Agent Profile On Venue",
        "tags" : [ "SNMP Agent Profile" ]
      }
    },
    "/venues/{venueId}/snmpAgentSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get AP SNMP settings for this venue.",
        "operationId" : "getVenueApSnmpAgent",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueSnmpAgent"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue AP SNMP Agent Settings",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update AP SNMP settings of this venue.",
        "operationId" : "updateVenueApSnmpAgent",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueSnmpAgent"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue AP SNMP Agent Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/syslogServerProfileSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get venue syslog server profile settings.",
        "operationId" : "getVenueSyslogServerProfileSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueSyslogServerProfile"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Syslog Server Profile Settings",
        "tags" : [ "AP Venue" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "Update a venue syslog server profile settings.",
        "operationId" : "updateVenueSyslogServerProfileSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueSyslogServerProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Syslog Server Profile Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/syslogServerProfiles/{syslogServerProfileId}" : {
      "delete" : {
        "description" : "Use this API command to delete a relationship between syslog server profile and venue.",
        "operationId" : "deactivateSyslogServerProfileOnVenue",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Syslog server profile identity",
          "in" : "path",
          "name" : "syslogServerProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Syslog Server Profile On Venue",
        "tags" : [ "Syslog Server Profile" ]
      },
      "put" : {
        "description" : "Use this API command to build a relationship between syslog server profile and venue.",
        "operationId" : "activateSyslogServerProfileOnVenue",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Syslog server profile identity",
          "in" : "path",
          "name" : "syslogServerProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Syslog Server Profile On Venue",
        "tags" : [ "Syslog Server Profile" ]
      }
    },
    "/venues/{venueId}/syslogSettings" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Reset venue syslog settings to default values.",
        "operationId" : "resetVenueSyslog",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Reset Venue Syslog",
        "tags" : [ "AP Venue" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the venue syslog settings.",
        "operationId" : "getVenueSyslog",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueSyslog"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Syslog",
        "tags" : [ "AP Venue" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Update the venue syslog settings.",
        "operationId" : "updateVenueSyslog",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueSyslog"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Syslog",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/wifiAvailableChannels" : {
      "get" : {
        "description" : "Get venue available channels.",
        "operationId" : "getWifiAvailableChannelsOfVenue",
        "parameters" : [ {
          "description" : "Venue ID.",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiAvailableChannelsV1_1"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiAvailableChannels"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiAvailableChannelsV1_1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Available Channels",
        "tags" : [ "AP Venue" ]
      }
    },
    "/venues/{venueId}/wifiDhcpClientLeases" : {
      "get" : {
        "description" : "Get a list of DHCP leases of the venue.",
        "operationId" : "getVenueWifiDhcpClientLeases",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiDhcpClientLeases"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiDhcpClientLeases"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue DHCP Leases",
        "tags" : [ "DHCP Configuration Service Profile" ]
      }
    },
    "/venues/{venueId}/wifiDhcpPoolUsages" : {
      "get" : {
        "description" : "Get DHCP pools usage in this venue.",
        "operationId" : "getVenueWifiDhcpPoolUsages",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiDhcpPoolUsages"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiDhcpPoolUsages"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get DHCP Pools Usage in Venue",
        "tags" : [ "DHCP Configuration Service Profile" ]
      }
    },
    "/venues/{venueId}/wifiNetworks/{wifiNetworkId}" : {
      "delete" : {
        "description" : "Use this API to delete a relationship between Wi-Fi network and venue.",
        "operationId" : "deactivateWifiNetworkOnVenue",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Wi-Fi Network On Venue",
        "tags" : [ "Wi-Fi Network" ]
      },
      "put" : {
        "description" : "Use this API to build a relationship between Wi-Fi network and venue.",
        "operationId" : "activateWifiNetworkOnVenue",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueWifiNetwork"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueWifiNetwork"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Wi-Fi Network On Venue",
        "tags" : [ "Wi-Fi Network" ]
      }
    },
    "/venues/{venueId}/wifiNetworks/{wifiNetworkId}/apGroups/{apGroupId}" : {
      "delete" : {
        "description" : "Deactivate the AP group and remove the settings on the Wi-Fi network with the venue.",
        "operationId" : "deactivateApGroupOnWifiNetwork",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Group ID",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate AP Group On Wi-Fi Network",
        "tags" : [ "AP Group" ]
      },
      "put" : {
        "description" : "Activate the AP group on the Wi-Fi network with the venue.",
        "operationId" : "activateApGroupOnWifiNetwork",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Group ID",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate AP Group On Wi-Fi Network",
        "tags" : [ "AP Group" ]
      }
    },
    "/venues/{venueId}/wifiNetworks/{wifiNetworkId}/apGroups/{apGroupId}/settings" : {
      "get" : {
        "description" : "Get the activated AP group settings on the Wi-Fi network with the venue.",
        "operationId" : "getApGroupSettingsOnWifiNetwork",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Group ID",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueWifiNetworkApGroupSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueWifiNetworkApGroupSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get AP Group Settings On Wi-Fi Network",
        "tags" : [ "AP Group" ]
      },
      "put" : {
        "description" : "Update the activated AP group settings on the Wi-Fi network with the venue.",
        "operationId" : "updateApGroupSettingsOnWifiNetwork",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Group ID",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueWifiNetworkApGroupSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueWifiNetworkApGroupSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update AP Group Settings On Wi-Fi Network",
        "tags" : [ "AP Group" ]
      }
    },
    "/venues/{venueId}/wifiNetworks/{wifiNetworkId}/apGroups/{apGroupId}/vlanPoolProfiles/{vlanPoolProfileId}" : {
      "delete" : {
        "description" : "Use this API command to deactivate a VLAN pool profile on an AP group.",
        "operationId" : "deactivateVlanPoolProfileOnVenueWifiNetworkApGroup",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Group ID",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "VLAN Pool Profile ID",
          "in" : "path",
          "name" : "vlanPoolProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate VLAN Pool Profile On AP Group",
        "tags" : [ "VLAN Pool Profile" ]
      },
      "put" : {
        "description" : "Use this API command to activate a VLAN pool profile on an AP group.",
        "operationId" : "activateVlanPoolProfileOnVenueWifiNetworkApGroup",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "AP Group ID",
          "in" : "path",
          "name" : "apGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "VLAN Pool Profile ID",
          "in" : "path",
          "name" : "vlanPoolProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate VLAN Pool Profile On AP Group",
        "tags" : [ "VLAN Pool Profile" ]
      }
    },
    "/venues/{venueId}/wifiNetworks/{wifiNetworkId}/clientIsolationProfiles/{clientIsolationProfileId}" : {
      "delete" : {
        "description" : "Deactivate the client isolation profile on the Wi-Fi network with the venue.",
        "operationId" : "deactivateClientIsolationProfileOnWifiNetwork",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Client Isolation Profile ID",
          "in" : "path",
          "name" : "clientIsolationProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Client Isolation Profile On Wi-Fi Network",
        "tags" : [ "Client Isolation Profile" ]
      },
      "put" : {
        "description" : "Activate the client isolation profile on the Wi-Fi network with the venue.",
        "operationId" : "activateClientIsolationProfileOnWifiNetwork",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Client Isolation Profile ID",
          "in" : "path",
          "name" : "clientIsolationProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Client Isolation Profile On Wi-Fi Network",
        "tags" : [ "Client Isolation Profile" ]
      }
    },
    "/venues/{venueId}/wifiNetworks/{wifiNetworkId}/settings" : {
      "get" : {
        "description" : "Get Wi-Fi network settings on this venue.",
        "operationId" : "getVenueWifiNetworkSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueWifiNetworkSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueWifiNetworkSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Wi-Fi Network Settings",
        "tags" : [ "Wi-Fi Network" ]
      },
      "put" : {
        "description" : "Update Wi-Fi network settings on this venue.",
        "operationId" : "updateVenueWifiNetworkSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueWifiNetworkSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueWifiNetworkSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Venue Wi-Fi Network Settings",
        "tags" : [ "Wi-Fi Network" ]
      }
    },
    "/venues/{venueId}/wifiNetworks/{wifiNetworkId}/softGreProfiles/{softGreProfileId}" : {
      "delete" : {
        "description" : "Deactivate the SoftGRE profile on the Wi-Fi network with the venue.",
        "operationId" : "deactivateSoftGreProfileOnVenueWifiNetwork",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "SoftGRE profile identity",
          "in" : "path",
          "name" : "softGreProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate SoftGRE Profile On Venue Wi-Fi Network",
        "tags" : [ "SoftGRE Profile" ]
      },
      "put" : {
        "description" : "Activate the SoftGRE profile on the Wi-Fi network with the venue.",
        "operationId" : "activateSoftGreProfileOnVenueWifiNetwork",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "SoftGRE profile identity",
          "in" : "path",
          "name" : "softGreProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate SoftGRE Profile On Venue Wi-Fi Network",
        "tags" : [ "SoftGRE Profile" ]
      }
    },
    "/venues/{venueId}/wifiSettings" : {
      "get" : {
        "deprecated" : true,
        "description" : "Get the venue Wi-Fi details.",
        "operationId" : "getVenueWifiSettings",
        "parameters" : [ {
          "description" : "Venue ID",
          "in" : "path",
          "name" : "venueId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Venue"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Venue Wi-Fi Settings",
        "tags" : [ "AP Venue" ]
      }
    },
    "/vlanPoolProfiles" : {
      "post" : {
        "description" : "Use this API command to create a new VLAN pool profile.",
        "operationId" : "addVlanPoolProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanPoolProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanPoolProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Add VLAN Pool Profile",
        "tags" : [ "VLAN Pool Profile" ]
      }
    },
    "/vlanPoolProfiles/{vlanPoolProfileId}" : {
      "delete" : {
        "description" : "Use this API command to delete a VLAN pool profile.",
        "operationId" : "deleteVlanPoolProfile",
        "parameters" : [ {
          "description" : "VLAN Pool Profile ID",
          "in" : "path",
          "name" : "vlanPoolProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete VLAN Pool Profile",
        "tags" : [ "VLAN Pool Profile" ]
      },
      "get" : {
        "description" : "Use this API command to get the VLAN pool profile details.",
        "operationId" : "getVlanPoolProfile",
        "parameters" : [ {
          "description" : "VLAN Pool Profile ID",
          "in" : "path",
          "name" : "vlanPoolProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanPoolProfile"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanPoolProfile"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get VLAN Pool",
        "tags" : [ "VLAN Pool Profile" ]
      },
      "put" : {
        "description" : "Use this API command to update a VLAN pool profile.",
        "operationId" : "updateVlanPoolProfile",
        "parameters" : [ {
          "description" : "VLAN Pool Profile ID",
          "in" : "path",
          "name" : "vlanPoolProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanPoolProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanPoolProfile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update VLAN Pool Profile",
        "tags" : [ "VLAN Pool Profile" ]
      }
    },
    "/vlanPools" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Use this API command to delete a VLAN pool list.",
        "operationId" : "deleteVlanPools",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete VLAN Pools",
        "tags" : [ "VLAN Pool" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Use this API command to get the VLAN pool list.",
        "operationId" : "getVlanPools",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VlanPool"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get VLAN Pools",
        "tags" : [ "VLAN Pool" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "Use this API command to create a new VLAN pool.",
        "operationId" : "addVlanPool",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanPool"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanPoolOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Add VLAN Pool",
        "tags" : [ "VLAN Pool" ]
      }
    },
    "/vlanPools/query" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use this API command to get the VLAN pool list by query.",
        "operationId" : "getVlanPoolByQuery",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanPoolQueryResponse"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Query VLAN Pool",
        "tags" : [ "VLAN Pool" ]
      }
    },
    "/vlanPools/{vlanPoolId}" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Use this API command to delete a VLAN pool.",
        "operationId" : "deleteVlanPool",
        "parameters" : [ {
          "description" : "VLAN Pool ID",
          "in" : "path",
          "name" : "vlanPoolId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete VLAN Pool",
        "tags" : [ "VLAN Pool" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Use this API command to get the VLAN pool details.",
        "operationId" : "getVlanPool",
        "parameters" : [ {
          "description" : "VLAN Pool ID",
          "in" : "path",
          "name" : "vlanPoolId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanPool"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get VLAN Pool",
        "tags" : [ "VLAN Pool" ]
      },
      "patch" : {
        "deprecated" : true,
        "description" : "Use this API command to partial update a VLAN pool.",
        "operationId" : "patchVlanPool",
        "parameters" : [ {
          "description" : "VLAN Pool ID",
          "in" : "path",
          "name" : "vlanPoolId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PartialVlanPool"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Partial Update VLAN Pool",
        "tags" : [ "VLAN Pool" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Use this API command to update a VLAN pool.",
        "operationId" : "updateVlanPool",
        "parameters" : [ {
          "description" : "VLAN Pool ID",
          "in" : "path",
          "name" : "vlanPoolId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanPool"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update VLAN Pool",
        "tags" : [ "VLAN Pool" ]
      }
    },
    "/vlanPools/{vlanPoolId}/venues" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use this API command to get venues activations of the VLAN pool list by query.",
        "operationId" : "getVlanPoolVenues",
        "parameters" : [ {
          "description" : "VLAN Pool ID",
          "in" : "path",
          "name" : "vlanPoolId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanPoolVenueDataQueryResponse"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get VLAN Pool Venues Activations",
        "tags" : [ "VLAN Pool" ]
      }
    },
    "/wifiCallingServiceProfiles" : {
      "delete" : {
        "deprecated" : true,
        "description" : "Delete a list of Wi-Fi calling service profiles. Use DELETE /wifiCallingServiceProfiles/{wifiCallingServiceProfileId} instead.",
        "operationId" : "deleteWifiCallingServiceProfilesBulk",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of Wi-Fi Calling Service Profile IDs",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Wi-Fi Calling Service Profiles",
        "tags" : [ "Wi-Fi Calling Service Profile" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "Get the Wi-Fi calling service profiles.",
        "operationId" : "getWiFiCallingServiceProfiles",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WifiCallingServiceProfile"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Wi-Fi Calling Service Profiles",
        "tags" : [ "Wi-Fi Calling Service Profile" ]
      },
      "post" : {
        "description" : "Create a new Wi-Fi calling service profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "createWifiCallingServiceProfile",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WifiCallingServiceProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WifiCallingServiceProfile"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WifiCallingServiceProfileV1_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Wi-Fi Calling Service Profile",
        "tags" : [ "Wi-Fi Calling Service Profile" ]
      }
    },
    "/wifiCallingServiceProfiles/{wifiCallingServiceProfileId}" : {
      "delete" : {
        "description" : "Delete a Wi-Fi calling service profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "deleteWifiCallingServiceProfile",
        "parameters" : [ {
          "description" : "Wi-Fi Calling Service Profile ID",
          "in" : "path",
          "name" : "wifiCallingServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Wi-Fi Calling Service Profile",
        "tags" : [ "Wi-Fi Calling Service Profile" ]
      },
      "get" : {
        "description" : "Get the Wi-Fi calling service profile details. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "getWiFiCallingServiceProfile",
        "parameters" : [ {
          "description" : "Wi-Fi calling profile ID",
          "in" : "path",
          "name" : "wifiCallingServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiCallingServiceProfile"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiCallingServiceProfile"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiCallingServiceProfileV1_1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Wi-Fi Calling Service Profile",
        "tags" : [ "Wi-Fi Calling Service Profile" ]
      },
      "put" : {
        "description" : "Update a Wi-Fi calling service profile. Content-Type: \"application/vnd.ruckus.v1+json\" will be deprecated on 2024/09/01.",
        "operationId" : "updateWifiCallingServiceProfile",
        "parameters" : [ {
          "description" : "Wi-Fi Calling Service Profile ID",
          "in" : "path",
          "name" : "wifiCallingServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WifiCallingServiceProfile"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WifiCallingServiceProfile"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WifiCallingServiceProfileV1_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Wi-Fi Calling Service Profile",
        "tags" : [ "Wi-Fi Calling Service Profile" ]
      }
    },
    "/wifiFeatureSets/query" : {
      "post" : {
        "description" : "Wi-Fi feature sets query.",
        "operationId" : "wifiFeatureSetsQuery",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompatibilityFeatureSetRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompatibilityFeatureSetRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiFeatureSets"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiFeatureSets"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Wi-Fi Feature Sets Query",
        "tags" : [ "AP Compatibility" ]
      }
    },
    "/wifiNetworks" : {
      "post" : {
        "description" : "Create a new Wi-Fi network.",
        "operationId" : "addWifiNetwork",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/AAAWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/DpskWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/GuestWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/Hotspot20WifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/OpenWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/PskWifiNetwork"
                } ]
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/AAAWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/DpskWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/GuestWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/Hotspot20WifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/OpenWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/PskWifiNetwork"
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdOperationResponse"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Create Wi-Fi Network",
        "tags" : [ "Wi-Fi Network" ]
      }
    },
    "/wifiNetworks/apCompatibilities/query" : {
      "post" : {
        "description" : "Details of the feature requirements, including the supported AP firmware and models, as well as the count of compatible and incompatible APs based on the targeted Wi-Fi networks.",
        "operationId" : "networkCompatibilitiesQuery",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompatibilityVenueNetworkRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompatibilityVenueNetworkRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApCompatibilitiesV1"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApCompatibilitiesV1"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Wi-Fi Network Compatibility Query",
        "tags" : [ "AP Compatibility" ]
      }
    },
    "/wifiNetworks/hotspot20IdentityProviders" : {
      "get" : {
        "description" : "Get predefined Hotspot 2.0 identity providers.",
        "operationId" : "getWifiNetworkPredefinedHotspot20IdentityProviders",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IdAndName"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IdAndName"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Predefined Hotspot 2.0 Identity Providers",
        "tags" : [ "Wi-Fi Network" ]
      }
    },
    "/wifiNetworks/hotspot20Operators" : {
      "get" : {
        "description" : "Get predefined Hotspot 2.0 operators.",
        "operationId" : "getWifiNetworkPredefinedHotspot20Operators",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IdAndName"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IdAndName"
                  }
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Predefined Hotspot 2.0 Operators",
        "tags" : [ "Wi-Fi Network" ]
      }
    },
    "/wifiNetworks/qosMapSetOptions" : {
      "get" : {
        "description" : "Get default options for QoS map set.",
        "operationId" : "getWifiNetworkDefaultQosMapSetOptions",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QosMapSetOptions"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QosMapSetOptions"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Default Options for QoS Map Set",
        "tags" : [ "Wi-Fi Network" ]
      }
    },
    "/wifiNetworks/recoveryPassphraseSettings" : {
      "get" : {
        "description" : "Get the passphrase settings for the Wi-Fi recovery network.",
        "operationId" : "getRecoveryPassphraseSettings",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPassphraseSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPassphraseSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Wi-Fi Recovery Network Passphrase Settings",
        "tags" : [ "Wi-Fi Network" ]
      },
      "put" : {
        "description" : "Update the passphrase settings for the Wi-Fi recovery network.",
        "operationId" : "updateRecoveryPassphraseSettings",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecoveryPassphraseSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecoveryPassphraseSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Wi-Fi Recovery Network Passphrase Settings",
        "tags" : [ "Wi-Fi Network" ]
      }
    },
    "/wifiNetworks/wisprProviders" : {
      "get" : {
        "description" : "Get the list of external WISPr providers for a captive portal network. Note: these providers have integrated their service with the RUCKUS cloud.",
        "operationId" : "getWifiNetworkWisprProviders",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WisprProviders"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WisprProviders"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get External WISPr Providers",
        "tags" : [ "Wi-Fi Network" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}" : {
      "delete" : {
        "description" : "Delete a Wi-Fi network.",
        "operationId" : "deleteWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Delete Wi-Fi Network",
        "tags" : [ "Wi-Fi Network" ]
      },
      "get" : {
        "description" : "Get the Wi-Fi network details.",
        "operationId" : "getWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiNetwork"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiNetwork"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get Wi-Fi Network",
        "tags" : [ "Wi-Fi Network" ]
      },
      "put" : {
        "description" : "Update this Wi-Fi network, including nested details.",
        "operationId" : "updateWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/AAAWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/DpskWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/GuestWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/Hotspot20WifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/OpenWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/PskWifiNetwork"
                } ]
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/AAAWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/DpskWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/GuestWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/Hotspot20WifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/OpenWifiNetwork"
                }, {
                  "$ref" : "#/components/schemas/PskWifiNetwork"
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update Wi-Fi Network",
        "tags" : [ "Wi-Fi Network" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/accessControlProfiles/{accessControlProfileId}" : {
      "delete" : {
        "description" : "Use this API command to delete a relationship between access control profile and Wi-Fi network.",
        "operationId" : "deactivateAccessControlProfileOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Access control profile identity",
          "in" : "path",
          "name" : "accessControlProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Access Control Profile On Wi-Fi Network",
        "tags" : [ "Access Control Profile" ]
      },
      "put" : {
        "description" : "Use this API command to build a relationship between access control profile and Wi-Fi network.",
        "operationId" : "activateAccessControlProfileOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Access control profile identity",
          "in" : "path",
          "name" : "accessControlProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Access Control Profile On Wi-Fi Network",
        "tags" : [ "Access Control Profile" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/applicationPolicies/{applicationPolicyId}" : {
      "delete" : {
        "description" : "Use this API command to deactivate an application policy on a Wi-Fi network.",
        "operationId" : "deactivateApplicationPolicyOnWifiNetwork",
        "parameters" : [ {
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "applicationPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Application Policy On Wifi Network",
        "tags" : [ "Application Policy" ]
      },
      "put" : {
        "description" : "Use this API command to activate an application policy on a Wi-Fi network.",
        "operationId" : "activateApplicationPolicyOnWifiNetwork",
        "parameters" : [ {
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "applicationPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Application Policy On Wifi Network",
        "tags" : [ "Application Policy" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/certificateTemplates/{certificateTemplateId}" : {
      "delete" : {
        "description" : "Use this API command to delete the relationship between certificate template and Wi-Fi network.",
        "operationId" : "deactivateCertificateTemplateOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Certificate Template ID",
          "in" : "path",
          "name" : "certificateTemplateId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Certificate Template On Wi-Fi Network",
        "tags" : [ "Certificate Template Activation" ]
      },
      "put" : {
        "description" : "Use this API command to build the relationship between certificate template and Wi-Fi network.",
        "operationId" : "activateCertificateTemplateOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Certificate Template ID",
          "in" : "path",
          "name" : "certificateTemplateId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Certificate Template On Wi-Fi Network",
        "tags" : [ "Certificate Template Activation" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/devicePolicies/{policyId}" : {
      "delete" : {
        "description" : "Use this API command to delete a relationship between device policy and Wi-Fi network.",
        "operationId" : "deactivateDevicePolicyOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Device Policy ID",
          "in" : "path",
          "name" : "policyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Device Policy On Wi-Fi Network",
        "tags" : [ "Device Policy" ]
      },
      "put" : {
        "description" : "Use this API command to build a relationship between device policy and Wi-Fi network.",
        "operationId" : "activateDevicePolicyOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Device Policy ID",
          "in" : "path",
          "name" : "policyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Device Policy On Wi-Fi Network",
        "tags" : [ "Device Policy" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/dpskServices/{dpskServiceId}" : {
      "put" : {
        "description" : "Use this API command to build the relationship between DPSK service and Wi-Fi network.",
        "operationId" : "activateDpskServiceOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "DPSK service ID",
          "in" : "path",
          "name" : "dpskServiceId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate DPSK Service On Wi-Fi Network",
        "tags" : [ "DPSK Service" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/hotspot20IdentityProviders/{hotspot20IdentityProviderId}" : {
      "delete" : {
        "description" : "Deactivate Hotspot 2.0 identity provider on Wi-Fi network.",
        "operationId" : "deactivateHotspot20IdentityProviderOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Hotspot 2.0 Identity Provider ID",
          "in" : "path",
          "name" : "hotspot20IdentityProviderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Hotspot 2.0 Identity Provider On Wi-Fi Network",
        "tags" : [ "Hotspot 2.0 Identity Provider" ]
      },
      "put" : {
        "description" : "Activate Hotspot 2.0 identity provider on Wi-Fi network.",
        "operationId" : "activateHotspot20IdentityProviderOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Hotspot 2.0 Identity Provider ID",
          "in" : "path",
          "name" : "hotspot20IdentityProviderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Hotspot 2.0 Identity Provider On Wi-Fi Network",
        "tags" : [ "Hotspot 2.0 Identity Provider" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/hotspot20Operators/{hotspot20OperatorId}" : {
      "delete" : {
        "description" : "Deactivate Hotspot 2.0 operator on Wi-Fi network.",
        "operationId" : "deactivateHotspot20OperatorOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Hotspot 2.0 Operator ID",
          "in" : "path",
          "name" : "hotspot20OperatorId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Hotspot 2.0 Operator On Wi-Fi Network",
        "tags" : [ "Hotspot 2.0 Operator" ]
      },
      "put" : {
        "description" : "Activate Hotspot 2.0 operator on Wi-Fi network.",
        "operationId" : "activateHotspot20OperatorOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Hotspot 2.0 Operator ID",
          "in" : "path",
          "name" : "hotspot20OperatorId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Hotspot 2.0 Operator On Wi-Fi Network",
        "tags" : [ "Hotspot 2.0 Operator" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/l2AclPolicies/{l2AclPolicyId}" : {
      "delete" : {
        "description" : "Deactivate layer-2 ACL policy on Wi-Fi network.",
        "operationId" : "deactivateL2AclPolicyOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "L2Acl Policy ID",
          "in" : "path",
          "name" : "l2AclPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Layer-2 ACL Policy On Wi-Fi Network",
        "tags" : [ "L2ACL Policy" ]
      },
      "put" : {
        "description" : "Activate layer-2 ACL policy on Wi-Fi network.",
        "operationId" : "activateL2AclPolicyOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "L2Acl Policy ID",
          "in" : "path",
          "name" : "l2AclPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Layer-2 ACL Policy On Wi-Fi Network",
        "tags" : [ "L2ACL Policy" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/l3AclPolicies/{l3AclPolicyId}" : {
      "delete" : {
        "description" : "Deactivate layer-3 ACL policy on Wi-Fi network.",
        "operationId" : "deactivateL3AclPolicyOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "L3Acl Policy ID",
          "in" : "path",
          "name" : "l3AclPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Layer-3 ACL Policy On Wi-Fi Network",
        "tags" : [ "L3ACL Policy" ]
      },
      "put" : {
        "description" : "Activate layer-3 ACL policy on Wi-Fi network.",
        "operationId" : "activateL3AclPolicyOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "L3Acl Policy ID",
          "in" : "path",
          "name" : "l3AclPolicyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Layer-3 ACL Policy On Wi-Fi Network",
        "tags" : [ "L3ACL Policy" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/macRegistrationPools/{macRegistrationPoolId}" : {
      "delete" : {
        "description" : "Use this API command to delete the relationship between MAC registration pool and Wi-Fi network.",
        "operationId" : "deactivateMacRegistrationPoolOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "MAC Registration Pool ID",
          "in" : "path",
          "name" : "macRegistrationPoolId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate MAC Registration Pool On Wi-Fi Network",
        "tags" : [ "MAC Registration Pool" ]
      },
      "put" : {
        "description" : "Use this API command to build the relationship between MAC registration pool and Wi-Fi network.",
        "operationId" : "activateMacRegistrationPoolOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "MAC Registration Pool ID",
          "in" : "path",
          "name" : "macRegistrationPoolId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate MAC Registration Pool On Wi-Fi Network",
        "tags" : [ "MAC Registration Pool" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/portalServiceProfiles/{portalServiceProfileId}" : {
      "put" : {
        "description" : "Activate a portal service profile on a Wi-Fi network.",
        "operationId" : "activatePortalServiceProfileOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Portal Service Profile ID",
          "in" : "path",
          "name" : "portalServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Portal Service Profile On Wi-Fi Network",
        "tags" : [ "Wi-Fi Portal Service Profile" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/radiusServerProfileSettings" : {
      "get" : {
        "description" : "Get RADIUS server profile settings on Wi-Fi network.",
        "operationId" : "getWifiNetworkRadiusServerProfileSettings",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiNetworkRadiusServerProfileSettings"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WifiNetworkRadiusServerProfileSettings"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Get RADIUS Server Profile Settings On Wi-Fi Network",
        "tags" : [ "RADIUS Profile" ]
      },
      "put" : {
        "description" : "Update RADIUS server profile settings on Wi-Fi network.",
        "operationId" : "updateWifiNetworkRadiusServerProfileSettings",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WifiNetworkRadiusServerProfileSettings"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WifiNetworkRadiusServerProfileSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Update RADIUS Server Profile Settings On Wi-Fi Network",
        "tags" : [ "RADIUS Profile" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/radiusServerProfiles/{radiusId}" : {
      "delete" : {
        "description" : "Use this API command to delete a relationship between RADIUS server profile and Wi-Fi network.",
        "operationId" : "deactivateRadiusServerProfileOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "RADIUS server profile identity",
          "in" : "path",
          "name" : "radiusId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate RADIUS Server Profile On Wi-Fi Network",
        "tags" : [ "RADIUS Profile" ]
      },
      "put" : {
        "description" : "Use this API command to build a relationship between RADIUS server profile and Wi-Fi network.",
        "operationId" : "activateRadiusServerProfileOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "RADIUS server profile identity",
          "in" : "path",
          "name" : "radiusId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate RADIUS Server Profile On Wi-Fi Network",
        "tags" : [ "RADIUS Profile" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/samlIdpProfiles/{samlIdpProfileId}" : {
      "put" : {
        "description" : "Use this API command to build the relationship between SAML 2.0 identity provider profile and Wi-Fi network.",
        "operationId" : "activateSamlIdpProfileOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "SAML identity provider profile ID",
          "in" : "path",
          "name" : "samlIdpProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate SAML Identity Provider Profile On Wi-Fi Network",
        "tags" : [ "SAML Identity Provider Profile" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/vlanPoolProfiles/{vlanPoolProfileId}" : {
      "delete" : {
        "description" : "Use this API command to deactivate a VLAN pool profile on a Wi-Fi network.",
        "operationId" : "deactivateVlanPoolProfileOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "VLAN Pool Profile ID",
          "in" : "path",
          "name" : "vlanPoolProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate VLAN Pool Profile On Wi-Fi Network",
        "tags" : [ "VLAN Pool Profile" ]
      },
      "put" : {
        "description" : "Use this API command to activate a VLAN pool profile on a Wi-Fi network.",
        "operationId" : "activateVlanPoolProfileOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "VLAN Pool Profile ID",
          "in" : "path",
          "name" : "vlanPoolProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate VLAN Pool Profile On Wi-Fi Network",
        "tags" : [ "VLAN Pool Profile" ]
      }
    },
    "/wifiNetworks/{wifiNetworkId}/wifiCallingServiceProfiles/{wifiCallingServiceProfileId}" : {
      "delete" : {
        "description" : "Deactivate a Wi-Fi calling service profile on a Wi-Fi network.",
        "operationId" : "deactivateWifiCallingServiceProfileOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Calling Service Profile ID",
          "in" : "path",
          "name" : "wifiCallingServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Deactivate Wi-Fi Calling Service Profile On Wi-Fi Network",
        "tags" : [ "Wi-Fi Calling Service Profile" ]
      },
      "put" : {
        "description" : "Activate a Wi-Fi calling service profile on a Wi-Fi network.",
        "operationId" : "activateWifiCallingServiceProfileOnWifiNetwork",
        "parameters" : [ {
          "description" : "Wi-Fi Network ID",
          "in" : "path",
          "name" : "wifiNetworkId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Wi-Fi Calling Service Profile ID",
          "in" : "path",
          "name" : "wifiCallingServiceProfileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseRequestIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Activate Wi-Fi Calling Service Profile On Wi-Fi Network",
        "tags" : [ "Wi-Fi Calling Service Profile" ]
      }
    },
    "/x509certs" : {
      "post" : {
        "deprecated" : true,
        "description" : "Validate the x509 certificate chain issued by a trusted certificate authority.",
        "operationId" : "validateX509Certificate",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TrustedCAChain"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseIdOnly"
                }
              }
            },
            "description" : "Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad/malformed request"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not-authorized"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Requested resource or related-entity not found"
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Validation error"
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Locked"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Validate X509 Certificates",
        "tags" : [ "Wi-Fi Network" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "AAANetwork" : {
        "required" : [ "name", "wlan" ],
        "type" : "object",
        "description" : "AAA Wi-Fi network",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Network"
        }, {
          "type" : "object",
          "properties" : {
            "accountingRadiusId" : {
              "type" : "string"
            },
            "authRadiusId" : {
              "type" : "string"
            },
            "description" : {
              "maxLength" : 256,
              "minLength" : 0,
              "type" : "string"
            },
            "enableAccountingProxy" : {
              "type" : "boolean",
              "default" : false
            },
            "enableAuthProxy" : {
              "type" : "boolean",
              "default" : false
            },
            "name" : {
              "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
              "type" : "string"
            },
            "useCertificateTemplate" : {
              "type" : "boolean",
              "default" : false
            },
            "venues" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/NetworkVenue"
              }
            },
            "wlan" : {
              "$ref" : "#/components/schemas/AAAWlan"
            }
          }
        } ]
      },
      "AAAWifiNetwork" : {
        "required" : [ "name", "wlan" ],
        "type" : "object",
        "description" : "AAA Wi-Fi network",
        "allOf" : [ {
          "$ref" : "#/components/schemas/WifiNetwork"
        }, {
          "type" : "object",
          "properties" : {
            "description" : {
              "maxLength" : 256,
              "minLength" : 0,
              "type" : "string"
            },
            "name" : {
              "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
              "type" : "string"
            },
            "useCertificateTemplate" : {
              "type" : "boolean",
              "default" : false
            },
            "wlan" : {
              "$ref" : "#/components/schemas/AAAWifiWlan"
            }
          }
        } ]
      },
      "AAAWifiWlan" : {
        "required" : [ "ssid" ],
        "type" : "object",
        "properties" : {
          "advancedCustomization" : {
            "$ref" : "#/components/schemas/AAAWifiWlanAdvancedCustomization"
          },
          "bypassCNA" : {
            "type" : "boolean",
            "default" : false
          },
          "bypassCPUsingMacAddressAuthentication" : {
            "type" : "boolean",
            "default" : false
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "managementFrameProtection" : {
            "type" : "string",
            "enum" : [ "Disabled", "Optional", "Required" ]
          },
          "ssid" : {
            "pattern" : "[^`\\s]([^`\\t\\r\\n]){0,30}[^`\\s]",
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "wlanSecurity" : {
            "type" : "string",
            "default" : "AAAWlanSecurityEnum.WPA2Enterprise",
            "enum" : [ "WPA2Enterprise", "WPA3" ]
          }
        },
        "description" : "AAA Wi-Fi WLAN"
      },
      "AAAWifiWlanAdvancedCustomization" : {
        "type" : "object",
        "properties" : {
          "applicationVisibilityEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "arpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "broadcastProbeResponseDelay" : {
            "maximum" : 120,
            "minimum" : 8,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "bssPriority" : {
            "type" : "string",
            "default" : "BSSPriorityEnum.HIGH",
            "enum" : [ "HIGH", "LOW" ]
          },
          "clientInactivityTimeout" : {
            "maximum" : 86400,
            "minimum" : 60,
            "type" : "integer",
            "format" : "int32",
            "default" : 120
          },
          "clientIsolation" : {
            "type" : "boolean",
            "default" : false
          },
          "clientIsolationOptions" : {
            "$ref" : "#/components/schemas/ClientIsolationOptions"
          },
          "clientLoadBalancingEnable" : {
            "type" : "boolean",
            "default" : true
          },
          "dhcpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "directedThreshold" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "dnsProxy" : {
            "$ref" : "#/components/schemas/DnsProxy"
          },
          "dnsProxyEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAaaVlanOverride" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAdditionalRegulatoryDomains" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAirtimeDecongestion" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAntiSpoofing" : {
            "type" : "boolean",
            "default" : false
          },
          "enableApHostNameAdvertisement" : {
            "type" : "boolean",
            "default" : false
          },
          "enableArpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableBandBalancing" : {
            "type" : "boolean",
            "default" : true
          },
          "enableDhcpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableFastRoaming" : {
            "type" : "boolean",
            "default" : false
          },
          "enableGtkRekey" : {
            "type" : "boolean",
            "default" : true
          },
          "enableJoinRSSIThreshold" : {
            "type" : "boolean",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic.",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableNeighborReport" : {
            "type" : "boolean",
            "default" : true
          },
          "enableOptimizedConnectivityExperience" : {
            "type" : "boolean",
            "default" : false
          },
          "enableSyslog" : {
            "type" : "boolean",
            "default" : false
          },
          "enableTransientClientManagement" : {
            "type" : "boolean",
            "default" : false
          },
          "forceMobileDeviceDhcp" : {
            "type" : "boolean",
            "default" : false
          },
          "hideSsid" : {
            "type" : "boolean",
            "default" : false
          },
          "joinExpireTime" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 300
          },
          "joinRSSIThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -85
          },
          "joinWaitThreshold" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "joinWaitTime" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          },
          "maxClientsOnWlanPerRadio" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "mobilityDomainId" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "multiLinkOperationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multiLinkOperationOptions" : {
            "$ref" : "#/components/schemas/MultiLinkOperationOptions"
          },
          "multicastDownlinkRateLimiting" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps). The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastFilterEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps).",
            "format" : "int32",
            "default" : 1
          },
          "proxyARP" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetOptions" : {
            "$ref" : "#/components/schemas/QosMapSetOptions"
          },
          "qosMirroringEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMirroringScope" : {
            "type" : "string",
            "default" : "QosMirroringScopeEnum.MSCS_REQUESTS_ONLY",
            "enum" : [ "MSCS_REQUESTS_ONLY", "ALL_CLIENTS" ]
          },
          "radioCustomization" : {
            "$ref" : "#/components/schemas/WlanRadioCustomization"
          },
          "radiusOptions" : {
            "$ref" : "#/components/schemas/RadiusOptions"
          },
          "respectiveAccessControl" : {
            "type" : "boolean",
            "default" : true
          },
          "rssiAssociationRejectionThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -75
          },
          "totalDownlinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "totalUplinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userDownlinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userUplinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "wifi6Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifi7Enabled" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "WLAN advanced customization"
      },
      "AAAWlan" : {
        "required" : [ "ssid" ],
        "type" : "object",
        "properties" : {
          "advancedCustomization" : {
            "$ref" : "#/components/schemas/AAAWlanAdvancedCustomization"
          },
          "bypassCNA" : {
            "type" : "boolean",
            "default" : false
          },
          "bypassCPUsingMacAddressAuthentication" : {
            "type" : "boolean",
            "default" : false
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "macAddressAuthenticationConfiguration" : {
            "$ref" : "#/components/schemas/MacAddressAuthenticationConfiguration"
          },
          "managementFrameProtection" : {
            "type" : "string",
            "enum" : [ "Disabled", "Optional", "Required" ]
          },
          "ssid" : {
            "pattern" : "[^`\\s]([^`\\t\\r\\n]){0,30}[^`\\s]",
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "wlanSecurity" : {
            "type" : "string",
            "default" : "AAAWlanSecurityEnum.WPA2Enterprise",
            "enum" : [ "WPA2Enterprise", "WPA3" ]
          }
        },
        "description" : "WLAN"
      },
      "AAAWlanAdvancedCustomization" : {
        "type" : "object",
        "properties" : {
          "accessControlEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "accessControlProfileId" : {
            "type" : "string"
          },
          "applicationPolicyEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "applicationPolicyId" : {
            "type" : "string"
          },
          "applicationVisibilityEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "arpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "broadcastProbeResponseDelay" : {
            "maximum" : 120,
            "minimum" : 8,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "bssPriority" : {
            "type" : "string",
            "default" : "BSSPriorityEnum.HIGH",
            "enum" : [ "HIGH", "LOW" ]
          },
          "clientInactivityTimeout" : {
            "maximum" : 86400,
            "minimum" : 60,
            "type" : "integer",
            "format" : "int32",
            "default" : 120
          },
          "clientIsolation" : {
            "type" : "boolean",
            "default" : false
          },
          "clientIsolationOptions" : {
            "$ref" : "#/components/schemas/ClientIsolationOptions"
          },
          "clientLoadBalancingEnable" : {
            "type" : "boolean",
            "default" : true
          },
          "devicePolicyId" : {
            "type" : "string"
          },
          "dhcpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "directedThreshold" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "dnsProxy" : {
            "$ref" : "#/components/schemas/DnsProxy"
          },
          "dnsProxyEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAaaVlanOverride" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAdditionalRegulatoryDomains" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAirtimeDecongestion" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAntiSpoofing" : {
            "type" : "boolean",
            "default" : false
          },
          "enableApHostNameAdvertisement" : {
            "type" : "boolean",
            "default" : false
          },
          "enableArpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableBandBalancing" : {
            "type" : "boolean",
            "default" : true
          },
          "enableDhcpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableFastRoaming" : {
            "type" : "boolean",
            "default" : false
          },
          "enableGtkRekey" : {
            "type" : "boolean",
            "default" : true
          },
          "enableJoinRSSIThreshold" : {
            "type" : "boolean",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic.",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableNeighborReport" : {
            "type" : "boolean",
            "default" : true
          },
          "enableOptimizedConnectivityExperience" : {
            "type" : "boolean",
            "default" : false
          },
          "enableSyslog" : {
            "type" : "boolean",
            "default" : false
          },
          "enableTransientClientManagement" : {
            "type" : "boolean",
            "default" : false
          },
          "forceMobileDeviceDhcp" : {
            "type" : "boolean",
            "default" : false
          },
          "hideSsid" : {
            "type" : "boolean",
            "default" : false
          },
          "joinExpireTime" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 300
          },
          "joinRSSIThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -85
          },
          "joinWaitThreshold" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "joinWaitTime" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          },
          "l2AclEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "l2AclPolicyId" : {
            "type" : "string"
          },
          "l3AclEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "l3AclPolicyId" : {
            "type" : "string"
          },
          "maxClientsOnWlanPerRadio" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "mobilityDomainId" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "multiLinkOperationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multiLinkOperationOptions" : {
            "$ref" : "#/components/schemas/MultiLinkOperationOptions"
          },
          "multicastDownlinkRateLimiting" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps). The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastFilterEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps).",
            "format" : "int32",
            "default" : 1
          },
          "proxyARP" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetOptions" : {
            "$ref" : "#/components/schemas/QosMapSetOptions"
          },
          "qosMirroringEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMirroringScope" : {
            "type" : "string",
            "default" : "QosMirroringScopeEnum.MSCS_REQUESTS_ONLY",
            "enum" : [ "MSCS_REQUESTS_ONLY", "ALL_CLIENTS" ]
          },
          "radioCustomization" : {
            "$ref" : "#/components/schemas/WlanRadioCustomization"
          },
          "radiusOptions" : {
            "$ref" : "#/components/schemas/RadiusOptions"
          },
          "respectiveAccessControl" : {
            "type" : "boolean",
            "default" : true
          },
          "rssiAssociationRejectionThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -75
          },
          "totalDownlinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "totalUplinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userDownlinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userUplinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "vlanPool" : {
            "$ref" : "#/components/schemas/VlanPool"
          },
          "wifi6Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifi7Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifiCallingEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "wifiCallingIds" : {
            "maxItems" : 5,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "WLAN advanced customization"
      },
      "ACXApPacketCaptureStartResponse" : {
        "type" : "object",
        "properties" : {
          "sessionId" : {
            "type" : "string"
          }
        },
        "description" : "ACX AP packet capture start info."
      },
      "ACXApPacketCaptureStartResponseOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/ACXApPacketCaptureStartResponse"
          }
        }
      },
      "ACXApPacketCaptureStateResponse" : {
        "type" : "object",
        "properties" : {
          "errorMsg" : {
            "type" : "string"
          },
          "fileName" : {
            "type" : "string"
          },
          "fileUrl" : {
            "type" : "string"
          },
          "sessionId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "IDLE", "OPERATION_TIMEOUT", "STARTING", "STARTING_TIMEOUT", "STARTING_ERROR", "CAPTURING", "STOPPING", "STOPPING_TIMEOUT", "STOPPING_ERROR", "READY" ]
          }
        },
        "description" : "ACX AP packet capture state info."
      },
      "ACXApPacketCaptureStopRequest" : {
        "type" : "object",
        "properties" : {
          "sessionId" : {
            "type" : "string"
          }
        },
        "description" : "ACX AP packet capture stop info."
      },
      "AccessControlProfile" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "applicationPolicy" : {
            "$ref" : "#/components/schemas/IdAndEnabled"
          },
          "description" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "devicePolicy" : {
            "$ref" : "#/components/schemas/IdAndEnabled"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "l2AclPolicy" : {
            "$ref" : "#/components/schemas/IdAndEnabled"
          },
          "l3AclPolicy" : {
            "$ref" : "#/components/schemas/IdAndEnabled"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          },
          "rateLimiting" : {
            "$ref" : "#/components/schemas/RateLimiting"
          }
        },
        "description" : "Access control profile"
      },
      "AccessControlProfileOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/AccessControlProfile"
          }
        }
      },
      "AccessControlProfileV1_1" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          },
          "rateLimiting" : {
            "$ref" : "#/components/schemas/RateLimiting"
          }
        },
        "description" : "Access control profile"
      },
      "Ap" : {
        "required" : [ "name", "serialNumber", "venueId" ],
        "type" : "object",
        "properties" : {
          "apGroupId" : {
            "type" : "string"
          },
          "bssColoring" : {
            "$ref" : "#/components/schemas/ApBssColoring"
          },
          "clientAdmissionControl" : {
            "$ref" : "#/components/schemas/ApClientAdmissionControl"
          },
          "clientCount" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "description" : {
            "maxLength" : 180,
            "minLength" : 0,
            "type" : "string"
          },
          "deviceGps" : {
            "$ref" : "#/components/schemas/DeviceGps"
          },
          "externalIp" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "firmware" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "indoorModel" : {
            "type" : "boolean",
            "readOnly" : true,
            "default" : false
          },
          "ip" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "lastContacted" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "lastUpdated" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "mac" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "meshRole" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string",
            "default" : "null"
          },
          "name" : {
            "pattern" : "(?=^((?!`|\\$\\()[ -_a-~]){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "networkSettings" : {
            "$ref" : "#/components/schemas/NetworkSettings"
          },
          "poePortStatus" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "position" : {
            "$ref" : "#/components/schemas/ApPosition"
          },
          "radio" : {
            "$ref" : "#/components/schemas/ApRadioCustomization"
          },
          "serialNumber" : {
            "pattern" : "^[1-9][0-9]{11}$",
            "type" : "string"
          },
          "state" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null",
            "enum" : [ "InSetupPhase", "Operational", "RequiresAttention", "TransientIssue" ]
          },
          "subState" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null",
            "enum" : [ "NeverContactedCloud", "Initializing", "Operational", "ApplyingFirmware", "ApplyingConfiguration", "FirmwareUpdateFailed", "ConfigurationUpdateFailed", "DisconnectedFromCloud", "Rebooting" ]
          },
          "tags" : {
            "maxItems" : 24,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "uptime_seconds" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "venueId" : {
            "type" : "string"
          }
        },
        "description" : "AP for requests"
      },
      "ApAntennaTypeSettings" : {
        "type" : "object",
        "properties" : {
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP model specific configuration for AP LAN ports and external antenna."
      },
      "ApBandModeSettings" : {
        "type" : "object",
        "properties" : {
          "bandMode" : {
            "type" : "string",
            "enum" : [ "DUAL", "TRIPLE" ]
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP model specific configuration for band mode settings."
      },
      "ApBssColoring" : {
        "type" : "object",
        "properties" : {
          "bssColoringEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "BSS Coloring Setting of an AP."
      },
      "ApBssColoringSettings" : {
        "type" : "object",
        "properties" : {
          "bssColoringEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "BSS Coloring Setting of an AP."
      },
      "ApCapabilities" : {
        "type" : "object",
        "properties" : {
          "allowCbandCountry" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "allowDfsCountry" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "bandCombinationCapabilities" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "null",
              "enum" : [ "DUAL", "TRIPLE" ]
            }
          },
          "canSupportCellular" : {
            "type" : "boolean",
            "default" : false
          },
          "canSupportLacp" : {
            "type" : "boolean",
            "default" : false
          },
          "canSupportPoeMode" : {
            "type" : "boolean",
            "default" : false
          },
          "canSupportPoeOut" : {
            "type" : "boolean",
            "default" : false
          },
          "capabilityScore" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "defaultBandCombination" : {
            "type" : "string",
            "default" : "null",
            "enum" : [ "DUAL", "TRIPLE" ]
          },
          "externalAntenna" : {
            "$ref" : "#/components/schemas/ExternalAntenna"
          },
          "has160MHzChannelBandwidth" : {
            "type" : "boolean",
            "default" : false
          },
          "isOutdoor" : {
            "type" : "boolean",
            "default" : false
          },
          "lanPortPictureDownloadUrl" : {
            "type" : "string"
          },
          "lanPorts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CapabilitiesLanPort"
            }
          },
          "ledOn" : {
            "type" : "boolean",
            "default" : false
          },
          "lldpAdInterval" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lldpEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "lldpHoldTime" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lldpMgmtEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "maxChannelization24G" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxChannelization5G" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxChannelization6G" : {
            "type" : "integer",
            "format" : "int32"
          },
          "model" : {
            "type" : "string"
          },
          "pictureDownloadUrl" : {
            "type" : "string"
          },
          "poeModeCapabilities" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "primaryWanRecoveryTimer" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requireOneEnabledTrunkPort" : {
            "type" : "boolean",
            "default" : false
          },
          "simCardPrimaryApn" : {
            "type" : "string"
          },
          "simCardPrimaryCellularNetworkSelection" : {
            "type" : "string"
          },
          "simCardPrimaryEnabled" : {
            "type" : "boolean",
            "default" : true
          },
          "simCardPrimaryRoaming" : {
            "type" : "boolean",
            "default" : true
          },
          "simCardSecondaryApn" : {
            "type" : "string"
          },
          "simCardSecondaryCellularNetworkSelection" : {
            "type" : "string"
          },
          "simCardSecondaryEnabled" : {
            "type" : "boolean",
            "default" : true
          },
          "simCardSecondaryRoaming" : {
            "type" : "boolean",
            "default" : true
          },
          "support11AX" : {
            "type" : "boolean",
            "default" : false
          },
          "supportApStickyClientSteering" : {
            "type" : "boolean",
            "default" : false
          },
          "supportBandCombination" : {
            "type" : "boolean",
            "default" : false
          },
          "supportChannel144" : {
            "type" : "boolean",
            "default" : false
          },
          "supportDual5gMode" : {
            "type" : "boolean",
            "default" : false
          },
          "supportMesh" : {
            "type" : "boolean",
            "default" : true
          },
          "supportTriRadio" : {
            "type" : "boolean",
            "default" : false
          },
          "version" : {
            "type" : "string"
          },
          "wanConnection" : {
            "type" : "string"
          }
        },
        "description" : "AP model capabilities"
      },
      "ApClient" : {
        "required" : [ "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "DISCONNECTED" ]
          }
        }
      },
      "ApClientAdmissionControl" : {
        "type" : "object",
        "properties" : {
          "enable24G" : {
            "type" : "boolean",
            "default" : false
          },
          "enable50G" : {
            "type" : "boolean",
            "default" : false
          },
          "maxRadioLoad24G" : {
            "maximum" : 100,
            "minimum" : 50,
            "type" : "integer",
            "format" : "int32",
            "default" : 75
          },
          "maxRadioLoad50G" : {
            "maximum" : 100,
            "minimum" : 50,
            "type" : "integer",
            "format" : "int32",
            "default" : 75
          },
          "minClientCount24G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "minClientCount50G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "minClientThroughput24G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "minClientThroughput50G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "AP Client Admission Control Settings"
      },
      "ApClientAdmissionControlSettings" : {
        "type" : "object",
        "properties" : {
          "enable24G" : {
            "type" : "boolean",
            "default" : false
          },
          "enable50G" : {
            "type" : "boolean",
            "default" : false
          },
          "maxRadioLoad24G" : {
            "maximum" : 100,
            "minimum" : 50,
            "type" : "integer",
            "format" : "int32",
            "default" : 75
          },
          "maxRadioLoad50G" : {
            "maximum" : 100,
            "minimum" : 50,
            "type" : "integer",
            "format" : "int32",
            "default" : 75
          },
          "minClientCount24G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "minClientCount50G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "minClientThroughput24G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "minClientThroughput50G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP Client Admission Control Settings"
      },
      "ApCompatibilitiesV1" : {
        "type" : "object",
        "properties" : {
          "compatibilities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApCompatibilityV1"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ApCompatibilityV1" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id's meaning varies by API and shows compatibility within it's associated scope."
          },
          "incompatible" : {
            "type" : "integer",
            "description" : "Number of incompatible devices.",
            "format" : "int32"
          },
          "incompatibleFeatures" : {
            "type" : "array",
            "description" : "The incompatible Wi-Fi features and related information.",
            "items" : {
              "$ref" : "#/components/schemas/IncompatibleWifiFeatureV1"
            }
          },
          "total" : {
            "type" : "integer",
            "description" : "Total number of devices.",
            "format" : "int32"
          }
        },
        "description" : "The incompatible features, required AP firmware and model, and AP counts."
      },
      "ApCreationV1" : {
        "required" : [ "name", "serialNumber" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 180,
            "minLength" : 0,
            "type" : "string"
          },
          "deviceGps" : {
            "$ref" : "#/components/schemas/DeviceGps"
          },
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string",
            "default" : "null"
          },
          "name" : {
            "pattern" : "(?=^((?!`|\\$\\()[ -_a-~]){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "serialNumber" : {
            "pattern" : "^[1-9][0-9]{11}$",
            "type" : "string"
          },
          "tags" : {
            "maxItems" : 24,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "AP for requests"
      },
      "ApDeep" : {
        "required" : [ "name", "serialNumber", "venueId" ],
        "type" : "object",
        "properties" : {
          "apGroupId" : {
            "type" : "string"
          },
          "bssColoring" : {
            "$ref" : "#/components/schemas/ApBssColoring"
          },
          "clientAdmissionControl" : {
            "$ref" : "#/components/schemas/ApClientAdmissionControl"
          },
          "clientCount" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "description" : {
            "maxLength" : 180,
            "minLength" : 0,
            "type" : "string"
          },
          "deviceGps" : {
            "$ref" : "#/components/schemas/DeviceGps"
          },
          "externalIp" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "firmware" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "indoorModel" : {
            "type" : "boolean",
            "readOnly" : true,
            "default" : false
          },
          "ip" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "lanPorts" : {
            "$ref" : "#/components/schemas/ApLanPorts"
          },
          "lastContacted" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "lastUpdated" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "mac" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "meshRole" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string",
            "default" : "null"
          },
          "name" : {
            "pattern" : "(?=^((?!`|\\$\\()[ -_a-~]){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "poePortStatus" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null"
          },
          "position" : {
            "$ref" : "#/components/schemas/ApPosition"
          },
          "radio" : {
            "$ref" : "#/components/schemas/ApRadioCustomization"
          },
          "serialNumber" : {
            "pattern" : "^[1-9][0-9]{11}$",
            "type" : "string"
          },
          "softDeleted" : {
            "type" : "boolean",
            "default" : false
          },
          "softDeletedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "state" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null",
            "enum" : [ "InSetupPhase", "Operational", "RequiresAttention", "TransientIssue" ]
          },
          "subState" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "null",
            "enum" : [ "NeverContactedCloud", "Initializing", "Operational", "ApplyingFirmware", "ApplyingConfiguration", "FirmwareUpdateFailed", "ConfigurationUpdateFailed", "DisconnectedFromCloud", "Rebooting" ]
          },
          "tags" : {
            "maxItems" : 24,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "uptime_seconds" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "venueId" : {
            "type" : "string"
          }
        },
        "description" : "AP (deep)"
      },
      "ApDhcpSettings" : {
        "required" : [ "dhcpApRole", "serialNumber" ],
        "type" : "object",
        "properties" : {
          "dhcpApRole" : {
            "type" : "string",
            "enum" : [ "PrimaryServer", "BackupServer", "NatGateway" ]
          },
          "serialNumber" : {
            "maxLength" : 12,
            "minLength" : 12,
            "type" : "string"
          }
        },
        "description" : "DHCP Service AP information."
      },
      "ApDiagnosisCommand" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "targetHost" : {
            "pattern" : "(^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9]?)\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$)|(^(\\b((?=[a-z0-9-]{1,63}\\.)(xn--)?[a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,63}\\b)$)",
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PING", "TRACE_ROUTE", "BLINK_LED" ]
          }
        },
        "description" : "The AP diagnosis command"
      },
      "ApDiagnosisCommandResponse" : {
        "type" : "object",
        "properties" : {
          "response" : {
            "type" : "string"
          }
        },
        "description" : "AP troubleshooting response"
      },
      "ApDiagnosisCommandResponseOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/ApDiagnosisCommandResponse"
          }
        }
      },
      "ApDirectedMulticast" : {
        "type" : "object",
        "properties" : {
          "networkEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : true
          },
          "wiredEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "wirelessEnabled" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "Directed Multicast Setting."
      },
      "ApDirectedMulticastSettings" : {
        "type" : "object",
        "properties" : {
          "networkEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          },
          "wiredEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "wirelessEnabled" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "Directed Multicast Setting."
      },
      "ApDownloadLog" : {
        "type" : "object",
        "properties" : {
          "fileURL" : {
            "type" : "string"
          }
        },
        "description" : "AP troubleshooting download support log response."
      },
      "ApExternalAntennaSettings" : {
        "type" : "object",
        "properties" : {
          "externalAntenna" : {
            "$ref" : "#/components/schemas/ExternalAntenna"
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP model specific configuration for AP LAN ports and external antenna."
      },
      "ApFloorPosition" : {
        "type" : "object",
        "properties" : {
          "xPercent" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "number",
            "format" : "float",
            "default" : 0.0
          },
          "yPercent" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "number",
            "format" : "float",
            "default" : 0.0
          }
        },
        "description" : "AP position object"
      },
      "ApGroup" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "apSerialNumbers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApSerialNumber"
            }
          },
          "description" : {
            "maxLength" : 180,
            "minLength" : 2,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,64}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "venueId" : {
            "type" : "string",
            "deprecated" : true
          }
        },
        "description" : "AP-Group per venue containing an optional list of AP serial numbers for association."
      },
      "ApGroupDeep" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "aps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApDeep"
            }
          },
          "description" : {
            "maxLength" : 180,
            "minLength" : 2,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "isDefault" : {
            "type" : "boolean",
            "default" : false
          },
          "name" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,64}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "venueId" : {
            "type" : "string"
          }
        },
        "description" : "AP-Group per venue containing a list of AP."
      },
      "ApIotSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "mqttBrokerAddress" : {
            "maxLength" : 255,
            "minLength" : 0,
            "pattern" : "^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])$|^(([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,})$",
            "type" : "string",
            "description" : "The MQTT IPv4 address/FQDN of the VRIoT controller."
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "description" : "True if using venue settings (overriding AP settings).",
            "default" : false
          }
        },
        "description" : "AP IoT Settings"
      },
      "ApLanPort" : {
        "required" : [ "type", "untagId", "vlanMembers" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "portId" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ACCESS", "GENERAL", "TRUNK" ]
          },
          "untagId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "vlanMembers" : {
            "pattern" : "^(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4])(?: *- *(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4]))?(?: *, *(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4])(?: *- *(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4]))?)*$",
            "type" : "string"
          }
        },
        "description" : "AP LAN-port"
      },
      "ApLanPortSettings" : {
        "type" : "object",
        "properties" : {
          "lanPorts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApLanPort"
            }
          },
          "poeMode" : {
            "type" : "string",
            "enum" : [ "Auto", "802.3af", "802.3at", "802.3bt-Class_5", "802.3bt-Class_6", "802.3bt-Class_7", "802.3bt-Class_8" ]
          },
          "poeOut" : {
            "type" : "boolean",
            "default" : false
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP model specific configuration for AP LAN ports and external antenna."
      },
      "ApLanPortSettingsV1" : {
        "type" : "object",
        "properties" : {
          "clientIsolationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "clientIsolationSettings" : {
            "$ref" : "#/components/schemas/LanPortClientIsolationSettings"
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "overwriteUntagId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "overwriteVlanMembers" : {
            "pattern" : "^(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4])(?: *- *(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4]))?(?: *, *(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4])(?: *- *(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4]))?)*$",
            "type" : "string"
          },
          "softGreEnabled" : {
            "type" : "boolean",
            "readOnly" : true,
            "default" : false
          },
          "softGreSettings" : {
            "$ref" : "#/components/schemas/LanPortSoftGreProfileSettings"
          }
        },
        "description" : "AP LAN-port"
      },
      "ApLanPortSpecificSettings" : {
        "type" : "object",
        "properties" : {
          "poeMode" : {
            "type" : "string",
            "enum" : [ "Auto", "802.3af", "802.3at", "802.3bt-Class_5", "802.3bt-Class_6", "802.3bt-Class_7", "802.3bt-Class_8" ]
          },
          "poeOut" : {
            "type" : "boolean",
            "default" : false
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP model specific configuration for AP LAN ports and external antenna."
      },
      "ApLanPorts" : {
        "type" : "object",
        "properties" : {
          "lanPorts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApLanPort"
            }
          },
          "poeOut" : {
            "type" : "boolean",
            "default" : false
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP model specific configuration for AP LAN ports and external antenna."
      },
      "ApLed" : {
        "type" : "object",
        "properties" : {
          "ledEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP model specific configuration for AP LAN ports and external antenna."
      },
      "ApLedSettings" : {
        "type" : "object",
        "properties" : {
          "ledEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP model specific configuration for AP LAN ports and external antenna."
      },
      "ApLldpNeighbor" : {
        "type" : "object",
        "properties" : {
          "detectedTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lldpAdv" : {
            "type" : "string"
          },
          "lldpCapability" : {
            "type" : "string"
          },
          "lldpChassisID" : {
            "type" : "string"
          },
          "lldpClass" : {
            "type" : "string"
          },
          "lldpDeviceType" : {
            "type" : "string"
          },
          "lldpInterface" : {
            "type" : "string"
          },
          "lldpMAUOperType" : {
            "type" : "string"
          },
          "lldpMDIPower" : {
            "type" : "string"
          },
          "lldpMFS" : {
            "type" : "string"
          },
          "lldpMgmtIP" : {
            "type" : "string"
          },
          "lldpPDReqPowerVal" : {
            "type" : "string"
          },
          "lldpPMDAutoNeg" : {
            "type" : "string"
          },
          "lldpPSEAllocPowerVal" : {
            "type" : "string"
          },
          "lldpPortDesc" : {
            "type" : "string"
          },
          "lldpPortID" : {
            "type" : "string"
          },
          "lldpPowerPairs" : {
            "type" : "string"
          },
          "lldpPowerPriority" : {
            "type" : "string"
          },
          "lldpPowerSource" : {
            "type" : "string"
          },
          "lldpPowerType" : {
            "type" : "string"
          },
          "lldpRID" : {
            "type" : "string"
          },
          "lldpSysDesc" : {
            "type" : "string"
          },
          "lldpSysName" : {
            "type" : "string"
          },
          "lldpTime" : {
            "type" : "string"
          },
          "lldpUPOE" : {
            "type" : "string"
          },
          "lldpVia" : {
            "type" : "string"
          },
          "neighborManaged" : {
            "type" : "boolean",
            "default" : false
          },
          "neighborSerialNumber" : {
            "type" : "string"
          }
        },
        "description" : "The AP's LLDP neighbor."
      },
      "ApLogs" : {
        "type" : "object",
        "properties" : {
          "fileUrl" : {
            "type" : "string"
          }
        },
        "description" : "AP troubleshooting download support log response."
      },
      "ApManagementTrafficVlanSettings" : {
        "type" : "object",
        "properties" : {
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        },
        "description" : "AP management VLAN settings in AP level"
      },
      "ApMesh" : {
        "type" : "object",
        "properties" : {
          "meshMode" : {
            "type" : "string",
            "default" : "MeshModeEnum.AUTO",
            "enum" : [ "AUTO", "ROOT", "MESH", "DISABLED" ]
          },
          "uplinkMacAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "uplinkMode" : {
            "type" : "string",
            "default" : "MeshUplinkModeEnum.SMART",
            "enum" : [ "SMART", "MANUAL" ]
          },
          "venueMeshEnabled" : {
            "type" : "boolean",
            "readOnly" : true,
            "default" : false
          }
        },
        "description" : "AP mesh"
      },
      "ApMeshSettings" : {
        "type" : "object",
        "properties" : {
          "meshMode" : {
            "type" : "string",
            "default" : "MeshModeEnum.AUTO",
            "enum" : [ "AUTO", "ROOT", "MESH", "DISABLED" ]
          },
          "uplinkMacAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "uplinkMode" : {
            "type" : "string",
            "default" : "MeshUplinkModeEnum.SMART",
            "enum" : [ "SMART", "MANUAL" ]
          }
        },
        "description" : "AP mesh"
      },
      "ApModelExternalAntenna" : {
        "type" : "object",
        "properties" : {
          "enable24G" : {
            "type" : "boolean",
            "default" : false
          },
          "enable50G" : {
            "type" : "boolean",
            "default" : false
          },
          "gain24G" : {
            "maximum" : 60,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "gain50G" : {
            "maximum" : 60,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "description" : "Venue AP-model specific attribute"
      },
      "ApModelLanPort" : {
        "type" : "object",
        "properties" : {
          "lanPorts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VenueLanPort"
            }
          },
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "poeMode" : {
            "type" : "string",
            "enum" : [ "Auto", "802.3af", "802.3at", "802.3bt-Class_5", "802.3bt-Class_6", "802.3bt-Class_7", "802.3bt-Class_8" ]
          },
          "poeOut" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "Venue AP-model specific attribute"
      },
      "ApModelLed" : {
        "type" : "object",
        "properties" : {
          "ledEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "description" : "Venue AP-model specific attribute"
      },
      "ApModelSpecific" : {
        "type" : "object",
        "properties" : {
          "bandMode" : {
            "type" : "string",
            "enum" : [ "DUAL", "TRIPLE" ]
          },
          "externalAntenna" : {
            "$ref" : "#/components/schemas/ExternalAntenna"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "lanPorts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApLanPort"
            }
          },
          "ledEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "poeOut" : {
            "type" : "boolean",
            "default" : false
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP model specific configuration for AP LAN ports and external antenna."
      },
      "ApNeighbor" : {
        "type" : "object",
        "description" : "The AP's neighbor.",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ApRfNeighbor"
        }, {
          "$ref" : "#/components/schemas/ApLldpNeighbor"
        } ]
      },
      "ApNeighborQuery" : {
        "type" : "object",
        "properties" : {
          "filters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApNeighborQueryFilter"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          },
          "sortField" : {
            "type" : "string"
          },
          "sortOrder" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        },
        "description" : "Query request"
      },
      "ApNeighborQueryData" : {
        "type" : "object",
        "properties" : {
          "neighbors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApNeighbor"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "The queried AP neighbor response."
      },
      "ApNeighborQueryFilter" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "RF_NEIGHBOR", "LLDP_NEIGHBOR" ]
          }
        },
        "description" : "Filters used to query AP neighbor."
      },
      "ApNeighbors" : {
        "required" : [ "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "CURRENT" ]
          },
          "type" : {
            "type" : "string",
            "enum" : [ "RF_NEIGHBOR", "LLDP_NEIGHBOR" ]
          }
        }
      },
      "ApNetworkSettings" : {
        "required" : [ "ipType" ],
        "type" : "object",
        "properties" : {
          "gateway" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "ip" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "ipType" : {
            "type" : "string",
            "enum" : [ "DYNAMIC", "STATIC" ]
          },
          "netmask" : {
            "pattern" : "^(?:(?:(?:255\\.){3}(?:252|248|240|224|192|128|0+))|(?:(?:255\\.){2}(?:255|254|252|248|240|224|192|128|0+)\\.0)|(?:(?:255\\.)(?:255|254|252|248|240|224|192|128|0+)(?:\\.0+){2})|(?:(?:255|254|252|248|240|224|192|128|0+)(?:\\.0+){3}))$",
            "type" : "string"
          },
          "primaryDnsServer" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "secondaryDnsServer" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          }
        },
        "description" : "Network Settings of AP."
      },
      "ApPacketAction" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "enum" : [ "START", "STOP" ]
          },
          "captureInterface" : {
            "type" : "string",
            "enum" : [ "RADIO24", "RADIO50", "RADIO50UPPER", "RADIO50LOWER", "RADIO60", "ETH0", "ETH1", "ETH2", "ETH3", "ETH4", "ETH5", "ETH6", "ETH7" ]
          },
          "frameTypeFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "MANAGEMENT", "CONTROL", "DATA" ]
            }
          },
          "macAddressFilter" : {
            "pattern" : "^$|^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$|^([0-9A-Fa-f]{12})$|^([0-9A-Fa-f]{4}[.]){2}([0-9A-Fa-f]{4})$",
            "type" : "string"
          },
          "sessionId" : {
            "type" : "string"
          }
        },
        "description" : "The AP packet action."
      },
      "ApPacketActionResponse" : {
        "type" : "object",
        "properties" : {
          "sessionId" : {
            "type" : "string"
          }
        },
        "description" : "The AP packet action response."
      },
      "ApPacketActionResponseOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/ApPacketActionResponse"
          }
        }
      },
      "ApPacketCaptureStartRequest" : {
        "required" : [ "captureInterface" ],
        "type" : "object",
        "properties" : {
          "captureInterface" : {
            "type" : "string",
            "enum" : [ "RADIO24", "RADIO50", "RADIO50UPPER", "RADIO50LOWER", "RADIO60", "ETH0", "ETH1", "ETH2", "ETH3", "ETH4", "ETH5", "ETH6", "ETH7" ]
          },
          "frameTypeFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "MANAGEMENT", "CONTROL", "DATA" ]
            }
          },
          "macAddressFilter" : {
            "pattern" : "^$|^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$|^([0-9A-Fa-f]{12})$|^([0-9A-Fa-f]{4}[.]){2}([0-9A-Fa-f]{4})$",
            "type" : "string"
          }
        },
        "description" : "AP packet capture start info."
      },
      "ApPackets" : {
        "type" : "object",
        "properties" : {
          "errorMsg" : {
            "type" : "string"
          },
          "fileName" : {
            "type" : "string"
          },
          "fileUrl" : {
            "type" : "string"
          },
          "sessionId" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "IDLE", "OPERATION_TIMEOUT", "STARTING", "STARTING_TIMEOUT", "STARTING_ERROR", "CAPTURING", "STOPPING", "STOPPING_TIMEOUT", "STOPPING_ERROR", "READY" ]
          }
        },
        "description" : "The AP packet capture info."
      },
      "ApPatchRequest" : {
        "required" : [ "action" ],
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "enum" : [ "ping", "traceRoute", "reboot", "factoryReset", "blinkLed" ]
          },
          "targetHost" : {
            "pattern" : "(^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9]?)\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$)|(^(\\b((?=[a-z0-9-]{1,63}\\.)(xn--)?[a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,63}\\b)$)",
            "type" : "string"
          }
        },
        "description" : "Trigger AP action request"
      },
      "ApPatchResponse" : {
        "type" : "object",
        "properties" : {
          "response" : {
            "type" : "string"
          }
        },
        "description" : "Trigger AP action response"
      },
      "ApPatchResponseOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/ApPatchResponse"
          }
        }
      },
      "ApPicture" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "imageId" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string",
            "default" : "null"
          },
          "imageName" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "default" : "null"
          },
          "imageUrl" : {
            "type" : "string"
          }
        },
        "description" : "AP Picture information."
      },
      "ApPictures" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string",
            "default" : "null"
          },
          "name" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "default" : "null"
          },
          "url" : {
            "type" : "string"
          }
        },
        "description" : "AP Picture information."
      },
      "ApPosition" : {
        "type" : "object",
        "properties" : {
          "floorplanId" : {
            "type" : "string"
          },
          "xPercent" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "number",
            "format" : "float",
            "default" : 0.0
          },
          "yPercent" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "number",
            "format" : "float",
            "default" : 0.0
          }
        },
        "description" : "AP position object"
      },
      "ApRadio24GHzSettings" : {
        "type" : "object",
        "properties" : {
          "allowedChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ]
            }
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth24GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz" ]
          },
          "manualChannel" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "method" : {
            "type" : "string",
            "default" : "ScanMethodEnum.CHANNELFLY",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "operativeChannel" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "operativeTxPower" : {
            "type" : "string",
            "readOnly" : true
          },
          "snr_dB" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPowerEnum.MAX",
            "enum" : [ "Auto", "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP radio customization for 2.4GHz."
      },
      "ApRadio5GHzSettings" : {
        "type" : "object",
        "properties" : {
          "allowedChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth5GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz", "80MHz", "160MHz" ]
          },
          "manualChannel" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "method" : {
            "type" : "string",
            "default" : "ScanMethodEnum.CHANNELFLY",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "operativeChannel" : {
            "type" : "integer",
            "format" : "int32"
          },
          "operativeTxPower" : {
            "type" : "string"
          },
          "snr_dB" : {
            "type" : "integer",
            "format" : "int32"
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPowerEnum.MAX",
            "enum" : [ "Auto", "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP radio customization for 5GHz."
      },
      "ApRadio6GHzSettings" : {
        "type" : "object",
        "properties" : {
          "allowedChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "bssMinRate6G" : {
            "type" : "string",
            "default" : "BssMinRate6GEnum.HE_MCS_0",
            "enum" : [ "HE_MCS_0", "HE_MCS_1", "HE_MCS_2", "HE_MCS_3" ]
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth6GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz", "80MHz", "160MHz" ]
          },
          "channelBandwidth320MhzGroup" : {
            "type" : "string",
            "default" : "ChannelBandwidth320MhzGroup6GEnum.AUTO",
            "enum" : [ "AUTO", "320MHz-1", "320MHz-2" ]
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "manualChannel" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "method" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "ScanMethodEnum.CHANNELFLY",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "mgmtTxRate6G" : {
            "type" : "string",
            "default" : "MgmtTxRate6GEnum._6",
            "enum" : [ "6", "9", "12", "18", "24" ]
          },
          "multicastDownlinkRateLimiting" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps) on 6-GHz radio. The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps) on 6-GHz radio.",
            "format" : "int32",
            "default" : 1
          },
          "operativeChannel" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "operativeTxPower" : {
            "type" : "string",
            "readOnly" : true
          },
          "snr_dB" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPower6GEnum.MAX",
            "enum" : [ "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP radio customization for 6GHz."
      },
      "ApRadioCustomization" : {
        "type" : "object",
        "properties" : {
          "apRadioParams24G" : {
            "$ref" : "#/components/schemas/ApRadioParams24G"
          },
          "apRadioParams50G" : {
            "$ref" : "#/components/schemas/ApRadioParams50G"
          },
          "apRadioParams6G" : {
            "$ref" : "#/components/schemas/ApRadioParams6G"
          },
          "apRadioParamsDual5G" : {
            "$ref" : "#/components/schemas/ApRadioParamsDual5G"
          },
          "enable24G" : {
            "type" : "boolean",
            "default" : false
          },
          "enable50G" : {
            "type" : "boolean",
            "default" : false
          },
          "enable6G" : {
            "type" : "boolean",
            "default" : false
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "AP radio customization"
      },
      "ApRadioDual5GHzSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "lower5gEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "radioParamsLower5G" : {
            "$ref" : "#/components/schemas/ApRadio5GHzSettings"
          },
          "radioParamsUpper5G" : {
            "$ref" : "#/components/schemas/ApRadio5GHzSettings"
          },
          "upper5gEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "useVenueEnabled" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP radio customization for dual 5GHz radios."
      },
      "ApRadioParams24G" : {
        "type" : "object",
        "properties" : {
          "allowedChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ]
            }
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth24GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz" ]
          },
          "manualChannel" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "method" : {
            "type" : "string",
            "default" : "ScanMethodEnum.BACKGROUND_SCANNING",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "operativeChannel" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "operativeTxPower" : {
            "type" : "string",
            "readOnly" : true
          },
          "snr_dB" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPowerEnum.MAX",
            "enum" : [ "Auto", "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP radio customization for 2.4GHz."
      },
      "ApRadioParams50G" : {
        "type" : "object",
        "properties" : {
          "allowedChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth5GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz", "80MHz", "160MHz" ]
          },
          "manualChannel" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "method" : {
            "type" : "string",
            "default" : "ScanMethodEnum.BACKGROUND_SCANNING",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "operativeChannel" : {
            "type" : "integer",
            "format" : "int32"
          },
          "operativeTxPower" : {
            "type" : "string"
          },
          "snr_dB" : {
            "type" : "integer",
            "format" : "int32"
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPowerEnum.MAX",
            "enum" : [ "Auto", "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP radio customization for 5GHz."
      },
      "ApRadioParams6G" : {
        "type" : "object",
        "properties" : {
          "allowedChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "bssMinRate6G" : {
            "type" : "string",
            "default" : "BssMinRate6GEnum.HE_MCS_0",
            "enum" : [ "HE_MCS_0", "HE_MCS_1", "HE_MCS_2", "HE_MCS_3" ]
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth6GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz", "80MHz", "160MHz" ]
          },
          "channelBandwidth320MhzGroup" : {
            "type" : "string",
            "default" : "ChannelBandwidth320MhzGroup6GEnum.AUTO",
            "enum" : [ "AUTO", "320MHz-1", "320MHz-2" ]
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "manualChannel" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "method" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "ScanMethodEnum.CHANNELFLY",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "mgmtTxRate6G" : {
            "type" : "string",
            "default" : "MgmtTxRate6GEnum._6",
            "enum" : [ "6", "9", "12", "18", "24" ]
          },
          "multicastDownlinkRateLimiting" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps) on 6-GHz radio. The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps) on 6-GHz radio.",
            "format" : "int32",
            "default" : 1
          },
          "operativeChannel" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "operativeTxPower" : {
            "type" : "string",
            "readOnly" : true
          },
          "snr_dB" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPower6GEnum.MAX",
            "enum" : [ "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP radio customization for 6GHz."
      },
      "ApRadioParamsDual5G" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "lower5gEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "radioParamsLower5G" : {
            "$ref" : "#/components/schemas/ApRadioParams50G"
          },
          "radioParamsUpper5G" : {
            "$ref" : "#/components/schemas/ApRadioParams50G"
          },
          "upper5gEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "useVenueEnabled" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP radio customization for dual 5GHz radios."
      },
      "ApRadioSettings" : {
        "type" : "object",
        "properties" : {
          "apRadioParams24G" : {
            "$ref" : "#/components/schemas/ApRadio24GHzSettings"
          },
          "apRadioParams50G" : {
            "$ref" : "#/components/schemas/ApRadio5GHzSettings"
          },
          "apRadioParams6G" : {
            "$ref" : "#/components/schemas/ApRadio6GHzSettings"
          },
          "apRadioParamsDual5G" : {
            "$ref" : "#/components/schemas/ApRadioDual5GHzSettings"
          },
          "enable24G" : {
            "type" : "boolean",
            "default" : true
          },
          "enable50G" : {
            "type" : "boolean",
            "default" : true
          },
          "enable6G" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP radio customization"
      },
      "ApRequest" : {
        "required" : [ "name", "serialNumber", "venueId" ],
        "type" : "object",
        "properties" : {
          "apGroupId" : {
            "type" : "string"
          },
          "description" : {
            "maxLength" : 180,
            "minLength" : 0,
            "type" : "string"
          },
          "deviceGps" : {
            "$ref" : "#/components/schemas/DeviceGps"
          },
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string",
            "default" : "null"
          },
          "name" : {
            "pattern" : "(?=^((?!`|\\$\\()[ -_a-~]){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "position" : {
            "$ref" : "#/components/schemas/ApPosition"
          },
          "serialNumber" : {
            "pattern" : "^[1-9][0-9]{11}$",
            "type" : "string"
          },
          "tags" : {
            "maxItems" : 24,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "venueId" : {
            "type" : "string"
          }
        },
        "description" : "AP request payload"
      },
      "ApRfNeighbor" : {
        "type" : "object",
        "properties" : {
          "apMac" : {
            "type" : "string"
          },
          "channel24G" : {
            "type" : "string"
          },
          "channel5G" : {
            "type" : "string"
          },
          "channel6G" : {
            "type" : "string"
          },
          "detectedTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deviceName" : {
            "type" : "string"
          },
          "ip" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "snr24G" : {
            "type" : "string"
          },
          "snr5G" : {
            "type" : "string"
          },
          "snr6G" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "venueName" : {
            "type" : "string"
          }
        },
        "description" : "The AP's RF neighbor."
      },
      "ApSerialNumber" : {
        "required" : [ "serialNumber" ],
        "type" : "object",
        "properties" : {
          "serialNumber" : {
            "pattern" : "^[1-9][0-9]{11}$",
            "type" : "string"
          },
          "softDeleted" : {
            "type" : "boolean",
            "default" : false
          },
          "softDeletedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "AP serial-number for AP group association."
      },
      "ApSmartMonitorSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "interval" : {
            "maximum" : 60,
            "minimum" : 5,
            "type" : "integer",
            "description" : "The interval how often smart monitor checks uplink status, measured by seconds.",
            "format" : "int32",
            "default" : 10
          },
          "threshold" : {
            "maximum" : 10,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The retry threshold for turning off the WLANs.",
            "format" : "int32",
            "default" : 3
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "description" : "True if using venue settings (overriding AP settings).",
            "default" : false
          }
        },
        "description" : "AP Smart Monitor Settings"
      },
      "ApSnmpAgent" : {
        "type" : "object",
        "properties" : {
          "apSnmpAgentProfileId" : {
            "type" : "string"
          },
          "enableApSnmp" : {
            "type" : "boolean",
            "default" : false
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "AP SNMP agent setting."
      },
      "ApSnmpAgentProfile" : {
        "required" : [ "policyName" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "policyName" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "snmpV2Agents" : {
            "maxItems" : 2,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApSnmpV2Agent"
            }
          },
          "snmpV3Agents" : {
            "maxItems" : 2,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApSnmpV3Agent"
            }
          },
          "tenantId" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "AP SNMP agent profile."
      },
      "ApSnmpAgentProfileApData" : {
        "type" : "object",
        "properties" : {
          "apId" : {
            "type" : "string"
          },
          "apName" : {
            "type" : "string"
          },
          "venueId" : {
            "type" : "string"
          },
          "venueName" : {
            "type" : "string"
          }
        },
        "description" : "AP usage of AP SNMP agent profile."
      },
      "ApSnmpAgentProfileApQueryRequest" : {
        "type" : "object",
        "properties" : {
          "page" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          },
          "searchString" : {
            "type" : "string",
            "description" : "Search by AP name or venue name."
          },
          "sortField" : {
            "type" : "string",
            "description" : "AP name or venue name only."
          },
          "sortOrder" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        },
        "description" : "AP SNMP agent profile AP usage query request."
      },
      "ApSnmpAgentProfileApQueryResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApSnmpAgentProfileApData"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "AP SNMP agent profile AP usage query response."
      },
      "ApSnmpAgentProfileOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/ApSnmpAgentProfile"
          }
        }
      },
      "ApSnmpV2Agent" : {
        "required" : [ "communityName" ],
        "type" : "object",
        "properties" : {
          "communityName" : {
            "maxLength" : 32,
            "minLength" : 1,
            "pattern" : "^[^'#\" ]*$",
            "type" : "string"
          },
          "notificationType" : {
            "type" : "string",
            "default" : "SnmpNotificationTypeEnum.Trap",
            "enum" : [ "Trap", "Inform" ]
          },
          "readPrivilege" : {
            "type" : "boolean",
            "default" : false
          },
          "targetAddr" : {
            "pattern" : "^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$",
            "type" : "string"
          },
          "targetPort" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 162
          },
          "trapPrivilege" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "SNMPv2 agent configuration."
      },
      "ApSnmpV3Agent" : {
        "required" : [ "authPassword", "userName" ],
        "type" : "object",
        "properties" : {
          "authPassword" : {
            "maxLength" : 32,
            "minLength" : 8,
            "type" : "string"
          },
          "authProtocol" : {
            "type" : "string",
            "default" : "SnmpAuthProtocolEnum.SHA",
            "enum" : [ "SHA", "MD5" ]
          },
          "notificationType" : {
            "type" : "string",
            "default" : "SnmpNotificationTypeEnum.Trap",
            "enum" : [ "Trap", "Inform" ]
          },
          "privacyPassword" : {
            "maxLength" : 32,
            "minLength" : 8,
            "type" : "string"
          },
          "privacyProtocol" : {
            "type" : "string",
            "default" : "SnmpPrivacyProtocolEnum.None",
            "enum" : [ "None", "DES", "AES" ]
          },
          "readPrivilege" : {
            "type" : "boolean",
            "default" : false
          },
          "targetAddr" : {
            "pattern" : "^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$",
            "type" : "string"
          },
          "targetPort" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 162
          },
          "trapPrivilege" : {
            "type" : "boolean",
            "default" : false
          },
          "userName" : {
            "maxLength" : 32,
            "minLength" : 3,
            "pattern" : "^[^'#\" ]*$",
            "type" : "string"
          }
        },
        "description" : "SNMPv3 agent configuration."
      },
      "ApStickyClientSteeringSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "True if sticky client steering is enabled.",
            "default" : false
          },
          "neighborApPercentageThreshold" : {
            "maximum" : 40,
            "minimum" : 10,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "snrThreshold" : {
            "maximum" : 30,
            "minimum" : 5,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "useVenueSettings" : {
            "type" : "boolean",
            "description" : "True if using venue settings (overriding AP settings).",
            "readOnly" : true,
            "default" : false
          }
        },
        "description" : "Sticky Client Steering Setting of an AP."
      },
      "ApSystemCommand" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "REBOOT", "FACTORY_RESET" ]
          }
        },
        "description" : "The AP system command"
      },
      "ApUsbPortSettings" : {
        "type" : "object",
        "properties" : {
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP model specific configuration for AP LAN ports and external antenna."
      },
      "ApV1" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 180,
            "minLength" : 0,
            "type" : "string"
          },
          "deviceGps" : {
            "$ref" : "#/components/schemas/DeviceGps"
          },
          "loginPassword" : {
            "type" : "string",
            "readOnly" : true
          },
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string",
            "default" : "null"
          },
          "name" : {
            "pattern" : "(?=^((?!`|\\$\\()[ -_a-~]){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "tags" : {
            "maxItems" : 24,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "AP for requests"
      },
      "ApplicationLibraryApplication" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          }
        },
        "description" : "Avc application items"
      },
      "ApplicationLibraryApplications" : {
        "type" : "object",
        "properties" : {
          "applications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationLibraryApplication"
            }
          }
        }
      },
      "ApplicationLibraryCategories" : {
        "type" : "object",
        "properties" : {
          "categories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationLibraryCategory"
            }
          }
        }
      },
      "ApplicationLibraryCategory" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          }
        },
        "description" : "Avc categories items"
      },
      "ApplicationLibrarySettings" : {
        "type" : "object",
        "properties" : {
          "changedApplications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ChangedApplication"
            }
          },
          "latestReleasedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "latestVersion" : {
            "type" : "string"
          },
          "releasedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "string"
          }
        },
        "description" : "The current tenant's ApplicationLibrary information."
      },
      "ApplicationPolicy" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          },
          "rules" : {
            "maxItems" : 128,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationPolicyRule"
            }
          },
          "tenantId" : {
            "type" : "string",
            "readOnly" : true,
            "deprecated" : true
          }
        },
        "description" : "Application policy"
      },
      "ApplicationPolicyOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/ApplicationPolicy"
          }
        }
      },
      "ApplicationPolicyRule" : {
        "required" : [ "accessControl", "name", "priority", "ruleType" ],
        "type" : "object",
        "properties" : {
          "accessControl" : {
            "type" : "string",
            "enum" : [ "DENY", "QOS", "RATE_LIMIT" ]
          },
          "applicationId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "applicationName" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "categoryId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "destinationIp" : {
            "pattern" : "^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9]?)\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)",
            "type" : "string"
          },
          "destinationPort" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "downLinkMarkingType" : {
            "type" : "string",
            "enum" : [ "VOICE", "VIDEO", "BEST_EFFORT", "BACKGROUND" ]
          },
          "downlink" : {
            "maximum" : 20000,
            "minimum" : 250,
            "type" : "integer",
            "format" : "int32"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "markingPriority" : {
            "type" : "string",
            "enum" : [ "IEEE802_1P", "DSCP", "BOTH" ]
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          },
          "netmask" : {
            "pattern" : "^((128|192|224|240|248|252|254)\\.0\\.0\\.0)|(255\\.(((0|128|192|224|240|248|252|254)\\.0\\.0)|(255\\.(((0|128|192|224|240|248|252|254)\\.0)|255\\.(0|128|192|224|240|248|252|254)))))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(\\/([1-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))$",
            "type" : "string"
          },
          "portMapping" : {
            "type" : "string",
            "enum" : [ "IP_WITH_PORT", "PORT_ONLY" ]
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "protocol" : {
            "type" : "string",
            "enum" : [ "TCP", "UDP" ]
          },
          "ruleType" : {
            "type" : "string",
            "enum" : [ "SIGNATURE", "USER_DEFINED" ]
          },
          "upLinkMarkingType" : {
            "type" : "string",
            "enum" : [ "VOICE", "VIDEO", "BEST_EFFORT", "BACKGROUND" ]
          },
          "uplink" : {
            "maximum" : 20000,
            "minimum" : 250,
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Application policy rule"
      },
      "ApplicationPolicyV1_1" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          },
          "rules" : {
            "maxItems" : 128,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationPolicyRule"
            }
          }
        },
        "description" : "Application policy"
      },
      "ApsImportResults" : {
        "type" : "object",
        "properties" : {
          "downloadUrl" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ImportError"
            }
          },
          "fileErrorCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "operationRequestId" : {
            "type" : "string"
          }
        }
      },
      "AvailableLteBands" : {
        "required" : [ "region" ],
        "type" : "object",
        "properties" : {
          "band3G" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "band4G" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "countryCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "region" : {
            "type" : "string",
            "enum" : [ "DOMAIN_1", "DOMAIN_2", "USA_CANADA", "JAPAN" ]
          }
        },
        "description" : "LTE band lock channel settings."
      },
      "AvcApp" : {
        "type" : "object",
        "properties" : {
          "appName" : {
            "type" : "string"
          },
          "avcAppAndCatId" : {
            "$ref" : "#/components/schemas/AvcAppAndCatId"
          }
        },
        "description" : "Avc application items"
      },
      "AvcAppAndCatId" : {
        "type" : "object",
        "properties" : {
          "appId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "catId" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Avc application app id and cat id"
      },
      "AvcCat" : {
        "type" : "object",
        "properties" : {
          "catId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "catName" : {
            "type" : "string"
          }
        },
        "description" : "Avc categories items"
      },
      "BandBalancing" : {
        "type" : "object",
        "properties" : {
          "clientPercent24" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          },
          "enabled" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "Band balancing"
      },
      "BssColoring" : {
        "type" : "object",
        "properties" : {
          "bssColoringEnabled" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "BSS Coloring settings"
      },
      "Capabilities" : {
        "type" : "object",
        "properties" : {
          "apModels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CapabilitiesApModel"
            }
          }
        },
        "description" : "Wi-Fi capabilities model"
      },
      "CapabilitiesApModel" : {
        "type" : "object",
        "properties" : {
          "allowCbandCountry" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "allowDfsCountry" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "bandCombinationCapabilities" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "null",
              "enum" : [ "DUAL", "TRIPLE" ]
            }
          },
          "canSupportCellular" : {
            "type" : "boolean",
            "default" : false
          },
          "canSupportLacp" : {
            "type" : "boolean",
            "default" : false
          },
          "canSupportPoeMode" : {
            "type" : "boolean",
            "default" : false
          },
          "canSupportPoeOut" : {
            "type" : "boolean",
            "default" : false
          },
          "capabilityScore" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "defaultBandCombination" : {
            "type" : "string",
            "default" : "null",
            "enum" : [ "DUAL", "TRIPLE" ]
          },
          "externalAntenna" : {
            "$ref" : "#/components/schemas/ExternalAntenna"
          },
          "has160MHzChannelBandwidth" : {
            "type" : "boolean",
            "default" : false
          },
          "isOutdoor" : {
            "type" : "boolean",
            "default" : false
          },
          "lanPortPictureDownloadUrl" : {
            "type" : "string"
          },
          "lanPorts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CapabilitiesLanPort"
            }
          },
          "ledOn" : {
            "type" : "boolean",
            "default" : false
          },
          "lldpAdInterval" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lldpEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "lldpHoldTime" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lldpMgmtEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "maxChannelization24G" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxChannelization5G" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxChannelization6G" : {
            "type" : "integer",
            "format" : "int32"
          },
          "model" : {
            "type" : "string"
          },
          "pictureDownloadUrl" : {
            "type" : "string"
          },
          "poeModeCapabilities" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "primaryWanRecoveryTimer" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requireOneEnabledTrunkPort" : {
            "type" : "boolean",
            "default" : false
          },
          "simCardPrimaryApn" : {
            "type" : "string"
          },
          "simCardPrimaryCellularNetworkSelection" : {
            "type" : "string"
          },
          "simCardPrimaryEnabled" : {
            "type" : "boolean",
            "default" : true
          },
          "simCardPrimaryRoaming" : {
            "type" : "boolean",
            "default" : true
          },
          "simCardSecondaryApn" : {
            "type" : "string"
          },
          "simCardSecondaryCellularNetworkSelection" : {
            "type" : "string"
          },
          "simCardSecondaryEnabled" : {
            "type" : "boolean",
            "default" : true
          },
          "simCardSecondaryRoaming" : {
            "type" : "boolean",
            "default" : true
          },
          "support11AX" : {
            "type" : "boolean",
            "default" : false
          },
          "supportApStickyClientSteering" : {
            "type" : "boolean",
            "default" : false
          },
          "supportBandCombination" : {
            "type" : "boolean",
            "default" : false
          },
          "supportChannel144" : {
            "type" : "boolean",
            "default" : false
          },
          "supportDual5gMode" : {
            "type" : "boolean",
            "default" : false
          },
          "supportMesh" : {
            "type" : "boolean",
            "default" : true
          },
          "supportTriRadio" : {
            "type" : "boolean",
            "default" : false
          },
          "version" : {
            "type" : "string"
          },
          "wanConnection" : {
            "type" : "string"
          }
        },
        "description" : "AP model capabilities"
      },
      "CapabilitiesLanPort" : {
        "type" : "object",
        "properties" : {
          "defaultType" : {
            "type" : "string"
          },
          "displayLabel" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "isPoeOutPort" : {
            "type" : "boolean",
            "default" : false
          },
          "isPoePort" : {
            "type" : "boolean",
            "default" : false
          },
          "supportDisable" : {
            "type" : "boolean",
            "default" : false
          },
          "trunkPortOnly" : {
            "type" : "boolean",
            "default" : false
          },
          "untagId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vlanMembers" : {
            "type" : "string"
          }
        },
        "description" : "LAN port capabilities"
      },
      "ChangedApplication" : {
        "type" : "object",
        "properties" : {
          "applicationId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "applicationName" : {
            "type" : "string"
          },
          "categoryId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "categoryName" : {
            "type" : "string"
          },
          "impactedItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ChangedApplicationImpactedItem"
            }
          },
          "toApplicationId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "toApplicationName" : {
            "type" : "string"
          },
          "toCategoryId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "toCategoryName" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "APPLICATION_ADDED", "APPLICATION_REMOVED", "CATEGORY_UPDATED", "APPLICATION_RENAMED", "APPLICATION_MERGED" ]
          }
        }
      },
      "ChangedApplicationImpactedItem" : {
        "type" : "object",
        "properties" : {
          "applicationPolicyId" : {
            "type" : "string"
          },
          "applicationPolicyName" : {
            "type" : "string"
          },
          "applicationPolicyRuleId" : {
            "type" : "string"
          },
          "applicationPolicyRuleName" : {
            "type" : "string"
          }
        }
      },
      "Channels24G" : {
        "type" : "object",
        "properties" : {
          "20MHz" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ]
            }
          },
          "40MHz" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ]
            }
          },
          "auto" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ]
            }
          }
        },
        "description" : "2.4-GHz channels"
      },
      "Channels5G" : {
        "type" : "object",
        "properties" : {
          "dfs" : {
            "$ref" : "#/components/schemas/Channels5GIndoorOutdoor"
          },
          "indoor" : {
            "$ref" : "#/components/schemas/Channels5GIndoorOutdoor"
          },
          "indoorForOutdoorAp" : {
            "$ref" : "#/components/schemas/Channels5GIndoorOutdoor"
          },
          "outdoor" : {
            "$ref" : "#/components/schemas/Channels5GIndoorOutdoor"
          }
        },
        "description" : "5-GHz channels"
      },
      "Channels5GIndoorOutdoor" : {
        "type" : "object",
        "properties" : {
          "160MHz" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "20MHz" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "40MHz" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "80MHz" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "auto" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          }
        },
        "description" : "Indoor and outdoor 5-GHz channels."
      },
      "Channels6G" : {
        "type" : "object",
        "properties" : {
          "160MHz" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "20MHz" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "40MHz" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "80MHz" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "auto" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          }
        },
        "description" : "6-GHz channels"
      },
      "Channels6GIndoorOutdoor" : {
        "type" : "object",
        "properties" : {
          "160MHz" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "20MHz" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "40MHz" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "80MHz" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "auto" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          }
        },
        "description" : "Indoor and outdoor 6-GHz channels."
      },
      "Channels6GV1_1" : {
        "type" : "object",
        "properties" : {
          "160MHz" : {
            "type" : "array",
            "deprecated" : true,
            "items" : {
              "type" : "string",
              "deprecated" : true,
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "20MHz" : {
            "type" : "array",
            "deprecated" : true,
            "items" : {
              "type" : "string",
              "deprecated" : true,
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "40MHz" : {
            "type" : "array",
            "deprecated" : true,
            "items" : {
              "type" : "string",
              "deprecated" : true,
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "80MHz" : {
            "type" : "array",
            "deprecated" : true,
            "items" : {
              "type" : "string",
              "deprecated" : true,
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "auto" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "indoor" : {
            "$ref" : "#/components/schemas/Channels6GIndoorOutdoor"
          },
          "outdoor" : {
            "$ref" : "#/components/schemas/Channels6GIndoorOutdoor"
          }
        },
        "description" : "6-GHz channels"
      },
      "ClientControlAction" : {
        "required" : [ "action" ],
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "enum" : [ "disconnect" ]
          },
          "clients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DisconnectClientBySerialNumber"
            }
          }
        },
        "description" : "Disconnect client action payload"
      },
      "ClientIsolationAllowlist" : {
        "required" : [ "allowlist", "name" ],
        "type" : "object",
        "properties" : {
          "allowlist" : {
            "maxItems" : 64,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClientIsolationAllowlistEntry"
            }
          },
          "description" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "tenantId" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Client isolation allowlist configuration."
      },
      "ClientIsolationAllowlistEntry" : {
        "required" : [ "mac" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "mac" : {
            "pattern" : "^(?!((([fF]{2}:){5}[fF]{2})|((00:){5}00)|(01:00:5[eE]:[0-7])))([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})$",
            "type" : "string"
          }
        },
        "description" : "Client isolation allowlist entry.  Note: use two client isolation allowlist entries for dual-stack clients (i.e., one for the IPv4 address and a second for the IPv6 address)."
      },
      "ClientIsolationAllowlistOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/ClientIsolationAllowlist"
          }
        }
      },
      "ClientIsolationAllowlistVenueData" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string"
          },
          "networkCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "networkNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "venueId" : {
            "type" : "string"
          },
          "venueName" : {
            "type" : "string"
          }
        },
        "description" : "Venue usage of client isolation allowlist."
      },
      "ClientIsolationAllowlistVenueQueryRequest" : {
        "type" : "object",
        "properties" : {
          "page" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          },
          "searchVenueNameString" : {
            "type" : "string",
            "description" : "Search venue name"
          },
          "sortField" : {
            "type" : "string",
            "description" : "Support venue name only"
          },
          "sortOrder" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        },
        "description" : "Client Isolation Allowlist Venue Query Request"
      },
      "ClientIsolationAllowlistVenueQueryResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClientIsolationAllowlistVenueData"
            }
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Client isolation allowlist venue response."
      },
      "ClientIsolationOptions" : {
        "type" : "object",
        "properties" : {
          "autoVrrp" : {
            "type" : "boolean",
            "default" : false
          },
          "packetsType" : {
            "type" : "string",
            "enum" : [ "UNICAST", "MULTICAST", "UNICAST_MULTICAST" ]
          }
        },
        "description" : "Client isolation options"
      },
      "ClientIsolationProfile" : {
        "required" : [ "allowlist", "name" ],
        "type" : "object",
        "properties" : {
          "allowlist" : {
            "maxItems" : 64,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClientIsolationAllowlistEntry"
            }
          },
          "description" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          }
        },
        "description" : "Client isolation allowlist configuration."
      },
      "CompatibilityApFilter" : {
        "type" : "object",
        "properties" : {
          "apIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "featureLevels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "VENUE", "WIFI_NETWORK" ]
            }
          },
          "featureNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "wifiNetworkIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CompatibilityApRequest" : {
        "type" : "object",
        "properties" : {
          "filters" : {
            "$ref" : "#/components/schemas/CompatibilityApFilter"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CompatibilityFeatureSetFilter" : {
        "type" : "object",
        "properties" : {
          "featureNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CompatibilityFeatureSetRequest" : {
        "type" : "object",
        "properties" : {
          "filters" : {
            "$ref" : "#/components/schemas/CompatibilityFeatureSetFilter"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CompatibilityVenueNetworkFilter" : {
        "type" : "object",
        "properties" : {
          "featureLevels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "VENUE", "WIFI_NETWORK" ]
            }
          },
          "featureNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "venueIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "wifiNetworkIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CompatibilityVenueNetworkRequest" : {
        "type" : "object",
        "properties" : {
          "filters" : {
            "$ref" : "#/components/schemas/CompatibilityVenueNetworkFilter"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DenialOfServiceProtection" : {
        "type" : "object",
        "properties" : {
          "blockingPeriod" : {
            "maximum" : 600,
            "minimum" : 30,
            "type" : "integer",
            "format" : "int32",
            "default" : 60
          },
          "checkPeriod" : {
            "maximum" : 600,
            "minimum" : 30,
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          },
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "failThreshold" : {
            "maximum" : 25,
            "minimum" : 2,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          }
        },
        "description" : "This feature hinders a client (end-user device) from originating a DoS attack on an authentication server."
      },
      "DeviceAggregationApFirmwareModel" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DeviceGps" : {
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "string"
          },
          "longitude" : {
            "type" : "string"
          }
        },
        "description" : "Ap or Venue latitude and longitude"
      },
      "DevicePolicy" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "defaultAccess" : {
            "type" : "string",
            "default" : "AccessEnum.ALLOW",
            "enum" : [ "ALLOW", "BLOCK" ]
          },
          "description" : {
            "maxLength" : 180,
            "minLength" : 2,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          },
          "rules" : {
            "maxItems" : 32,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DevicePolicyRule"
            }
          },
          "tenantId" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Network device-policy"
      },
      "DevicePolicyOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/DevicePolicy"
          }
        }
      },
      "DevicePolicyRule" : {
        "required" : [ "deviceType", "name", "osVendor" ],
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "default" : "AccessEnum.ALLOW",
            "enum" : [ "ALLOW", "BLOCK" ]
          },
          "deviceType" : {
            "type" : "string",
            "enum" : [ "Laptop", "Smartphone", "Tablet", "Voip", "Gaming", "Printer", "IotDevice", "HomeAvEquipment", "WdsDevice" ]
          },
          "downloadRateLimit" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "number",
            "format" : "float"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          },
          "osVendor" : {
            "type" : "string",
            "description" : "The values of `\"Xbox360\"`, `\"PlayStation2\"` and `\"PlayStation3\"` are now deprecated and will no longer be supported after 2024-07-31. However, the current back-end logic will continue to convert `\"Xbox360\"` to `\"Xbox\"` and also transform `\"PlayStation2\"` or `\"PlayStation3\"` to `\"PlayStation\"` for backward compatibility until that specified date.",
            "enum" : [ "All", "Windows", "MacOs", "ChromeOs", "Linux", "Ubuntu", "Ios", "Android", "BlackBerry", "AmazonKindle", "CiscoIpPhone", "AvayaIpPhone", "LinksysPapVoip", "NortelIpPhone", "Xbox360", "PlayStation2", "GameCube", "Wii", "PlayStation3", "PlayStation", "Xbox", "Nintendo", "HpPrinter", "CanonPrinter", "XeroxPrinter", "DellPrinter", "BrotherPrinter", "EpsonPrinter", "NestCamera", "NestThermostat", "WemoSmartSwitch", "WifiSmartPlug", "SonyPlayer", "PanasonicG20Tv", "SamsungSmartTv", "AppleTv", "LibratoneSpeakers", "BoseSpeakers", "SonosSpeakers", "RokuStreamingStick", "TelenetCpe" ]
          },
          "uploadRateLimit" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "number",
            "format" : "float"
          },
          "vlan" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Network device-policy rule"
      },
      "DevicePolicyV1_1" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "defaultAccess" : {
            "type" : "string",
            "default" : "AccessEnum.ALLOW",
            "enum" : [ "ALLOW", "BLOCK" ]
          },
          "description" : {
            "maxLength" : 180,
            "minLength" : 2,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          },
          "rules" : {
            "maxItems" : 32,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DevicePolicyRule"
            }
          }
        },
        "description" : "Network device-policy"
      },
      "DhcpClientLeaseTime" : {
        "type" : "object",
        "properties" : {
          "dhcpProfileId" : {
            "type" : "string",
            "readOnly" : true
          },
          "dhcpProfileName" : {
            "type" : "string",
            "readOnly" : true
          },
          "hostname" : {
            "type" : "string",
            "readOnly" : true
          },
          "ipAddress" : {
            "type" : "string",
            "readOnly" : true
          },
          "leaseExpiration" : {
            "type" : "string"
          },
          "macAddress" : {
            "type" : "string",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "AP DHCP Client Lease Time Response"
      },
      "DhcpConfigClientLeaseTime" : {
        "type" : "object",
        "properties" : {
          "dhcpPoolId" : {
            "type" : "string",
            "readOnly" : true
          },
          "dhcpPoolName" : {
            "type" : "string",
            "readOnly" : true
          },
          "hostname" : {
            "type" : "string",
            "readOnly" : true
          },
          "ipAddress" : {
            "type" : "string",
            "readOnly" : true
          },
          "leaseExpiration" : {
            "type" : "string"
          },
          "macAddress" : {
            "type" : "string",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "AP DHCP Client Lease Time Response"
      },
      "DhcpConfigServiceProfile" : {
        "required" : [ "dhcpPools", "serviceName" ],
        "type" : "object",
        "properties" : {
          "dhcpMode" : {
            "type" : "string",
            "default" : "DhcpModeEnum.EnableOnEachAPs",
            "enum" : [ "EnableOnEachAPs", "EnableOnMultipleAPs", "EnableOnHierarchicalAPs" ]
          },
          "dhcpPools" : {
            "maxItems" : 4,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DhcpPoolV1_1"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "serviceName" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          }
        },
        "description" : "DHCP service profile configuration"
      },
      "DhcpConfigServiceProfileDeep" : {
        "required" : [ "dhcpPools", "serviceName" ],
        "type" : "object",
        "properties" : {
          "dhcpMode" : {
            "type" : "string",
            "default" : "DhcpModeEnum.EnableOnEachAPs",
            "enum" : [ "EnableOnEachAPs", "EnableOnMultipleAPs", "EnableOnHierarchicalAPs" ]
          },
          "dhcpPools" : {
            "maxItems" : 4,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DhcpPool"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "serviceName" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "usage" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/DhcpPoolVenueUsage"
            }
          },
          "venueIds" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "readOnly" : true
            }
          }
        },
        "description" : "DHCP service profile configuration"
      },
      "DhcpConfigServiceProfileDeepOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/DhcpConfigServiceProfileDeep"
          }
        }
      },
      "DhcpPool" : {
        "required" : [ "endIpAddress", "leaseTimeHours", "leaseTimeMinutes", "name", "startIpAddress", "subnetAddress", "subnetMask", "vlanId" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "endIpAddress" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "leaseTimeHours" : {
            "maximum" : 24,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "leaseTimeMinutes" : {
            "maximum" : 59,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "pattern" : "^[!-~]([ -~])*[!-~]$",
            "type" : "string"
          },
          "primaryDnsIp" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "secondaryDnsIp" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "startIpAddress" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "subnetAddress" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "subnetMask" : {
            "pattern" : "^(?:(?:(?:255\\.){3}(?:252|248|240|224|192|128|0+))|(?:(?:255\\.){2}(?:255|254|252|248|240|224|192|128|0+)\\.0)|(?:(?:255\\.)(?:255|254|252|248|240|224|192|128|0+)(?:\\.0+){2})|(?:(?:255|254|252|248|240|224|192|128|0+)(?:\\.0+){3}))$",
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "DHCP Service Profile Configuration."
      },
      "DhcpPoolUsage" : {
        "required" : [ "leaseTimeHours", "leaseTimeMinutes", "name", "subnetAddress", "subnetMask", "vlanId" ],
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean",
            "default" : false
          },
          "description" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "endIpAddress" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "leaseTimeHours" : {
            "maximum" : 24,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "leaseTimeMinutes" : {
            "maximum" : 59,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "pattern" : "^[!-~]([ -~])*[!-~]$",
            "type" : "string"
          },
          "primaryDnsIp" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "secondaryDnsIp" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "startIpAddress" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "subnetAddress" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "subnetMask" : {
            "pattern" : "^(?:(?:(?:255\\.){3}(?:252|248|240|224|192|128|0+))|(?:(?:255\\.){2}(?:255|254|252|248|240|224|192|128|0+)\\.0)|(?:(?:255\\.)(?:255|254|252|248|240|224|192|128|0+)(?:\\.0+){2})|(?:(?:255|254|252|248|240|224|192|128|0+)(?:\\.0+){3}))$",
            "type" : "string"
          },
          "totalIpCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "usedIpCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "DHCP Service Profile Configuration."
      },
      "DhcpPoolV1_1" : {
        "required" : [ "endIpAddress", "leaseTimeHours", "leaseTimeMinutes", "name", "startIpAddress", "subnetAddress", "subnetMask", "vlanId" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "endIpAddress" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "leaseTimeHours" : {
            "maximum" : 24,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "leaseTimeMinutes" : {
            "maximum" : 59,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "pattern" : "^[!-~]([ -~])*[!-~]$",
            "type" : "string"
          },
          "primaryDnsIp" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "secondaryDnsIp" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "startIpAddress" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "subnetAddress" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "subnetMask" : {
            "pattern" : "^(?:(?:(?:255\\.){3}(?:252|248|240|224|192|128|0+))|(?:(?:255\\.){2}(?:255|254|252|248|240|224|192|128|0+)\\.0)|(?:(?:255\\.)(?:255|254|252|248|240|224|192|128|0+)(?:\\.0+){2})|(?:(?:255|254|252|248|240|224|192|128|0+)(?:\\.0+){3}))$",
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "DHCP Service Profile Configuration."
      },
      "DhcpPoolVenueUsage" : {
        "type" : "object",
        "properties" : {
          "totalIpCount" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "usedIpCount" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "venueId" : {
            "type" : "string"
          }
        },
        "description" : "Model to display DHCP Usage by Venue.",
        "readOnly" : true
      },
      "DhcpServiceAp" : {
        "required" : [ "role", "serialNumber" ],
        "type" : "object",
        "properties" : {
          "dhcpIps" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "role" : {
            "type" : "string",
            "enum" : [ "PrimaryServer", "BackupServer", "NatGateway" ]
          },
          "serialNumber" : {
            "maxLength" : 12,
            "minLength" : 12,
            "type" : "string"
          }
        },
        "description" : "DHCP Service AP information."
      },
      "DhcpServiceProfileUsage" : {
        "required" : [ "leaseTimeHours", "leaseTimeMinutes", "name", "subnetAddress", "subnetMask", "vlanId" ],
        "type" : "object",
        "properties" : {
          "endIpAddress" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "leaseTimeHours" : {
            "maximum" : 24,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "leaseTimeMinutes" : {
            "maximum" : 59,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "pattern" : "^[!-~]([ -~])*[!-~]$",
            "type" : "string"
          },
          "primaryDnsIp" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "secondaryDnsIp" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "startIpAddress" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "subnetAddress" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "subnetMask" : {
            "pattern" : "^(?:(?:(?:255\\.){3}(?:252|248|240|224|192|128|0+))|(?:(?:255\\.){2}(?:255|254|252|248|240|224|192|128|0+)\\.0)|(?:(?:255\\.)(?:255|254|252|248|240|224|192|128|0+)(?:\\.0+){2})|(?:(?:255|254|252|248|240|224|192|128|0+)(?:\\.0+){3}))$",
            "type" : "string"
          },
          "totalIpCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "usedIpCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "venues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdAndName"
            }
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "DHCP Service Profile Configuration."
      },
      "DisconnectClientBySerialNumber" : {
        "required" : [ "clientMac", "serialNumber" ],
        "type" : "object",
        "properties" : {
          "clientMac" : {
            "pattern" : "^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$|^([0-9A-Fa-f]{2}[-]){5}([0-9A-Fa-f]{2})$|^([0-9A-Fa-f]{12})$|^([0-9A-Fa-f]{4}[.]){2}[0-9A-Fa-f]{4}$",
            "type" : "string"
          },
          "serialNumber" : {
            "pattern" : "^[1-9][0-9]{11}$",
            "type" : "string"
          }
        },
        "description" : "Disconnect client payload info"
      },
      "DnsProxy" : {
        "type" : "object",
        "properties" : {
          "dnsProxyRules" : {
            "maxItems" : 64,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DnsProxyRule"
            }
          }
        },
        "description" : "DNS proxy"
      },
      "DnsProxyRule" : {
        "required" : [ "domainName", "ipList" ],
        "type" : "object",
        "properties" : {
          "domainName" : {
            "pattern" : "^(\\*(\\.[0-9A-Za-z]{1,63})+(\\.\\*)?|([0-9A-Za-z]{1,63}\\.)+\\*|([0-9A-Za-z]{1,63}(\\.[0-9A-Za-z]{1,63})+))$",
            "type" : "string"
          },
          "ipList" : {
            "maxItems" : 8,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "DNS proxy rule"
      },
      "DpskNetwork" : {
        "required" : [ "name", "wlan" ],
        "type" : "object",
        "description" : "DPSK Wi-Fi network",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Network"
        }, {
          "type" : "object",
          "properties" : {
            "accountingRadiusId" : {
              "type" : "string"
            },
            "authRadiusId" : {
              "type" : "string"
            },
            "description" : {
              "maxLength" : 256,
              "minLength" : 0,
              "type" : "string"
            },
            "dpskServiceProfileId" : {
              "maxLength" : 36,
              "minLength" : 2,
              "type" : "string",
              "description" : "Required after new UI."
            },
            "name" : {
              "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
              "type" : "string"
            },
            "venues" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/NetworkVenue"
              }
            },
            "wlan" : {
              "$ref" : "#/components/schemas/DpskWlan"
            }
          }
        } ]
      },
      "DpskWifiNetwork" : {
        "required" : [ "name", "wlan" ],
        "type" : "object",
        "description" : "DPSK Wi-Fi network",
        "allOf" : [ {
          "$ref" : "#/components/schemas/WifiNetwork"
        }, {
          "type" : "object",
          "properties" : {
            "description" : {
              "maxLength" : 256,
              "minLength" : 0,
              "type" : "string"
            },
            "name" : {
              "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
              "type" : "string"
            },
            "useDpskService" : {
              "type" : "boolean",
              "default" : true
            },
            "wlan" : {
              "$ref" : "#/components/schemas/DpskWifiWlan"
            }
          }
        } ]
      },
      "DpskWifiWlan" : {
        "required" : [ "ssid" ],
        "type" : "object",
        "properties" : {
          "advancedCustomization" : {
            "$ref" : "#/components/schemas/DpskWifiWlanAdvancedCustomization"
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "ssid" : {
            "pattern" : "[^`\\s]([^`\\t\\r\\n]){0,30}[^`\\s]",
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "wlanSecurity" : {
            "type" : "string",
            "default" : "DpskWlanSecurityEnum.WPA2Personal",
            "enum" : [ "WPAPersonal", "WPA2Personal", "WPA23Mixed" ]
          }
        },
        "description" : "DPSK Wi-Fi WLAN"
      },
      "DpskWifiWlanAdvancedCustomization" : {
        "type" : "object",
        "properties" : {
          "applicationVisibilityEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "arpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "broadcastProbeResponseDelay" : {
            "maximum" : 120,
            "minimum" : 8,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "bssPriority" : {
            "type" : "string",
            "default" : "BSSPriorityEnum.HIGH",
            "enum" : [ "HIGH", "LOW" ]
          },
          "clientInactivityTimeout" : {
            "maximum" : 86400,
            "minimum" : 60,
            "type" : "integer",
            "format" : "int32",
            "default" : 120
          },
          "clientIsolation" : {
            "type" : "boolean",
            "default" : false
          },
          "clientIsolationOptions" : {
            "$ref" : "#/components/schemas/ClientIsolationOptions"
          },
          "clientLoadBalancingEnable" : {
            "type" : "boolean",
            "default" : true
          },
          "dhcpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "directedThreshold" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "dnsProxy" : {
            "$ref" : "#/components/schemas/DnsProxy"
          },
          "dnsProxyEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAaaVlanOverride" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAdditionalRegulatoryDomains" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAirtimeDecongestion" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAntiSpoofing" : {
            "type" : "boolean",
            "default" : false
          },
          "enableApHostNameAdvertisement" : {
            "type" : "boolean",
            "default" : false
          },
          "enableArpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableBandBalancing" : {
            "type" : "boolean",
            "default" : true
          },
          "enableDhcpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableGtkRekey" : {
            "type" : "boolean",
            "default" : true
          },
          "enableJoinRSSIThreshold" : {
            "type" : "boolean",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic.",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableNeighborReport" : {
            "type" : "boolean",
            "default" : true
          },
          "enableOptimizedConnectivityExperience" : {
            "type" : "boolean",
            "default" : false
          },
          "enableSyslog" : {
            "type" : "boolean",
            "default" : false
          },
          "enableTransientClientManagement" : {
            "type" : "boolean",
            "default" : false
          },
          "forceMobileDeviceDhcp" : {
            "type" : "boolean",
            "default" : false
          },
          "hideSsid" : {
            "type" : "boolean",
            "default" : false
          },
          "joinExpireTime" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 300
          },
          "joinRSSIThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -85
          },
          "joinWaitThreshold" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "joinWaitTime" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          },
          "maxClientsOnWlanPerRadio" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "multiLinkOperationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multiLinkOperationOptions" : {
            "$ref" : "#/components/schemas/MultiLinkOperationOptions"
          },
          "multicastDownlinkRateLimiting" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps). The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastFilterEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps).",
            "format" : "int32",
            "default" : 1
          },
          "proxyARP" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetOptions" : {
            "$ref" : "#/components/schemas/QosMapSetOptions"
          },
          "qosMirroringEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMirroringScope" : {
            "type" : "string",
            "default" : "QosMirroringScopeEnum.MSCS_REQUESTS_ONLY",
            "enum" : [ "MSCS_REQUESTS_ONLY", "ALL_CLIENTS" ]
          },
          "radioCustomization" : {
            "$ref" : "#/components/schemas/WlanRadioCustomization"
          },
          "radiusOptions" : {
            "$ref" : "#/components/schemas/RadiusOptions"
          },
          "respectiveAccessControl" : {
            "type" : "boolean",
            "default" : true
          },
          "rssiAssociationRejectionThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -75
          },
          "totalDownlinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "totalUplinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userDownlinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userUplinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "wifi6Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifi7Enabled" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "WLAN advanced customization"
      },
      "DpskWlan" : {
        "required" : [ "ssid" ],
        "type" : "object",
        "properties" : {
          "advancedCustomization" : {
            "$ref" : "#/components/schemas/DpskWlanAdvancedCustomization"
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "ssid" : {
            "pattern" : "[^`\\s]([^`\\t\\r\\n]){0,30}[^`\\s]",
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "wlanSecurity" : {
            "type" : "string",
            "default" : "DpskWlanSecurityEnum.WPA2Personal",
            "enum" : [ "WPAPersonal", "WPA2Personal", "WPA23Mixed" ]
          }
        },
        "description" : "WLAN"
      },
      "DpskWlanAdvancedCustomization" : {
        "type" : "object",
        "properties" : {
          "accessControlEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "accessControlProfileId" : {
            "type" : "string"
          },
          "applicationPolicyEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "applicationPolicyId" : {
            "type" : "string"
          },
          "applicationVisibilityEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "arpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "broadcastProbeResponseDelay" : {
            "maximum" : 120,
            "minimum" : 8,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "bssPriority" : {
            "type" : "string",
            "default" : "BSSPriorityEnum.HIGH",
            "enum" : [ "HIGH", "LOW" ]
          },
          "clientInactivityTimeout" : {
            "maximum" : 86400,
            "minimum" : 60,
            "type" : "integer",
            "format" : "int32",
            "default" : 120
          },
          "clientIsolation" : {
            "type" : "boolean",
            "default" : false
          },
          "clientIsolationOptions" : {
            "$ref" : "#/components/schemas/ClientIsolationOptions"
          },
          "clientLoadBalancingEnable" : {
            "type" : "boolean",
            "default" : true
          },
          "devicePolicyId" : {
            "type" : "string"
          },
          "dhcpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "directedThreshold" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "dnsProxy" : {
            "$ref" : "#/components/schemas/DnsProxy"
          },
          "dnsProxyEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAaaVlanOverride" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAdditionalRegulatoryDomains" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAirtimeDecongestion" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAntiSpoofing" : {
            "type" : "boolean",
            "default" : false
          },
          "enableApHostNameAdvertisement" : {
            "type" : "boolean",
            "default" : false
          },
          "enableArpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableBandBalancing" : {
            "type" : "boolean",
            "default" : true
          },
          "enableDhcpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableGtkRekey" : {
            "type" : "boolean",
            "default" : true
          },
          "enableJoinRSSIThreshold" : {
            "type" : "boolean",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic.",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableNeighborReport" : {
            "type" : "boolean",
            "default" : true
          },
          "enableOptimizedConnectivityExperience" : {
            "type" : "boolean",
            "default" : false
          },
          "enableSyslog" : {
            "type" : "boolean",
            "default" : false
          },
          "enableTransientClientManagement" : {
            "type" : "boolean",
            "default" : false
          },
          "forceMobileDeviceDhcp" : {
            "type" : "boolean",
            "default" : false
          },
          "hideSsid" : {
            "type" : "boolean",
            "default" : false
          },
          "joinExpireTime" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 300
          },
          "joinRSSIThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -85
          },
          "joinWaitThreshold" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "joinWaitTime" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          },
          "l2AclEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "l2AclPolicyId" : {
            "type" : "string"
          },
          "l3AclEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "l3AclPolicyId" : {
            "type" : "string"
          },
          "maxClientsOnWlanPerRadio" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "multiLinkOperationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multiLinkOperationOptions" : {
            "$ref" : "#/components/schemas/MultiLinkOperationOptions"
          },
          "multicastDownlinkRateLimiting" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps). The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastFilterEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps).",
            "format" : "int32",
            "default" : 1
          },
          "proxyARP" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetOptions" : {
            "$ref" : "#/components/schemas/QosMapSetOptions"
          },
          "qosMirroringEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMirroringScope" : {
            "type" : "string",
            "default" : "QosMirroringScopeEnum.MSCS_REQUESTS_ONLY",
            "enum" : [ "MSCS_REQUESTS_ONLY", "ALL_CLIENTS" ]
          },
          "radioCustomization" : {
            "$ref" : "#/components/schemas/WlanRadioCustomization"
          },
          "radiusOptions" : {
            "$ref" : "#/components/schemas/RadiusOptions"
          },
          "respectiveAccessControl" : {
            "type" : "boolean",
            "default" : true
          },
          "rssiAssociationRejectionThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -75
          },
          "totalDownlinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "totalUplinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userDownlinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userUplinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "vlanPool" : {
            "$ref" : "#/components/schemas/VlanPool"
          },
          "wifi6Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifi7Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifiCallingEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "wifiCallingIds" : {
            "maxItems" : 5,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "WLAN advanced customization"
      },
      "Dual5GRadioParams50G" : {
        "type" : "object",
        "properties" : {
          "allowedIndoorChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "allowedOutdoorChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth5GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz", "80MHz", "160MHz" ]
          },
          "method" : {
            "type" : "string",
            "default" : "ScanMethodEnum.BACKGROUND_SCANNING",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "scanInterval" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPowerEnum.MAX",
            "enum" : [ "Auto", "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          }
        },
        "description" : "Radio customization for 5GHz."
      },
      "EntityId" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "EntityIdOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/EntityId"
          }
        }
      },
      "Epdg" : {
        "required" : [ "domain" ],
        "type" : "object",
        "properties" : {
          "domain" : {
            "pattern" : "(^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9]?)\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$) |(^(\\b((?=[A-Za-z0-9-]{1,63}\\.)(xn--)?[A-Za-z0-9]+(-[A-Za-z0-9]+)*\\.)+[A-Za-z]{2,63}\\b)$)",
            "type" : "string"
          },
          "ip" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)",
            "type" : "string"
          }
        },
        "description" : "Information of ePDG"
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "downloadUrl" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WifiError"
            }
          },
          "requestId" : {
            "type" : "string"
          }
        }
      },
      "EthernetPortProfile" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "authType" : {
            "type" : "string",
            "default" : "ApLanPortAuthTypeEnum.DISABLED",
            "enum" : [ "DISABLED", "SUPPLICANT", "PORT_BASED_AUTHENTICATOR", "MAC_BASED_AUTHENTICATOR", "OPEN" ]
          },
          "bypassMacAddressAuthentication" : {
            "type" : "boolean",
            "default" : false
          },
          "dynamicVlanEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAccountingProxy" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAuthProxy" : {
            "type" : "boolean",
            "default" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "isDefault" : {
            "type" : "boolean",
            "readOnly" : true,
            "default" : false
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          },
          "supplicantAuthenticationOptions" : {
            "$ref" : "#/components/schemas/SupplicantAuthenticationOptions"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ACCESS", "SELECTIVE_TRUNK", "TRUNK" ]
          },
          "unauthenticatedGuestVlan" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "untagId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "vlanMembers" : {
            "pattern" : "^(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4])(?: *- *(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4]))?(?: *, *(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4])(?: *- *(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4]))?)*$",
            "type" : "string"
          }
        },
        "description" : "Ethernet port profile"
      },
      "ExternalAccountingRadius" : {
        "type" : "object",
        "properties" : {
          "primary" : {
            "$ref" : "#/components/schemas/ExternalRadiusTupple"
          },
          "secondary" : {
            "$ref" : "#/components/schemas/ExternalRadiusTupple"
          }
        },
        "description" : "RADIUS accounting configuration"
      },
      "ExternalAntenna" : {
        "type" : "object",
        "properties" : {
          "coupled" : {
            "type" : "boolean",
            "default" : false
          },
          "enable24G" : {
            "type" : "boolean",
            "default" : false
          },
          "enable50G" : {
            "type" : "boolean",
            "default" : false
          },
          "gain24G" : {
            "maximum" : 60,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "gain50G" : {
            "maximum" : 60,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "supportDisable" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "External antenna settings"
      },
      "ExternalAuthRadius" : {
        "type" : "object",
        "properties" : {
          "primary" : {
            "$ref" : "#/components/schemas/ExternalRadiusTupple"
          },
          "secondary" : {
            "$ref" : "#/components/schemas/ExternalRadiusTupple"
          }
        },
        "description" : "Auth RADIUS"
      },
      "ExternalProviders" : {
        "type" : "object",
        "properties" : {
          "providers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalProvidersModel"
            }
          }
        },
        "description" : "External providers list"
      },
      "ExternalProvidersModel" : {
        "type" : "object",
        "properties" : {
          "customExternalProvider" : {
            "type" : "boolean",
            "default" : false
          },
          "name" : {
            "type" : "string"
          },
          "regions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalProvidersRegion"
            }
          }
        },
        "description" : "External providers model"
      },
      "ExternalProvidersRegion" : {
        "type" : "object",
        "properties" : {
          "accountingRadius" : {
            "$ref" : "#/components/schemas/ExternalAccountingRadius"
          },
          "authRadius" : {
            "$ref" : "#/components/schemas/ExternalAuthRadius"
          },
          "captivePortalUrl" : {
            "type" : "string"
          },
          "externalProviderUrl" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "redirectUrl" : {
            "type" : "string"
          },
          "showAnalyticsData" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "External providers region"
      },
      "ExternalRadiusTupple" : {
        "type" : "object",
        "properties" : {
          "ip" : {
            "type" : "string"
          },
          "port" : {
            "type" : "string"
          }
        },
        "description" : "RADIUS tupple"
      },
      "File" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "description" : "Describe a file"
      },
      "GuestNetwork" : {
        "required" : [ "guestPortal", "name", "wlan" ],
        "type" : "object",
        "description" : "Guest Wi-Fi network",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Network"
        }, {
          "type" : "object",
          "properties" : {
            "accountingRadiusId" : {
              "type" : "string"
            },
            "authRadiusId" : {
              "type" : "string"
            },
            "description" : {
              "maxLength" : 256,
              "minLength" : 0,
              "type" : "string"
            },
            "enableAccountingProxy" : {
              "type" : "boolean",
              "default" : false
            },
            "enableAuthProxy" : {
              "type" : "boolean",
              "default" : false
            },
            "enableDhcp" : {
              "type" : "boolean",
              "default" : false
            },
            "guestPortal" : {
              "$ref" : "#/components/schemas/GuestPortal"
            },
            "name" : {
              "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
              "type" : "string"
            },
            "portalServiceProfileId" : {
              "maxLength" : 255,
              "minLength" : 0,
              "type" : "string",
              "description" : "Replace guestPage with the portalServiceProfileId, which is required field when guestPortal.guestNetworkType is (GuestPass/ClickThrough/SelfSignIn/HostApproval) on new UI."
            },
            "venues" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/NetworkVenue"
              }
            },
            "wlan" : {
              "$ref" : "#/components/schemas/GuestWlan"
            }
          }
        } ]
      },
      "GuestPage" : {
        "type" : "object",
        "properties" : {
          "advertImage" : {
            "$ref" : "#/components/schemas/File"
          },
          "langCode" : {
            "type" : "string"
          },
          "logoImage" : {
            "$ref" : "#/components/schemas/File"
          },
          "tagLine" : {
            "maxLength" : 140,
            "minLength" : 0,
            "type" : "string"
          },
          "termsAndConditions" : {
            "maxLength" : 100000,
            "minLength" : 0,
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "welcomeMessage" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "wifi4Eu" : {
            "type" : "boolean",
            "default" : false
          },
          "wifi4EuNetworkId" : {
            "maxLength" : 128,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "description" : "Captive portal guest page"
      },
      "GuestPortal" : {
        "required" : [ "guestNetworkType" ],
        "type" : "object",
        "properties" : {
          "enableSelfService" : {
            "type" : "boolean",
            "default" : true
          },
          "enableSmsLogin" : {
            "type" : "boolean",
            "default" : false
          },
          "endOfDayReauthDelay" : {
            "type" : "boolean",
            "default" : false
          },
          "externalPortalKey" : {
            "type" : "string"
          },
          "externalPortalUrl" : {
            "pattern" : "^https?:\\/\\/([A-Za-z0-9]+([\\-\\.]{1}[A-Za-z0-9]+)*\\.[A-Za-z]{2,}|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|localhost)(:([1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?(\\/.*)?([?#].*)?$",
            "type" : "string"
          },
          "guestNetworkType" : {
            "type" : "string",
            "enum" : [ "ClickThrough", "SelfSignIn", "HostApproval", "GuestPass", "WISPr", "Cloudpath", "Directory", "SAML", "Workflow" ]
          },
          "guestPage" : {
            "$ref" : "#/components/schemas/GuestPage"
          },
          "hostGuestConfig" : {
            "$ref" : "#/components/schemas/HostGuestConfig"
          },
          "lockoutPeriod" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 120
          },
          "lockoutPeriodEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "macCredentialsDuration" : {
            "maximum" : 70560,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Keep supporting for a maximum value of 1440 until the enhancement feature is released.",
            "format" : "int32",
            "default" : 240
          },
          "maxDevices" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "redirectUrl" : {
            "pattern" : "^https?:\\/\\/([A-Za-z0-9]+([\\-\\.]{1}[A-Za-z0-9]+)*\\.[A-Za-z]{2,}|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|localhost)(:([1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?(\\/.*)?([?#].*)?$",
            "type" : "string"
          },
          "smsPasswordDuration" : {
            "$ref" : "#/components/schemas/GuestSmsPasswordDuration"
          },
          "socialDomains" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "socialEmails" : {
            "type" : "boolean",
            "default" : false
          },
          "socialIdentities" : {
            "$ref" : "#/components/schemas/SocialIdentities"
          },
          "userSessionGracePeriod" : {
            "maximum" : 14399,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 60
          },
          "userSessionTimeout" : {
            "maximum" : 14400,
            "minimum" : 2,
            "type" : "integer",
            "format" : "int32",
            "default" : 1440
          },
          "walledGardens" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "wisprPage" : {
            "$ref" : "#/components/schemas/WisprPage"
          }
        },
        "description" : "Network configuration of guest access including captive portal settings and authentication settings."
      },
      "GuestSmsPasswordDuration" : {
        "type" : "object",
        "properties" : {
          "duration" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 12
          },
          "unit" : {
            "type" : "string",
            "default" : "TimeUnitEnum.HOUR",
            "enum" : [ "YEAR", "MONTH", "DAY", "HOUR", "MINUTE", "SECOND" ]
          }
        },
        "description" : "SMS password duration"
      },
      "GuestWifiNetwork" : {
        "required" : [ "guestPortal", "name", "wlan" ],
        "type" : "object",
        "description" : "Guest Wi-Fi network",
        "allOf" : [ {
          "$ref" : "#/components/schemas/WifiNetwork"
        }, {
          "type" : "object",
          "properties" : {
            "description" : {
              "maxLength" : 256,
              "minLength" : 0,
              "type" : "string"
            },
            "enableDhcp" : {
              "type" : "boolean",
              "default" : false
            },
            "guestPortal" : {
              "$ref" : "#/components/schemas/GuestWifiPortal"
            },
            "name" : {
              "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
              "type" : "string"
            },
            "wlan" : {
              "$ref" : "#/components/schemas/GuestWifiWlan"
            }
          }
        } ]
      },
      "GuestWifiPortal" : {
        "required" : [ "guestNetworkType" ],
        "type" : "object",
        "properties" : {
          "enableSelfService" : {
            "type" : "boolean",
            "default" : true
          },
          "enableSmsLogin" : {
            "type" : "boolean",
            "default" : false
          },
          "endOfDayReauthDelay" : {
            "type" : "boolean",
            "default" : false
          },
          "externalPortalKey" : {
            "type" : "string"
          },
          "externalPortalUrl" : {
            "pattern" : "^https?:\\/\\/([A-Za-z0-9]+([\\-\\.]{1}[A-Za-z0-9]+)*\\.[A-Za-z]{2,}|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|localhost)(:([1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?(\\/.*)?([?#].*)?$",
            "type" : "string"
          },
          "guestNetworkType" : {
            "type" : "string",
            "enum" : [ "ClickThrough", "SelfSignIn", "HostApproval", "GuestPass", "WISPr", "Cloudpath", "Directory", "SAML", "Workflow" ]
          },
          "guestPage" : {
            "$ref" : "#/components/schemas/GuestPage"
          },
          "hostGuestConfig" : {
            "$ref" : "#/components/schemas/HostGuestConfig"
          },
          "lockoutPeriod" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 120
          },
          "lockoutPeriodEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "macCredentialsDuration" : {
            "maximum" : 70560,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Keep supporting for a maximum value of 1440 until the enhancement feature is released.",
            "format" : "int32",
            "default" : 240
          },
          "maxDevices" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "redirectUrl" : {
            "pattern" : "^https?:\\/\\/([A-Za-z0-9]+([\\-\\.]{1}[A-Za-z0-9]+)*\\.[A-Za-z]{2,}|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|localhost)(:([1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?(\\/.*)?([?#].*)?$",
            "type" : "string"
          },
          "smsPasswordDuration" : {
            "$ref" : "#/components/schemas/GuestSmsPasswordDuration"
          },
          "socialDomains" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "socialEmails" : {
            "type" : "boolean",
            "default" : false
          },
          "socialIdentities" : {
            "$ref" : "#/components/schemas/SocialIdentities"
          },
          "userSessionGracePeriod" : {
            "maximum" : 14399,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 60
          },
          "userSessionTimeout" : {
            "maximum" : 14400,
            "minimum" : 2,
            "type" : "integer",
            "format" : "int32",
            "default" : 1440
          },
          "walledGardens" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "wisprPage" : {
            "$ref" : "#/components/schemas/WifiWisprPage"
          }
        },
        "description" : "Network configuration of guest access including captive portal settings and authentication settings."
      },
      "GuestWifiWlan" : {
        "required" : [ "ssid" ],
        "type" : "object",
        "properties" : {
          "advancedCustomization" : {
            "$ref" : "#/components/schemas/GuestWifiWlanAdvancedCustomization"
          },
          "bypassCNA" : {
            "type" : "boolean",
            "default" : false
          },
          "bypassCPUsingMacAddressAuthentication" : {
            "type" : "boolean",
            "default" : true
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "managementFrameProtection" : {
            "type" : "string",
            "enum" : [ "Disabled", "Optional", "Required" ]
          },
          "passphrase" : {
            "maxLength" : 64,
            "minLength" : 8,
            "pattern" : "^[!-_a-~]((?!\\$\\()[ !-_a-~]){6,61}[!-_a-~]$|^[A-Fa-f0-9]{64}$",
            "type" : "string"
          },
          "saePassphrase" : {
            "maxLength" : 64,
            "minLength" : 8,
            "pattern" : "^[!-_a-~]((?!\\$\\()[ !-_a-~]){6,61}[!-_a-~]$|^[A-Fa-f0-9]{64}$",
            "type" : "string"
          },
          "ssid" : {
            "pattern" : "[^`\\s]([^`\\t\\r\\n]){0,30}[^`\\s]",
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "wepHexKey" : {
            "pattern" : "[0-9a-fA-F]{26}",
            "type" : "string"
          },
          "wlanSecurity" : {
            "type" : "string",
            "default" : "GuestWlanSecurityEnum.None",
            "enum" : [ "WPAPersonal", "WPA2Personal", "WEP", "WPA23Mixed", "WPA3", "OWE", "None" ]
          }
        },
        "description" : "Guest Wi-Fi WLAN"
      },
      "GuestWifiWlanAdvancedCustomization" : {
        "type" : "object",
        "properties" : {
          "applicationVisibilityEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "arpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "broadcastProbeResponseDelay" : {
            "maximum" : 120,
            "minimum" : 8,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "bssPriority" : {
            "type" : "string",
            "default" : "BSSPriorityEnum.HIGH",
            "enum" : [ "HIGH", "LOW" ]
          },
          "clientInactivityTimeout" : {
            "maximum" : 86400,
            "minimum" : 60,
            "type" : "integer",
            "format" : "int32",
            "default" : 120
          },
          "clientIsolation" : {
            "type" : "boolean",
            "default" : false
          },
          "clientIsolationOptions" : {
            "$ref" : "#/components/schemas/ClientIsolationOptions"
          },
          "clientLoadBalancingEnable" : {
            "type" : "boolean",
            "default" : true
          },
          "dhcpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "directedThreshold" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "dnsProxy" : {
            "$ref" : "#/components/schemas/DnsProxy"
          },
          "dnsProxyEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAaaVlanOverride" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAdditionalRegulatoryDomains" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAirtimeDecongestion" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAntiSpoofing" : {
            "type" : "boolean",
            "default" : false
          },
          "enableApHostNameAdvertisement" : {
            "type" : "boolean",
            "default" : false
          },
          "enableArpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableBandBalancing" : {
            "type" : "boolean",
            "default" : true
          },
          "enableDhcpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableFastRoaming" : {
            "type" : "boolean",
            "default" : false
          },
          "enableGtkRekey" : {
            "type" : "boolean",
            "default" : true
          },
          "enableJoinRSSIThreshold" : {
            "type" : "boolean",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic.",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableNeighborReport" : {
            "type" : "boolean",
            "default" : true
          },
          "enableOptimizedConnectivityExperience" : {
            "type" : "boolean",
            "default" : false
          },
          "enableSyslog" : {
            "type" : "boolean",
            "default" : false
          },
          "enableTransientClientManagement" : {
            "type" : "boolean",
            "default" : false
          },
          "forceMobileDeviceDhcp" : {
            "type" : "boolean",
            "default" : false
          },
          "hideSsid" : {
            "type" : "boolean",
            "default" : false
          },
          "joinExpireTime" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 300
          },
          "joinRSSIThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -85
          },
          "joinWaitThreshold" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "joinWaitTime" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          },
          "maxClientsOnWlanPerRadio" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "mobilityDomainId" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "multiLinkOperationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multiLinkOperationOptions" : {
            "$ref" : "#/components/schemas/MultiLinkOperationOptions"
          },
          "multicastDownlinkRateLimiting" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps). The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastFilterEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps).",
            "format" : "int32",
            "default" : 1
          },
          "proxyARP" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetOptions" : {
            "$ref" : "#/components/schemas/QosMapSetOptions"
          },
          "qosMirroringEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMirroringScope" : {
            "type" : "string",
            "default" : "QosMirroringScopeEnum.MSCS_REQUESTS_ONLY",
            "enum" : [ "MSCS_REQUESTS_ONLY", "ALL_CLIENTS" ]
          },
          "radioCustomization" : {
            "$ref" : "#/components/schemas/WlanRadioCustomization"
          },
          "radiusOptions" : {
            "$ref" : "#/components/schemas/RadiusOptions"
          },
          "respectiveAccessControl" : {
            "type" : "boolean",
            "default" : true
          },
          "rssiAssociationRejectionThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -75
          },
          "totalDownlinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "totalUplinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userDownlinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userUplinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "wifi6Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifi7Enabled" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "WLAN advanced customization"
      },
      "GuestWlan" : {
        "required" : [ "ssid" ],
        "type" : "object",
        "properties" : {
          "advancedCustomization" : {
            "$ref" : "#/components/schemas/GuestWlanAdvancedCustomization"
          },
          "bypassCNA" : {
            "type" : "boolean",
            "default" : false
          },
          "bypassCPUsingMacAddressAuthentication" : {
            "type" : "boolean",
            "default" : true
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "macAddressAuthentication" : {
            "type" : "boolean",
            "default" : false
          },
          "macAuthMacFormat" : {
            "type" : "string",
            "enum" : [ "Lower", "UpperDash", "UpperColon", "Upper", "LowerDash", "LowerColon" ]
          },
          "managementFrameProtection" : {
            "type" : "string",
            "enum" : [ "Disabled", "Optional", "Required" ]
          },
          "passphrase" : {
            "maxLength" : 64,
            "minLength" : 8,
            "pattern" : "^[!-_a-~]((?!\\$\\()[ !-_a-~]){6,61}[!-_a-~]$|^[A-Fa-f0-9]{64}$",
            "type" : "string"
          },
          "saePassphrase" : {
            "maxLength" : 64,
            "minLength" : 8,
            "pattern" : "^[!-_a-~]((?!\\$\\()[ !-_a-~]){6,61}[!-_a-~]$|^[A-Fa-f0-9]{64}$",
            "type" : "string"
          },
          "ssid" : {
            "pattern" : "[^`\\s]([^`\\t\\r\\n]){0,30}[^`\\s]",
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "wepHexKey" : {
            "pattern" : "[0-9a-fA-F]{26}",
            "type" : "string"
          },
          "wlanSecurity" : {
            "type" : "string",
            "default" : "GuestWlanSecurityEnum.None",
            "enum" : [ "WPAPersonal", "WPA2Personal", "WEP", "WPA23Mixed", "WPA3", "OWE", "None" ]
          }
        },
        "description" : "Guest WLAN"
      },
      "GuestWlanAdvancedCustomization" : {
        "type" : "object",
        "properties" : {
          "accessControlEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "accessControlProfileId" : {
            "type" : "string"
          },
          "applicationPolicyEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "applicationPolicyId" : {
            "type" : "string"
          },
          "applicationVisibilityEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "arpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "broadcastProbeResponseDelay" : {
            "maximum" : 120,
            "minimum" : 8,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "bssPriority" : {
            "type" : "string",
            "default" : "BSSPriorityEnum.HIGH",
            "enum" : [ "HIGH", "LOW" ]
          },
          "clientInactivityTimeout" : {
            "maximum" : 86400,
            "minimum" : 60,
            "type" : "integer",
            "format" : "int32",
            "default" : 120
          },
          "clientIsolation" : {
            "type" : "boolean",
            "default" : true
          },
          "clientIsolationOptions" : {
            "$ref" : "#/components/schemas/ClientIsolationOptions"
          },
          "clientLoadBalancingEnable" : {
            "type" : "boolean",
            "default" : true
          },
          "devicePolicyId" : {
            "type" : "string"
          },
          "dhcpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "directedThreshold" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "dnsProxy" : {
            "$ref" : "#/components/schemas/DnsProxy"
          },
          "dnsProxyEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAaaVlanOverride" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAdditionalRegulatoryDomains" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAirtimeDecongestion" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAntiSpoofing" : {
            "type" : "boolean",
            "default" : false
          },
          "enableApHostNameAdvertisement" : {
            "type" : "boolean",
            "default" : false
          },
          "enableArpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableBandBalancing" : {
            "type" : "boolean",
            "default" : true
          },
          "enableDhcpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableFastRoaming" : {
            "type" : "boolean",
            "default" : false
          },
          "enableGtkRekey" : {
            "type" : "boolean",
            "default" : true
          },
          "enableJoinRSSIThreshold" : {
            "type" : "boolean",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic.",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableNeighborReport" : {
            "type" : "boolean",
            "default" : true
          },
          "enableOptimizedConnectivityExperience" : {
            "type" : "boolean",
            "default" : false
          },
          "enableSyslog" : {
            "type" : "boolean",
            "default" : false
          },
          "enableTransientClientManagement" : {
            "type" : "boolean",
            "default" : false
          },
          "forceMobileDeviceDhcp" : {
            "type" : "boolean",
            "default" : false
          },
          "hideSsid" : {
            "type" : "boolean",
            "default" : false
          },
          "joinExpireTime" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 300
          },
          "joinRSSIThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -85
          },
          "joinWaitThreshold" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "joinWaitTime" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          },
          "l2AclEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "l2AclPolicyId" : {
            "type" : "string"
          },
          "l3AclEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "l3AclPolicyId" : {
            "type" : "string"
          },
          "maxClientsOnWlanPerRadio" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "mobilityDomainId" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "multiLinkOperationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multiLinkOperationOptions" : {
            "$ref" : "#/components/schemas/MultiLinkOperationOptions"
          },
          "multicastDownlinkRateLimiting" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps). The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastFilterEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps).",
            "format" : "int32",
            "default" : 1
          },
          "proxyARP" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetOptions" : {
            "$ref" : "#/components/schemas/QosMapSetOptions"
          },
          "qosMirroringEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMirroringScope" : {
            "type" : "string",
            "default" : "QosMirroringScopeEnum.MSCS_REQUESTS_ONLY",
            "enum" : [ "MSCS_REQUESTS_ONLY", "ALL_CLIENTS" ]
          },
          "radioCustomization" : {
            "$ref" : "#/components/schemas/WlanRadioCustomization"
          },
          "radiusOptions" : {
            "$ref" : "#/components/schemas/RadiusOptions"
          },
          "respectiveAccessControl" : {
            "type" : "boolean",
            "default" : true
          },
          "rssiAssociationRejectionThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -75
          },
          "totalDownlinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "totalUplinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userDownlinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userUplinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "vlanPool" : {
            "$ref" : "#/components/schemas/VlanPool"
          },
          "wifi6Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifi7Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifiCallingEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "wifiCallingIds" : {
            "maxItems" : 5,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "WLAN advanced customization"
      },
      "HostGuestConfig" : {
        "required" : [ "hostDurationChoices" ],
        "type" : "object",
        "properties" : {
          "hostDomains" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hostDurationChoices" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        },
        "description" : "Host guest configuration"
      },
      "Hotspot20AuthInfo" : {
        "type" : "object",
        "properties" : {
          "credentialType" : {
            "type" : "string",
            "enum" : [ "SIM", "USIM", "NFC", "Hardward_Token", "Softoken", "Certificate", "Username", "None", "Reserved" ]
          },
          "eapInnerAuth" : {
            "type" : "string",
            "enum" : [ "EAP_TLS", "EAP_SIM", "EAP_TTLS", "EAP_AKA", "EAP_AKAs" ]
          },
          "info" : {
            "type" : "string",
            "enum" : [ "Expanded", "Non_Eap", "Inner", "Expanded_Inner", "Credential", "Tunneled" ]
          },
          "nonEapAuth" : {
            "type" : "string",
            "enum" : [ "PAP", "CHAP", "MSCHAP", "MSCHAPV2" ]
          },
          "tunneledType" : {
            "type" : "string",
            "enum" : [ "SIM", "USIM", "NFC", "Hardward_Token", "Softoken", "Certificate", "Username", "Reserved", "Anonymous" ]
          },
          "vendorId" : {
            "type" : "string"
          },
          "vendorType" : {
            "type" : "string"
          }
        },
        "description" : "Hotspot 2.0 Authentication Information"
      },
      "Hotspot20ConnectionCapability" : {
        "required" : [ "protocol", "status" ],
        "type" : "object",
        "properties" : {
          "port" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "protocol" : {
            "maxLength" : 32,
            "minLength" : 0,
            "type" : "string"
          },
          "protocolNumber" : {
            "maximum" : 254,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "CLOSED", "OPEN", "UNKNOWN" ]
          }
        }
      },
      "Hotspot20Eap" : {
        "type" : "object",
        "properties" : {
          "authInfos" : {
            "maxItems" : 4,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Hotspot20AuthInfo"
            }
          },
          "method" : {
            "type" : "string",
            "enum" : [ "MD5", "TLS", "Cisco", "SIM", "TTLS", "AKA", "PEAP", "MSCHAP_V2", "AKAs", "Reserved" ]
          }
        },
        "description" : "Hotspot 2.0 Extensible Authentication Protocol"
      },
      "Hotspot20FriendlyName" : {
        "required" : [ "language", "name" ],
        "type" : "object",
        "properties" : {
          "language" : {
            "type" : "string",
            "enum" : [ "ENG", "CHI", "CZE", "DAN", "DUT", "FRE", "GER", "JPN", "KOR", "SPA", "SWE", "TUR" ]
          },
          "name" : {
            "maxLength" : 252,
            "minLength" : 1,
            "type" : "string"
          }
        }
      },
      "Hotspot20IdentityProvider" : {
        "required" : [ "naiRealms", "name" ],
        "type" : "object",
        "properties" : {
          "accountingRadiusEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "naiRealms" : {
            "maxItems" : 16,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Hotspot20NaiRealm"
            }
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          },
          "plmns" : {
            "maxItems" : 16,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Hotspot20Plmn"
            }
          },
          "roamConsortiumOIs" : {
            "maxItems" : 12,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Hotspot20RoamConsortium"
            }
          }
        },
        "description" : "Hotspot 2.0 Identity Provider"
      },
      "Hotspot20NaiRealm" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "eaps" : {
            "maxItems" : 4,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Hotspot20Eap"
            }
          },
          "encoding" : {
            "type" : "string",
            "default" : "NaiRealmEncodingEnum.RFC4282",
            "enum" : [ "RFC4282", "UTF8" ]
          },
          "name" : {
            "maxLength" : 243,
            "minLength" : 2,
            "type" : "string"
          }
        },
        "description" : "Hotspot 2.0 Network Access Identifier Realm"
      },
      "Hotspot20Network" : {
        "required" : [ "hotspot20Settings", "name", "wlan" ],
        "type" : "object",
        "description" : "Hotspot 2.0 Wi-Fi network",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Network"
        }, {
          "type" : "object",
          "properties" : {
            "accountingInterimUpdates" : {
              "maximum" : 1440,
              "minimum" : 0,
              "type" : "integer",
              "format" : "int32",
              "default" : 5
            },
            "accountingRadius" : {
              "$ref" : "#/components/schemas/Radius"
            },
            "authRadius" : {
              "$ref" : "#/components/schemas/Radius"
            },
            "description" : {
              "maxLength" : 256,
              "minLength" : 0,
              "type" : "string"
            },
            "enableAccountingProxy" : {
              "type" : "boolean",
              "default" : false
            },
            "enableAuthProxy" : {
              "type" : "boolean",
              "default" : false
            },
            "hotspot20Settings" : {
              "$ref" : "#/components/schemas/NetworkHotspot20Settings"
            },
            "name" : {
              "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
              "type" : "string"
            },
            "venues" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/NetworkVenue"
              }
            },
            "wlan" : {
              "$ref" : "#/components/schemas/Hotspot20Wlan"
            }
          }
        } ]
      },
      "Hotspot20Operator" : {
        "required" : [ "domainNames", "name" ],
        "type" : "object",
        "properties" : {
          "domainNames" : {
            "maxItems" : 8,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "friendlyNames" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Hotspot20FriendlyName"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          }
        },
        "description" : "Hotspot 2.0 Operator configuration"
      },
      "Hotspot20Plmn" : {
        "required" : [ "mcc", "mnc" ],
        "type" : "object",
        "properties" : {
          "mcc" : {
            "type" : "string"
          },
          "mnc" : {
            "type" : "string"
          }
        },
        "description" : "Hotspot 2.0 Public Land Mobile Network"
      },
      "Hotspot20RoamConsortium" : {
        "required" : [ "name", "organizationId" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "organizationId" : {
            "pattern" : "[0-9a-f]{6}(?:[0-9a-f]{4})?",
            "type" : "string"
          }
        },
        "description" : "Hotspot 2.0 Roaming Consortium"
      },
      "Hotspot20WifiNetwork" : {
        "required" : [ "hotspot20Settings", "name", "wlan" ],
        "type" : "object",
        "description" : "Hotspot 2.0 Wi-Fi network",
        "allOf" : [ {
          "$ref" : "#/components/schemas/WifiNetwork"
        }, {
          "type" : "object",
          "properties" : {
            "accountingInterimUpdates" : {
              "maximum" : 1440,
              "minimum" : 0,
              "type" : "integer",
              "format" : "int32",
              "default" : 5
            },
            "description" : {
              "maxLength" : 256,
              "minLength" : 0,
              "type" : "string"
            },
            "hotspot20Settings" : {
              "$ref" : "#/components/schemas/NetworkHotspot20Settings"
            },
            "name" : {
              "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
              "type" : "string"
            },
            "wlan" : {
              "$ref" : "#/components/schemas/Hotspot20WifiWlan"
            }
          }
        } ]
      },
      "Hotspot20WifiWlan" : {
        "required" : [ "ssid" ],
        "type" : "object",
        "properties" : {
          "advancedCustomization" : {
            "$ref" : "#/components/schemas/Hotspot20WifiWlanAdvancedCustomization"
          },
          "bypassCNA" : {
            "type" : "boolean",
            "default" : false
          },
          "bypassCPUsingMacAddressAuthentication" : {
            "type" : "boolean",
            "default" : false
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "managementFrameProtection" : {
            "type" : "string",
            "enum" : [ "Disabled", "Optional", "Required" ]
          },
          "ssid" : {
            "pattern" : "[^`\\s]([^`\\t\\r\\n]){0,30}[^`\\s]",
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "wlanSecurity" : {
            "type" : "string",
            "default" : "Hotspot20WlanSecurityEnum.WPA2Enterprise",
            "enum" : [ "WPA2Enterprise", "WPA23Mixed", "WPA3" ]
          }
        },
        "description" : "Hotspot 2.0 Wi-Fi WLAN"
      },
      "Hotspot20WifiWlanAdvancedCustomization" : {
        "type" : "object",
        "properties" : {
          "applicationVisibilityEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "arpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "broadcastProbeResponseDelay" : {
            "maximum" : 120,
            "minimum" : 8,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "bssPriority" : {
            "type" : "string",
            "default" : "BSSPriorityEnum.HIGH",
            "enum" : [ "HIGH", "LOW" ]
          },
          "clientInactivityTimeout" : {
            "maximum" : 86400,
            "minimum" : 60,
            "type" : "integer",
            "format" : "int32",
            "default" : 120
          },
          "clientIsolation" : {
            "type" : "boolean",
            "default" : false
          },
          "clientIsolationOptions" : {
            "$ref" : "#/components/schemas/ClientIsolationOptions"
          },
          "clientLoadBalancingEnable" : {
            "type" : "boolean",
            "default" : true
          },
          "dhcpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "directedThreshold" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "dnsProxy" : {
            "$ref" : "#/components/schemas/DnsProxy"
          },
          "dnsProxyEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAaaVlanOverride" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAdditionalRegulatoryDomains" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAirtimeDecongestion" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAntiSpoofing" : {
            "type" : "boolean",
            "default" : false
          },
          "enableApHostNameAdvertisement" : {
            "type" : "boolean",
            "default" : false
          },
          "enableArpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableBandBalancing" : {
            "type" : "boolean",
            "default" : true
          },
          "enableDhcpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableFastRoaming" : {
            "type" : "boolean",
            "default" : false
          },
          "enableGtkRekey" : {
            "type" : "boolean",
            "default" : true
          },
          "enableJoinRSSIThreshold" : {
            "type" : "boolean",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic.",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableNeighborReport" : {
            "type" : "boolean",
            "default" : true
          },
          "enableOptimizedConnectivityExperience" : {
            "type" : "boolean",
            "default" : false
          },
          "enableSyslog" : {
            "type" : "boolean",
            "default" : false
          },
          "enableTransientClientManagement" : {
            "type" : "boolean",
            "default" : false
          },
          "forceMobileDeviceDhcp" : {
            "type" : "boolean",
            "default" : false
          },
          "hideSsid" : {
            "type" : "boolean",
            "default" : false
          },
          "joinExpireTime" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 300
          },
          "joinRSSIThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -85
          },
          "joinWaitThreshold" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "joinWaitTime" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          },
          "maxClientsOnWlanPerRadio" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "mobilityDomainId" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "multiLinkOperationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multiLinkOperationOptions" : {
            "$ref" : "#/components/schemas/MultiLinkOperationOptions"
          },
          "multicastDownlinkRateLimiting" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps). The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastFilterEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps).",
            "format" : "int32",
            "default" : 1
          },
          "proxyARP" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetOptions" : {
            "$ref" : "#/components/schemas/QosMapSetOptions"
          },
          "qosMirroringEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMirroringScope" : {
            "type" : "string",
            "default" : "QosMirroringScopeEnum.MSCS_REQUESTS_ONLY",
            "enum" : [ "MSCS_REQUESTS_ONLY", "ALL_CLIENTS" ]
          },
          "radioCustomization" : {
            "$ref" : "#/components/schemas/WlanRadioCustomization"
          },
          "radiusOptions" : {
            "$ref" : "#/components/schemas/RadiusOptions"
          },
          "respectiveAccessControl" : {
            "type" : "boolean",
            "default" : true
          },
          "rssiAssociationRejectionThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -75
          },
          "totalDownlinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "totalUplinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userDownlinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userUplinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "wifi6Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifi7Enabled" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "WLAN advanced customization"
      },
      "Hotspot20Wlan" : {
        "required" : [ "ssid" ],
        "type" : "object",
        "properties" : {
          "advancedCustomization" : {
            "$ref" : "#/components/schemas/Hotspot20WlanAdvancedCustomization"
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "managementFrameProtection" : {
            "type" : "string",
            "enum" : [ "Disabled", "Optional", "Required" ]
          },
          "ssid" : {
            "pattern" : "[^`\\s]([^`\\t\\r\\n]){0,30}[^`\\s]",
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "wlanSecurity" : {
            "type" : "string",
            "default" : "Hotspot20WlanSecurityEnum.WPA2Enterprise",
            "enum" : [ "WPA2Enterprise", "WPA23Mixed", "WPA3" ]
          }
        },
        "description" : "WLAN"
      },
      "Hotspot20WlanAdvancedCustomization" : {
        "type" : "object",
        "properties" : {
          "accessControlEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "accessControlProfileId" : {
            "type" : "string"
          },
          "applicationPolicyEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "applicationPolicyId" : {
            "type" : "string"
          },
          "applicationVisibilityEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "arpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "broadcastProbeResponseDelay" : {
            "maximum" : 120,
            "minimum" : 8,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "bssPriority" : {
            "type" : "string",
            "default" : "BSSPriorityEnum.HIGH",
            "enum" : [ "HIGH", "LOW" ]
          },
          "clientInactivityTimeout" : {
            "maximum" : 86400,
            "minimum" : 60,
            "type" : "integer",
            "format" : "int32",
            "default" : 120
          },
          "clientIsolation" : {
            "type" : "boolean",
            "default" : false
          },
          "clientIsolationOptions" : {
            "$ref" : "#/components/schemas/ClientIsolationOptions"
          },
          "clientLoadBalancingEnable" : {
            "type" : "boolean",
            "default" : true
          },
          "devicePolicyId" : {
            "type" : "string"
          },
          "dhcpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "directedThreshold" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "dnsProxy" : {
            "$ref" : "#/components/schemas/DnsProxy"
          },
          "dnsProxyEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAaaVlanOverride" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAdditionalRegulatoryDomains" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAirtimeDecongestion" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAntiSpoofing" : {
            "type" : "boolean",
            "default" : false
          },
          "enableApHostNameAdvertisement" : {
            "type" : "boolean",
            "default" : false
          },
          "enableArpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableBandBalancing" : {
            "type" : "boolean",
            "default" : true
          },
          "enableDhcpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableFastRoaming" : {
            "type" : "boolean",
            "default" : false
          },
          "enableGtkRekey" : {
            "type" : "boolean",
            "default" : true
          },
          "enableJoinRSSIThreshold" : {
            "type" : "boolean",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic.",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableNeighborReport" : {
            "type" : "boolean",
            "default" : true
          },
          "enableOptimizedConnectivityExperience" : {
            "type" : "boolean",
            "default" : false
          },
          "enableSyslog" : {
            "type" : "boolean",
            "default" : false
          },
          "enableTransientClientManagement" : {
            "type" : "boolean",
            "default" : false
          },
          "forceMobileDeviceDhcp" : {
            "type" : "boolean",
            "default" : false
          },
          "hideSsid" : {
            "type" : "boolean",
            "default" : false
          },
          "joinExpireTime" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 300
          },
          "joinRSSIThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -85
          },
          "joinWaitThreshold" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "joinWaitTime" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          },
          "l2AclEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "l2AclPolicyId" : {
            "type" : "string"
          },
          "l3AclEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "l3AclPolicyId" : {
            "type" : "string"
          },
          "maxClientsOnWlanPerRadio" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "mobilityDomainId" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "multiLinkOperationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multiLinkOperationOptions" : {
            "$ref" : "#/components/schemas/MultiLinkOperationOptions"
          },
          "multicastDownlinkRateLimiting" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps). The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastFilterEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps).",
            "format" : "int32",
            "default" : 1
          },
          "proxyARP" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetOptions" : {
            "$ref" : "#/components/schemas/QosMapSetOptions"
          },
          "qosMirroringEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMirroringScope" : {
            "type" : "string",
            "default" : "QosMirroringScopeEnum.MSCS_REQUESTS_ONLY",
            "enum" : [ "MSCS_REQUESTS_ONLY", "ALL_CLIENTS" ]
          },
          "radioCustomization" : {
            "$ref" : "#/components/schemas/WlanRadioCustomization"
          },
          "radiusOptions" : {
            "$ref" : "#/components/schemas/RadiusOptions"
          },
          "respectiveAccessControl" : {
            "type" : "boolean",
            "default" : true
          },
          "rssiAssociationRejectionThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -75
          },
          "totalDownlinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "totalUplinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userDownlinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userUplinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "vlanPool" : {
            "$ref" : "#/components/schemas/VlanPool"
          },
          "wifi6Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifi7Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifiCallingEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "wifiCallingIds" : {
            "maxItems" : 5,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "WLAN advanced customization"
      },
      "IdAndEnabled" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "id" : {
            "type" : "string"
          }
        },
        "description" : "Profile ID and enabled"
      },
      "IdAndName" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "description" : "Entity ID and name"
      },
      "ImportDetails" : {
        "type" : "object",
        "properties" : {
          "downloadUrl" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ImportError"
            }
          },
          "fileErrorsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "txId" : {
            "type" : "string"
          }
        }
      },
      "ImportError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "IncompatibleWifiFeatureV1" : {
        "type" : "object",
        "properties" : {
          "featureName" : {
            "type" : "string"
          },
          "incompatibleDevices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceAggregationApFirmwareModel"
            }
          }
        },
        "description" : "The incompatible Wi-Fi features and related information."
      },
      "L2AclPolicy" : {
        "required" : [ "macAddresses", "name" ],
        "type" : "object",
        "properties" : {
          "access" : {
            "type" : "string",
            "default" : "AccessEnum.BLOCK",
            "enum" : [ "ALLOW", "BLOCK" ]
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "macAddresses" : {
            "maxItems" : 128,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          }
        },
        "description" : "L2 access control policy"
      },
      "L2AclPolicyOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/L2AclPolicy"
          }
        }
      },
      "L3AclPolicy" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "defaultAccess" : {
            "type" : "string",
            "default" : "AccessEnum.ALLOW",
            "enum" : [ "ALLOW", "BLOCK" ]
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "l3Rules" : {
            "maxItems" : 128,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/L3Rule"
            }
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          }
        },
        "description" : "L3 access control policy"
      },
      "L3AclPolicyOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/L3AclPolicy"
          }
        }
      },
      "L3IpPort" : {
        "type" : "object",
        "properties" : {
          "enableIpSubnet" : {
            "type" : "boolean",
            "default" : false
          },
          "ip" : {
            "pattern" : "^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9]?)\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)",
            "type" : "string"
          },
          "ipMask" : {
            "pattern" : "^((128|192|224|240|248|252|254)\\.0\\.0\\.0)|(255\\.(((0|128|192|224|240|248|252|254)\\.0\\.0)|(255\\.(((0|128|192|224|240|248|252|254)\\.0)|255\\.(0|128|192|224|240|248|252|254)))))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(\\/([1-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))$",
            "type" : "string"
          },
          "port" : {
            "pattern" : "^([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])(?:-([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?$",
            "type" : "string"
          }
        },
        "description" : "L3 IP port"
      },
      "L3Rule" : {
        "required" : [ "priority" ],
        "type" : "object",
        "properties" : {
          "access" : {
            "type" : "string",
            "default" : "AccessEnum.ALLOW",
            "enum" : [ "ALLOW", "BLOCK" ]
          },
          "customProtocol" : {
            "maximum" : 255,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "destination" : {
            "$ref" : "#/components/schemas/L3IpPort"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "priority" : {
            "maximum" : 128,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "protocol" : {
            "type" : "string",
            "enum" : [ "L3ProtocolEnum_TCP", "L3ProtocolEnum_UDP", "L3ProtocolEnum_UDPLITE", "L3ProtocolEnum_ICMP_ICMPV4", "L3ProtocolEnum_ICMPV6", "L3ProtocolEnum_IGMP", "L3ProtocolEnum_ESP", "L3ProtocolEnum_AH", "L3ProtocolEnum_SCTP", "L3ProtocolEnum_CUSTOM" ]
          },
          "source" : {
            "$ref" : "#/components/schemas/L3IpPort"
          }
        },
        "description" : "Layer-3 rule"
      },
      "LanPortClientIsolationSettings" : {
        "type" : "object",
        "properties" : {
          "autoVrrp" : {
            "type" : "boolean",
            "default" : false
          },
          "packetsType" : {
            "type" : "string",
            "default" : "IsolatePacketsTypeEnum.UNICAST",
            "enum" : [ "UNICAST", "MULTICAST", "UNICAST_MULTICAST" ]
          }
        },
        "description" : "Lan port client isolation profile settings."
      },
      "LanPortSoftGreProfileSettings" : {
        "type" : "object",
        "description" : "Lan port SoftGRE profile settings.",
        "readOnly" : true
      },
      "LbsServerProfile" : {
        "required" : [ "lbsServerVenueName", "name", "password", "serverAddress", "serverPort" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "lbsServerVenueName" : {
            "maxLength" : 16,
            "minLength" : 2,
            "pattern" : "^[a-zA-Z0-9-](?:[a-zA-Z0-9- ]*[a-zA-Z0-9-])?$",
            "type" : "string"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          },
          "password" : {
            "maxLength" : 64,
            "minLength" : 8,
            "type" : "string"
          },
          "serverAddress" : {
            "pattern" : "^[0-9A-Za-z]{1,63}(\\.[0-9A-Za-z]{1,63})+$|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)",
            "type" : "string"
          },
          "serverPort" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Location based service server profile"
      },
      "LteBandLockChannel" : {
        "required" : [ "region" ],
        "type" : "object",
        "properties" : {
          "band3G" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "band4G" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "region" : {
            "type" : "string",
            "enum" : [ "DOMAIN_1", "DOMAIN_2", "USA_CANADA", "JAPAN" ]
          }
        },
        "description" : "LTE band lock channel settings."
      },
      "MacAddressAuthenticationConfiguration" : {
        "type" : "object",
        "properties" : {
          "macAddressAuthentication" : {
            "type" : "boolean",
            "default" : false
          },
          "macAuthMacFormat" : {
            "type" : "string",
            "enum" : [ "Lower", "UpperDash", "UpperColon", "Upper", "LowerDash", "LowerColon" ]
          }
        },
        "description" : "MAC address authentication configuration"
      },
      "MdnsFencing" : {
        "required" : [ "customStrings", "service", "wiredRules" ],
        "type" : "object",
        "properties" : {
          "customMappingEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "customServiceName" : {
            "type" : "string"
          },
          "customStrings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "description" : {
            "type" : "string"
          },
          "service" : {
            "type" : "string",
            "enum" : [ "AIRDISK", "AIRPLAY", "AIRPORT_MANAGEMENT", "AIRPRINT", "AIRTUNES", "APPLE_FILE_SHARING", "APPLE_MOBILE_DEVICES", "APPLETV", "ICLOUD_SYNC", "ITUNES_REMOTE", "ITUNES_SHARING", "OPEN_DIRECTORY_MASTER", "OPTICAL_DISK_SHARING", "OTHER", "SCREEN_SHARING", "SECURE_FILE_SHARING", "SECURE_SHELL", "WWW_HTTP", "WWW_HTTPS", "XGRID", "GOOGLE_CHROMECAST" ]
          },
          "wiredEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "wiredRules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MdnsFencingWiredRule"
            }
          },
          "wirelessEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "wirelessRule" : {
            "$ref" : "#/components/schemas/MdnsFencingWirelessRule"
          }
        },
        "description" : "MDNS fencing service"
      },
      "MdnsFencingWiredRule" : {
        "required" : [ "closestApMac", "deviceMacAddresses", "name" ],
        "type" : "object",
        "properties" : {
          "closestApMac" : {
            "type" : "string"
          },
          "deviceMacAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fencingRange" : {
            "type" : "string",
            "default" : "FencingRangeEnum.SAME_AP",
            "enum" : [ "SAME_AP", "ONE_HOP_AP" ]
          },
          "name" : {
            "type" : "string"
          }
        },
        "description" : "MDNS fencing wired rule"
      },
      "MdnsFencingWirelessRule" : {
        "type" : "object",
        "properties" : {
          "fencingRange" : {
            "type" : "string",
            "default" : "FencingRangeEnum.SAME_AP",
            "enum" : [ "SAME_AP", "ONE_HOP_AP" ]
          }
        },
        "description" : "MDNS fencing wireless rule"
      },
      "Mesh" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "passphrase" : {
            "pattern" : "(^[!-~]([ -~]){6,61}[!-~]$)|(^([0-9a-fA-F]){64}$)",
            "type" : "string"
          },
          "radioType" : {
            "type" : "string",
            "default" : "MeshRadioTypeEnum._5_GHz",
            "enum" : [ "2.4-GHz", "5-GHz" ]
          },
          "ssid" : {
            "pattern" : "(^(?!.*(\\$\\(|`))(([!-~]([ -~]){0,30}[!-~]$)|(^[!-~]$)))",
            "type" : "string"
          }
        },
        "description" : "Venue mesh"
      },
      "MultiLinkOperationOptions" : {
        "type" : "object",
        "properties" : {
          "enable24G" : {
            "type" : "boolean",
            "default" : true
          },
          "enable50G" : {
            "type" : "boolean",
            "default" : true
          },
          "enable6G" : {
            "type" : "boolean",
            "default" : false
          }
        }
      },
      "MulticastDnsFencingRule" : {
        "required" : [ "customStrings", "service", "wiredRules" ],
        "type" : "object",
        "properties" : {
          "customMappingEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "customServiceName" : {
            "type" : "string"
          },
          "customStrings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "description" : {
            "type" : "string"
          },
          "service" : {
            "type" : "string",
            "enum" : [ "AIRDISK", "AIRPLAY", "AIRPORT_MANAGEMENT", "AIRPRINT", "AIRTUNES", "APPLE_FILE_SHARING", "APPLE_MOBILE_DEVICES", "APPLETV", "ICLOUD_SYNC", "ITUNES_REMOTE", "ITUNES_SHARING", "OPEN_DIRECTORY_MASTER", "OPTICAL_DISK_SHARING", "OTHER", "SCREEN_SHARING", "SECURE_FILE_SHARING", "SECURE_SHELL", "WWW_HTTP", "WWW_HTTPS", "XGRID", "GOOGLE_CHROMECAST" ]
          },
          "wiredEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "wiredRules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MulticastDnsFencingWiredRule"
            }
          },
          "wirelessEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "wirelessRule" : {
            "$ref" : "#/components/schemas/MulticastDnsFencingWirelessRule"
          }
        },
        "description" : "Multicast DNS fencing service"
      },
      "MulticastDnsFencingWiredRule" : {
        "required" : [ "closestApMac", "deviceMacAddresses", "name" ],
        "type" : "object",
        "properties" : {
          "closestApMac" : {
            "type" : "string"
          },
          "deviceMacAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fencingRange" : {
            "type" : "string",
            "default" : "FencingRangeEnum.SAME_AP",
            "enum" : [ "SAME_AP", "ONE_HOP_AP" ]
          },
          "name" : {
            "type" : "string"
          }
        },
        "description" : "Multicast DNS fencing wired rule"
      },
      "MulticastDnsFencingWirelessRule" : {
        "type" : "object",
        "properties" : {
          "fencingRange" : {
            "type" : "string",
            "default" : "FencingRangeEnum.SAME_AP",
            "enum" : [ "SAME_AP", "ONE_HOP_AP" ]
          }
        },
        "description" : "Multicast DNS fencing wireless rule"
      },
      "MulticastDnsProxyApVenue" : {
        "required" : [ "serialNumber" ],
        "type" : "object",
        "properties" : {
          "serialNumber" : {
            "pattern" : "^[1-9][0-9]{11}$",
            "type" : "string"
          },
          "venueId" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Multicast DNS Proxy Service Profile AP activation"
      },
      "MulticastDnsProxyProfile" : {
        "required" : [ "serviceName" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MulticastDnsProxyServiceRule"
            }
          },
          "serviceName" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          }
        },
        "description" : "Multicast Proxy Service Profile Configuration"
      },
      "MulticastDnsProxyServiceProfileRequest" : {
        "required" : [ "serviceName" ],
        "type" : "object",
        "properties" : {
          "aps" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MulticastDnsProxyServiceRule"
            }
          },
          "serviceName" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          }
        },
        "description" : "Multicast Proxy Service Profile Configuration"
      },
      "MulticastDnsProxyServiceProfileResponse" : {
        "required" : [ "serviceName" ],
        "type" : "object",
        "properties" : {
          "aps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MulticastDnsProxyApVenue"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MulticastDnsProxyServiceRule"
            }
          },
          "serviceName" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          }
        },
        "description" : "Multicast Proxy Service Profile Configuration"
      },
      "MulticastDnsProxyServiceRule" : {
        "required" : [ "fromVlan", "service", "toVlan" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "fromVlan" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "mdnsName" : {
            "maxLength" : 64,
            "minLength" : 2,
            "pattern" : "^[!-~][ -~]*[!-~]$",
            "type" : "string"
          },
          "mdnsProtocol" : {
            "type" : "string",
            "enum" : [ "TCP", "UDP" ]
          },
          "service" : {
            "type" : "string",
            "enum" : [ "AIRDISK", "AIRPLAY", "AIRPORT_MANAGEMENT", "AIRPRINT", "AIRTUNES", "APPLE_FILE_SHARING", "APPLE_MOBILE_DEVICES", "APPLETV", "ICLOUD_SYNC", "ITUNES_REMOTE", "ITUNES_SHARING", "OPEN_DIRECTORY_MASTER", "OPTICAL_DISK_SHARING", "OTHER", "SCREEN_SHARING", "SECURE_FILE_SHARING", "SECURE_SHELL", "WWW_HTTP", "WWW_HTTPS", "XGRID", "GOOGLE_CHROMECAST" ]
          },
          "toVlan" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Multicast DNS Proxy Service Rule"
      },
      "MulticastDnsProxyVenueAp" : {
        "required" : [ "apName", "serialNumber", "serviceName" ],
        "type" : "object",
        "properties" : {
          "apName" : {
            "pattern" : "(?=^((?!`|\\$\\()[ -_a-~]){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MulticastDnsProxyServiceRule"
            }
          },
          "serialNumber" : {
            "pattern" : "^[1-9][0-9]{11}$",
            "type" : "string"
          },
          "serviceId" : {
            "type" : "string",
            "readOnly" : true
          },
          "serviceName" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "venueId" : {
            "type" : "string",
            "readOnly" : true
          },
          "venueName" : {
            "type" : "string"
          }
        },
        "description" : "Multicast DNS Proxy Service Profile AP activation"
      },
      "Network" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "type" : "string"
          },
          "tenantId" : {
            "type" : "string",
            "readOnly" : true
          },
          "type" : {
            "type" : "string"
          }
        },
        "description" : "Wi-Fi network",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "NetworkActivationMapping" : {
        "type" : "object",
        "properties" : {
          "allApGroupsRadioTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "2.4-GHz", "5-GHz", "6-GHz" ]
            }
          },
          "allApGroupsVlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "apGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NetworkApGroup"
            }
          },
          "clientIsolationAllowlistId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "isAllApGroups" : {
            "type" : "boolean",
            "default" : true
          },
          "networkId" : {
            "type" : "string"
          },
          "scheduler" : {
            "$ref" : "#/components/schemas/NetworkVenueScheduler"
          },
          "venueId" : {
            "type" : "string"
          },
          "vlanPoolId" : {
            "type" : "string"
          }
        },
        "description" : "Network activation mapping"
      },
      "NetworkActivationsQueryRequest" : {
        "type" : "object",
        "properties" : {
          "networkId" : {
            "type" : "string"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          },
          "venueId" : {
            "type" : "string"
          }
        },
        "description" : "NetworkActivations query request"
      },
      "NetworkActivationsQueryResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NetworkVenue"
            }
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Query response of network-venue activation"
      },
      "NetworkApGroup" : {
        "type" : "object",
        "properties" : {
          "apGroupId" : {
            "type" : "string"
          },
          "apGroupName" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,64}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "isDefault" : {
            "type" : "boolean",
            "default" : false
          },
          "radio" : {
            "type" : "string",
            "deprecated" : true,
            "default" : "RadioEnum.Both",
            "enum" : [ "Both", "2.4-GHz", "5-GHz" ]
          },
          "radioTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "2.4-GHz", "5-GHz", "6-GHz" ]
            }
          },
          "validationError" : {
            "type" : "boolean",
            "default" : false
          },
          "validationErrorReachedMaxConnectedCaptiveNetworksLimit" : {
            "type" : "boolean",
            "default" : false
          },
          "validationErrorReachedMaxConnectedNetworksLimit" : {
            "type" : "boolean",
            "readOnly" : true,
            "default" : false
          },
          "validationErrorSsidAlreadyActivated" : {
            "type" : "boolean",
            "default" : false
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "vlanPoolId" : {
            "type" : "string"
          },
          "vlanPoolName" : {
            "type" : "string"
          }
        },
        "description" : "Network to AP-Group activation"
      },
      "NetworkHotspot20Settings" : {
        "type" : "object",
        "properties" : {
          "accessNetworkType" : {
            "type" : "string",
            "default" : "Hotspot20AccessNetworkTypeEnum.PRIVATE",
            "enum" : [ "PRIVATE", "PRIVATE_WITH_GUEST", "CHARGEABLE_PUBLIC", "FREE_PUBLIC", "PERSONAL_DEVICE", "TEST", "WILDCARD" ]
          },
          "allowInternetAccess" : {
            "type" : "boolean",
            "default" : true
          },
          "connectionCapabilities" : {
            "maxItems" : 32,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Hotspot20ConnectionCapability"
            }
          },
          "ipv4AddressType" : {
            "type" : "string",
            "default" : "Hotspot20Ipv4AddressTypeEnum.SINGLE_NATED_PRIVATE",
            "enum" : [ "UNAVAILABLE", "PUBLIC", "PORT_RESTRICTED", "SINGLE_NATED_PRIVATE", "DOUBLE_NATED_PRIVATE", "PORT_RESTRICTED_AND_SINGLE_NATED", "PORT_RESTRICTED_AND_DOUBLE_NATED", "UNKNOWN" ]
          }
        },
        "description" : "Network Hotspot 2.0 settings"
      },
      "NetworkOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/AAANetwork"
            }, {
              "$ref" : "#/components/schemas/DpskNetwork"
            }, {
              "$ref" : "#/components/schemas/GuestNetwork"
            }, {
              "$ref" : "#/components/schemas/Hotspot20Network"
            }, {
              "$ref" : "#/components/schemas/OpenNetwork"
            }, {
              "$ref" : "#/components/schemas/PskNetwork"
            } ]
          }
        }
      },
      "NetworkSettings" : {
        "required" : [ "ipType" ],
        "type" : "object",
        "properties" : {
          "gateway" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "ip" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "ipType" : {
            "type" : "string",
            "enum" : [ "DYNAMIC", "STATIC" ]
          },
          "netmask" : {
            "pattern" : "^(?:(?:(?:255\\.){3}(?:252|248|240|224|192|128|0+))|(?:(?:255\\.){2}(?:255|254|252|248|240|224|192|128|0+)\\.0)|(?:(?:255\\.)(?:255|254|252|248|240|224|192|128|0+)(?:\\.0+){2})|(?:(?:255|254|252|248|240|224|192|128|0+)(?:\\.0+){3}))$",
            "type" : "string"
          },
          "primaryDnsServer" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "secondaryDnsServer" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){2}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          }
        },
        "description" : "Network Settings of AP."
      },
      "NetworkVenue" : {
        "type" : "object",
        "properties" : {
          "allApGroupsRadio" : {
            "type" : "string",
            "deprecated" : true,
            "default" : "RadioEnum.Both",
            "enum" : [ "Both", "2.4-GHz", "5-GHz" ]
          },
          "allApGroupsRadioTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "2.4-GHz", "5-GHz", "6-GHz" ]
            }
          },
          "allApGroupsVlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "apGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NetworkApGroup"
            }
          },
          "clientIsolationAllowlistId" : {
            "type" : "string"
          },
          "dual5gEnabled" : {
            "type" : "boolean",
            "readOnly" : true,
            "default" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "isAllApGroups" : {
            "type" : "boolean",
            "default" : true
          },
          "networkId" : {
            "type" : "string"
          },
          "scheduler" : {
            "$ref" : "#/components/schemas/NetworkVenueScheduler"
          },
          "tripleBandEnabled" : {
            "type" : "boolean",
            "readOnly" : true,
            "default" : false
          },
          "venueId" : {
            "type" : "string"
          },
          "vlanPoolId" : {
            "type" : "string"
          }
        },
        "description" : "Network venue association"
      },
      "NetworkVenueOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/NetworkVenue"
          }
        }
      },
      "NetworkVenueScheduler" : {
        "type" : "object",
        "properties" : {
          "fri" : {
            "pattern" : "[0-1]{96}",
            "type" : "string"
          },
          "mon" : {
            "pattern" : "[0-1]{96}",
            "type" : "string"
          },
          "sat" : {
            "pattern" : "[0-1]{96}",
            "type" : "string"
          },
          "sun" : {
            "pattern" : "[0-1]{96}",
            "type" : "string"
          },
          "thu" : {
            "pattern" : "[0-1]{96}",
            "type" : "string"
          },
          "tue" : {
            "pattern" : "[0-1]{96}",
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "default" : "SchedulerTypeEnum.ALWAYS_ON",
            "enum" : [ "ALWAYS_ON", "ALWAYS_OFF", "CUSTOM" ]
          },
          "wed" : {
            "pattern" : "[0-1]{96}",
            "type" : "string"
          }
        },
        "description" : "Network-Venue scheduler"
      },
      "OauthAppConfig" : {
        "required" : [ "appId", "appSecret" ],
        "type" : "object",
        "properties" : {
          "appId" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "appSecret" : {
            "maxLength" : 128,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "description" : "OAUTH configuration"
      },
      "OpenNetwork" : {
        "required" : [ "name", "wlan" ],
        "type" : "object",
        "description" : "Open Wi-Fi network",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Network"
        }, {
          "type" : "object",
          "properties" : {
            "accountingRadiusId" : {
              "type" : "string"
            },
            "authRadiusId" : {
              "type" : "string"
            },
            "description" : {
              "maxLength" : 256,
              "minLength" : 0,
              "type" : "string"
            },
            "enableAccountingProxy" : {
              "type" : "boolean",
              "default" : false
            },
            "enableAuthProxy" : {
              "type" : "boolean",
              "default" : false
            },
            "isOweMaster" : {
              "type" : "boolean",
              "readOnly" : true,
              "default" : false
            },
            "name" : {
              "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
              "type" : "string"
            },
            "owePairNetworkId" : {
              "type" : "string",
              "readOnly" : true
            },
            "venues" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/NetworkVenue"
              }
            },
            "wlan" : {
              "$ref" : "#/components/schemas/OpenWlan"
            }
          }
        } ]
      },
      "OpenWifiNetwork" : {
        "required" : [ "name", "wlan" ],
        "type" : "object",
        "description" : "Open Wi-Fi network",
        "allOf" : [ {
          "$ref" : "#/components/schemas/WifiNetwork"
        }, {
          "type" : "object",
          "properties" : {
            "description" : {
              "maxLength" : 256,
              "minLength" : 0,
              "type" : "string"
            },
            "isOweMaster" : {
              "type" : "boolean",
              "readOnly" : true,
              "default" : false
            },
            "name" : {
              "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
              "type" : "string"
            },
            "owePairNetworkId" : {
              "type" : "string",
              "readOnly" : true
            },
            "wlan" : {
              "$ref" : "#/components/schemas/OpenWifiWlan"
            }
          }
        } ]
      },
      "OpenWifiWlan" : {
        "required" : [ "ssid" ],
        "type" : "object",
        "properties" : {
          "advancedCustomization" : {
            "$ref" : "#/components/schemas/OpenWifiWlanAdvancedCustomization"
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "macAddressAuthentication" : {
            "type" : "boolean",
            "default" : false
          },
          "ssid" : {
            "pattern" : "[^`\\s]([^`\\t\\r\\n]){0,30}[^`\\s]",
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "wlanSecurity" : {
            "type" : "string",
            "default" : "OpenWlanSecurityEnum.Open",
            "enum" : [ "Open", "OWE", "OWETransition" ]
          }
        },
        "description" : "Open Wi-Fi WLAN"
      },
      "OpenWifiWlanAdvancedCustomization" : {
        "type" : "object",
        "properties" : {
          "applicationVisibilityEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "arpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "broadcastProbeResponseDelay" : {
            "maximum" : 120,
            "minimum" : 8,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "bssPriority" : {
            "type" : "string",
            "default" : "BSSPriorityEnum.HIGH",
            "enum" : [ "HIGH", "LOW" ]
          },
          "clientInactivityTimeout" : {
            "maximum" : 86400,
            "minimum" : 60,
            "type" : "integer",
            "format" : "int32",
            "default" : 120
          },
          "clientIsolation" : {
            "type" : "boolean",
            "default" : false
          },
          "clientIsolationOptions" : {
            "$ref" : "#/components/schemas/ClientIsolationOptions"
          },
          "clientLoadBalancingEnable" : {
            "type" : "boolean",
            "default" : true
          },
          "dhcpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "directedThreshold" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "dnsProxy" : {
            "$ref" : "#/components/schemas/DnsProxy"
          },
          "dnsProxyEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAaaVlanOverride" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAdditionalRegulatoryDomains" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAirtimeDecongestion" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAntiSpoofing" : {
            "type" : "boolean",
            "default" : false
          },
          "enableApHostNameAdvertisement" : {
            "type" : "boolean",
            "default" : false
          },
          "enableArpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableBandBalancing" : {
            "type" : "boolean",
            "default" : true
          },
          "enableDhcpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableGtkRekey" : {
            "type" : "boolean",
            "default" : true
          },
          "enableJoinRSSIThreshold" : {
            "type" : "boolean",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic.",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableNeighborReport" : {
            "type" : "boolean",
            "default" : true
          },
          "enableOptimizedConnectivityExperience" : {
            "type" : "boolean",
            "default" : false
          },
          "enableSyslog" : {
            "type" : "boolean",
            "default" : false
          },
          "enableTransientClientManagement" : {
            "type" : "boolean",
            "default" : false
          },
          "forceMobileDeviceDhcp" : {
            "type" : "boolean",
            "default" : false
          },
          "hideSsid" : {
            "type" : "boolean",
            "default" : false
          },
          "joinExpireTime" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 300
          },
          "joinRSSIThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -85
          },
          "joinWaitThreshold" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "joinWaitTime" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          },
          "maxClientsOnWlanPerRadio" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "multiLinkOperationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multiLinkOperationOptions" : {
            "$ref" : "#/components/schemas/MultiLinkOperationOptions"
          },
          "multicastDownlinkRateLimiting" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps). The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastFilterEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps).",
            "format" : "int32",
            "default" : 1
          },
          "proxyARP" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetOptions" : {
            "$ref" : "#/components/schemas/QosMapSetOptions"
          },
          "qosMirroringEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMirroringScope" : {
            "type" : "string",
            "default" : "QosMirroringScopeEnum.MSCS_REQUESTS_ONLY",
            "enum" : [ "MSCS_REQUESTS_ONLY", "ALL_CLIENTS" ]
          },
          "radioCustomization" : {
            "$ref" : "#/components/schemas/WlanRadioCustomization"
          },
          "radiusOptions" : {
            "$ref" : "#/components/schemas/RadiusOptions"
          },
          "respectiveAccessControl" : {
            "type" : "boolean",
            "default" : true
          },
          "rssiAssociationRejectionThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -75
          },
          "totalDownlinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "totalUplinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userDownlinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userUplinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "wifi6Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifi7Enabled" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "WLAN advanced customization"
      },
      "OpenWlan" : {
        "required" : [ "ssid" ],
        "type" : "object",
        "properties" : {
          "advancedCustomization" : {
            "$ref" : "#/components/schemas/OpenWlanAdvancedCustomization"
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "macAddressAuthentication" : {
            "type" : "boolean",
            "default" : false
          },
          "macAuthMacFormat" : {
            "type" : "string",
            "enum" : [ "Lower", "UpperDash", "UpperColon", "Upper", "LowerDash", "LowerColon" ]
          },
          "macRegistrationListId" : {
            "type" : "string"
          },
          "ssid" : {
            "pattern" : "[^`\\s]([^`\\t\\r\\n]){0,30}[^`\\s]",
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "wlanSecurity" : {
            "type" : "string",
            "default" : "OpenWlanSecurityEnum.Open",
            "enum" : [ "Open", "OWE", "OWETransition" ]
          }
        },
        "description" : "WLAN"
      },
      "OpenWlanAdvancedCustomization" : {
        "type" : "object",
        "properties" : {
          "accessControlEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "accessControlProfileId" : {
            "type" : "string"
          },
          "applicationPolicyEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "applicationPolicyId" : {
            "type" : "string"
          },
          "applicationVisibilityEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "arpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "broadcastProbeResponseDelay" : {
            "maximum" : 120,
            "minimum" : 8,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "bssPriority" : {
            "type" : "string",
            "default" : "BSSPriorityEnum.HIGH",
            "enum" : [ "HIGH", "LOW" ]
          },
          "clientInactivityTimeout" : {
            "maximum" : 86400,
            "minimum" : 60,
            "type" : "integer",
            "format" : "int32",
            "default" : 120
          },
          "clientIsolation" : {
            "type" : "boolean",
            "default" : true
          },
          "clientIsolationOptions" : {
            "$ref" : "#/components/schemas/ClientIsolationOptions"
          },
          "clientLoadBalancingEnable" : {
            "type" : "boolean",
            "default" : true
          },
          "devicePolicyId" : {
            "type" : "string"
          },
          "dhcpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "directedThreshold" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "dnsProxy" : {
            "$ref" : "#/components/schemas/DnsProxy"
          },
          "dnsProxyEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAaaVlanOverride" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAdditionalRegulatoryDomains" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAirtimeDecongestion" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAntiSpoofing" : {
            "type" : "boolean",
            "default" : false
          },
          "enableApHostNameAdvertisement" : {
            "type" : "boolean",
            "default" : false
          },
          "enableArpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableBandBalancing" : {
            "type" : "boolean",
            "default" : true
          },
          "enableDhcpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableGtkRekey" : {
            "type" : "boolean",
            "default" : true
          },
          "enableJoinRSSIThreshold" : {
            "type" : "boolean",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic.",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableNeighborReport" : {
            "type" : "boolean",
            "default" : true
          },
          "enableOptimizedConnectivityExperience" : {
            "type" : "boolean",
            "default" : false
          },
          "enableSyslog" : {
            "type" : "boolean",
            "default" : false
          },
          "enableTransientClientManagement" : {
            "type" : "boolean",
            "default" : false
          },
          "forceMobileDeviceDhcp" : {
            "type" : "boolean",
            "default" : false
          },
          "hideSsid" : {
            "type" : "boolean",
            "default" : false
          },
          "joinExpireTime" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 300
          },
          "joinRSSIThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -85
          },
          "joinWaitThreshold" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "joinWaitTime" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          },
          "l2AclEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "l2AclPolicyId" : {
            "type" : "string"
          },
          "l3AclEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "l3AclPolicyId" : {
            "type" : "string"
          },
          "maxClientsOnWlanPerRadio" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "multiLinkOperationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multiLinkOperationOptions" : {
            "$ref" : "#/components/schemas/MultiLinkOperationOptions"
          },
          "multicastDownlinkRateLimiting" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps). The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastFilterEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps).",
            "format" : "int32",
            "default" : 1
          },
          "proxyARP" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetOptions" : {
            "$ref" : "#/components/schemas/QosMapSetOptions"
          },
          "qosMirroringEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMirroringScope" : {
            "type" : "string",
            "default" : "QosMirroringScopeEnum.MSCS_REQUESTS_ONLY",
            "enum" : [ "MSCS_REQUESTS_ONLY", "ALL_CLIENTS" ]
          },
          "radioCustomization" : {
            "$ref" : "#/components/schemas/WlanRadioCustomization"
          },
          "radiusOptions" : {
            "$ref" : "#/components/schemas/RadiusOptions"
          },
          "respectiveAccessControl" : {
            "type" : "boolean",
            "default" : true
          },
          "rssiAssociationRejectionThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -75
          },
          "totalDownlinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "totalUplinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userDownlinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userUplinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "vlanPool" : {
            "$ref" : "#/components/schemas/VlanPool"
          },
          "wifi6Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifi7Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifiCallingEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "wifiCallingIds" : {
            "maxItems" : 5,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "WLAN advanced customization"
      },
      "OperationResponseIdOnly" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          }
        }
      },
      "OperationResponseRequestIdOnly" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          }
        }
      },
      "PartialVlanPool" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "tenantId" : {
            "type" : "string",
            "readOnly" : true
          },
          "vlanMembers" : {
            "maxItems" : 16,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "VLAN pool"
      },
      "PskNetwork" : {
        "required" : [ "name", "wlan" ],
        "type" : "object",
        "description" : "PSK Wi-Fi network",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Network"
        }, {
          "type" : "object",
          "properties" : {
            "accountingRadiusId" : {
              "type" : "string"
            },
            "authRadiusId" : {
              "type" : "string"
            },
            "description" : {
              "maxLength" : 256,
              "minLength" : 0,
              "type" : "string"
            },
            "name" : {
              "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
              "type" : "string"
            },
            "venues" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/NetworkVenue"
              }
            },
            "wlan" : {
              "$ref" : "#/components/schemas/PskWlan"
            }
          }
        } ]
      },
      "PskWifiNetwork" : {
        "required" : [ "name", "wlan" ],
        "type" : "object",
        "description" : "PSK Wi-Fi network",
        "allOf" : [ {
          "$ref" : "#/components/schemas/WifiNetwork"
        }, {
          "type" : "object",
          "properties" : {
            "description" : {
              "maxLength" : 256,
              "minLength" : 0,
              "type" : "string"
            },
            "name" : {
              "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
              "type" : "string"
            },
            "wlan" : {
              "$ref" : "#/components/schemas/PskWifiWlan"
            }
          }
        } ]
      },
      "PskWifiWlan" : {
        "required" : [ "ssid" ],
        "type" : "object",
        "properties" : {
          "advancedCustomization" : {
            "$ref" : "#/components/schemas/PskWifiWlanAdvancedCustomization"
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "macAddressAuthentication" : {
            "type" : "boolean",
            "default" : false
          },
          "managementFrameProtection" : {
            "type" : "string",
            "enum" : [ "Disabled", "Optional", "Required" ]
          },
          "passphrase" : {
            "maxLength" : 64,
            "minLength" : 8,
            "pattern" : "^[!-_a-~]((?!\\$\\()[ !-_a-~]){6,61}[!-_a-~]$|^[A-Fa-f0-9]{64}$",
            "type" : "string"
          },
          "saePassphrase" : {
            "maxLength" : 64,
            "minLength" : 8,
            "pattern" : "^[!-_a-~]((?!\\$\\()[ !-_a-~]){6,61}[!-_a-~]$|^[A-Fa-f0-9]{64}$",
            "type" : "string"
          },
          "ssid" : {
            "pattern" : "[^`\\s]([^`\\t\\r\\n]){0,30}[^`\\s]",
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "wepHexKey" : {
            "pattern" : "[0-9a-fA-F]{26}",
            "type" : "string"
          },
          "wlanSecurity" : {
            "type" : "string",
            "default" : "PskWlanSecurityEnum.WPA2Personal",
            "enum" : [ "WPAPersonal", "WPA2Personal", "WEP", "WPA23Mixed", "WPA3" ]
          }
        },
        "description" : "PSK Wi-Fi WLAN"
      },
      "PskWifiWlanAdvancedCustomization" : {
        "type" : "object",
        "properties" : {
          "applicationVisibilityEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "arpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "broadcastProbeResponseDelay" : {
            "maximum" : 120,
            "minimum" : 8,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "bssPriority" : {
            "type" : "string",
            "default" : "BSSPriorityEnum.HIGH",
            "enum" : [ "HIGH", "LOW" ]
          },
          "clientInactivityTimeout" : {
            "maximum" : 86400,
            "minimum" : 60,
            "type" : "integer",
            "format" : "int32",
            "default" : 120
          },
          "clientIsolation" : {
            "type" : "boolean",
            "default" : false
          },
          "clientIsolationOptions" : {
            "$ref" : "#/components/schemas/ClientIsolationOptions"
          },
          "clientLoadBalancingEnable" : {
            "type" : "boolean",
            "default" : true
          },
          "dhcpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "directedThreshold" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "dnsProxy" : {
            "$ref" : "#/components/schemas/DnsProxy"
          },
          "dnsProxyEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAdditionalRegulatoryDomains" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAirtimeDecongestion" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAntiSpoofing" : {
            "type" : "boolean",
            "default" : false
          },
          "enableApHostNameAdvertisement" : {
            "type" : "boolean",
            "default" : false
          },
          "enableArpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableBandBalancing" : {
            "type" : "boolean",
            "default" : true
          },
          "enableDhcpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableFastRoaming" : {
            "type" : "boolean",
            "default" : false
          },
          "enableGtkRekey" : {
            "type" : "boolean",
            "default" : true
          },
          "enableJoinRSSIThreshold" : {
            "type" : "boolean",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic.",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableNeighborReport" : {
            "type" : "boolean",
            "default" : true
          },
          "enableOptimizedConnectivityExperience" : {
            "type" : "boolean",
            "default" : false
          },
          "enableSyslog" : {
            "type" : "boolean",
            "default" : false
          },
          "enableTransientClientManagement" : {
            "type" : "boolean",
            "default" : false
          },
          "forceMobileDeviceDhcp" : {
            "type" : "boolean",
            "default" : false
          },
          "hideSsid" : {
            "type" : "boolean",
            "default" : false
          },
          "joinExpireTime" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 300
          },
          "joinRSSIThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -85
          },
          "joinWaitThreshold" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "joinWaitTime" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          },
          "maxClientsOnWlanPerRadio" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "mobilityDomainId" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "multiLinkOperationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multiLinkOperationOptions" : {
            "$ref" : "#/components/schemas/MultiLinkOperationOptions"
          },
          "multicastDownlinkRateLimiting" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps). The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastFilterEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps).",
            "format" : "int32",
            "default" : 1
          },
          "proxyARP" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetOptions" : {
            "$ref" : "#/components/schemas/QosMapSetOptions"
          },
          "qosMirroringEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMirroringScope" : {
            "type" : "string",
            "default" : "QosMirroringScopeEnum.MSCS_REQUESTS_ONLY",
            "enum" : [ "MSCS_REQUESTS_ONLY", "ALL_CLIENTS" ]
          },
          "radioCustomization" : {
            "$ref" : "#/components/schemas/WlanRadioCustomization"
          },
          "radiusOptions" : {
            "$ref" : "#/components/schemas/RadiusOptions"
          },
          "respectiveAccessControl" : {
            "type" : "boolean",
            "default" : true
          },
          "rssiAssociationRejectionThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -75
          },
          "totalDownlinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "totalUplinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userDownlinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userUplinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "wifi6Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifi7Enabled" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "WLAN advanced customization"
      },
      "PskWlan" : {
        "required" : [ "ssid" ],
        "type" : "object",
        "properties" : {
          "advancedCustomization" : {
            "$ref" : "#/components/schemas/PskWlanAdvancedCustomization"
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "macAddressAuthentication" : {
            "type" : "boolean",
            "default" : false
          },
          "macAuthMacFormat" : {
            "type" : "string",
            "enum" : [ "Lower", "UpperDash", "UpperColon", "Upper", "LowerDash", "LowerColon" ]
          },
          "macRegistrationListId" : {
            "type" : "string"
          },
          "managementFrameProtection" : {
            "type" : "string",
            "enum" : [ "Disabled", "Optional", "Required" ]
          },
          "passphrase" : {
            "maxLength" : 64,
            "minLength" : 8,
            "pattern" : "^[!-_a-~]((?!\\$\\()[ !-_a-~]){6,61}[!-_a-~]$|^[A-Fa-f0-9]{64}$",
            "type" : "string"
          },
          "saePassphrase" : {
            "maxLength" : 64,
            "minLength" : 8,
            "pattern" : "^[!-_a-~]((?!\\$\\()[ !-_a-~]){6,61}[!-_a-~]$|^[A-Fa-f0-9]{64}$",
            "type" : "string"
          },
          "ssid" : {
            "pattern" : "[^`\\s]([^`\\t\\r\\n]){0,30}[^`\\s]",
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "wepHexKey" : {
            "pattern" : "[0-9a-fA-F]{26}",
            "type" : "string"
          },
          "wlanSecurity" : {
            "type" : "string",
            "default" : "PskWlanSecurityEnum.WPA2Personal",
            "enum" : [ "WPAPersonal", "WPA2Personal", "WEP", "WPA23Mixed", "WPA3" ]
          }
        },
        "description" : "WLAN"
      },
      "PskWlanAdvancedCustomization" : {
        "type" : "object",
        "properties" : {
          "accessControlEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "accessControlProfileId" : {
            "type" : "string"
          },
          "applicationPolicyEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "applicationPolicyId" : {
            "type" : "string"
          },
          "applicationVisibilityEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "arpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "broadcastProbeResponseDelay" : {
            "maximum" : 120,
            "minimum" : 8,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "bssPriority" : {
            "type" : "string",
            "default" : "BSSPriorityEnum.HIGH",
            "enum" : [ "HIGH", "LOW" ]
          },
          "clientInactivityTimeout" : {
            "maximum" : 86400,
            "minimum" : 60,
            "type" : "integer",
            "format" : "int32",
            "default" : 120
          },
          "clientIsolation" : {
            "type" : "boolean",
            "default" : false
          },
          "clientIsolationOptions" : {
            "$ref" : "#/components/schemas/ClientIsolationOptions"
          },
          "clientLoadBalancingEnable" : {
            "type" : "boolean",
            "default" : true
          },
          "devicePolicyId" : {
            "type" : "string"
          },
          "dhcpRequestRateLimit" : {
            "maximum" : 100,
            "minimum" : 15,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "directedThreshold" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "dnsProxy" : {
            "$ref" : "#/components/schemas/DnsProxy"
          },
          "dnsProxyEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAdditionalRegulatoryDomains" : {
            "type" : "boolean",
            "default" : true
          },
          "enableAirtimeDecongestion" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAntiSpoofing" : {
            "type" : "boolean",
            "default" : false
          },
          "enableApHostNameAdvertisement" : {
            "type" : "boolean",
            "default" : false
          },
          "enableArpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableBandBalancing" : {
            "type" : "boolean",
            "default" : true
          },
          "enableDhcpRequestRateLimit" : {
            "type" : "boolean",
            "default" : true
          },
          "enableFastRoaming" : {
            "type" : "boolean",
            "default" : false
          },
          "enableGtkRekey" : {
            "type" : "boolean",
            "default" : true
          },
          "enableJoinRSSIThreshold" : {
            "type" : "boolean",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic.",
            "default" : false
          },
          "enableMulticastDownlinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting6G" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableNeighborReport" : {
            "type" : "boolean",
            "default" : true
          },
          "enableOptimizedConnectivityExperience" : {
            "type" : "boolean",
            "default" : false
          },
          "enableSyslog" : {
            "type" : "boolean",
            "default" : false
          },
          "enableTransientClientManagement" : {
            "type" : "boolean",
            "default" : false
          },
          "forceMobileDeviceDhcp" : {
            "type" : "boolean",
            "default" : false
          },
          "hideSsid" : {
            "type" : "boolean",
            "default" : false
          },
          "joinExpireTime" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 300
          },
          "joinRSSIThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -85
          },
          "joinWaitThreshold" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "joinWaitTime" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          },
          "l2AclEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "l2AclPolicyId" : {
            "type" : "string"
          },
          "l3AclEnable" : {
            "type" : "boolean",
            "default" : false
          },
          "l3AclPolicyId" : {
            "type" : "string"
          },
          "maxClientsOnWlanPerRadio" : {
            "maximum" : 512,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "mobilityDomainId" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "multiLinkOperationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multiLinkOperationOptions" : {
            "$ref" : "#/components/schemas/MultiLinkOperationOptions"
          },
          "multicastDownlinkRateLimiting" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps). The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastFilterEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps).",
            "format" : "int32",
            "default" : 1
          },
          "proxyARP" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMapSetOptions" : {
            "$ref" : "#/components/schemas/QosMapSetOptions"
          },
          "qosMirroringEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "qosMirroringScope" : {
            "type" : "string",
            "default" : "QosMirroringScopeEnum.MSCS_REQUESTS_ONLY",
            "enum" : [ "MSCS_REQUESTS_ONLY", "ALL_CLIENTS" ]
          },
          "radioCustomization" : {
            "$ref" : "#/components/schemas/WlanRadioCustomization"
          },
          "radiusOptions" : {
            "$ref" : "#/components/schemas/RadiusOptions"
          },
          "respectiveAccessControl" : {
            "type" : "boolean",
            "default" : true
          },
          "rssiAssociationRejectionThreshold" : {
            "maximum" : -60,
            "minimum" : -90,
            "type" : "integer",
            "format" : "int32",
            "default" : -75
          },
          "totalDownlinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "totalUplinkRateLimiting" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userDownlinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "userUplinkRateLimiting" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "vlanPool" : {
            "$ref" : "#/components/schemas/VlanPool"
          },
          "wifi6Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifi7Enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wifiCallingEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "wifiCallingIds" : {
            "maxItems" : 5,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "WLAN advanced customization"
      },
      "QosMapRule" : {
        "required" : [ "dscpHigh", "dscpLow", "priority" ],
        "type" : "object",
        "properties" : {
          "dscpExceptionValues" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "dscpHigh" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dscpLow" : {
            "type" : "integer",
            "format" : "int32"
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "priority" : {
            "maximum" : 7,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "QoS map rule."
      },
      "QosMapSetOptions" : {
        "type" : "object",
        "properties" : {
          "rules" : {
            "maxItems" : 8,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QosMapRule"
            }
          }
        },
        "description" : "QoS map set options."
      },
      "QueryRequest" : {
        "type" : "object",
        "properties" : {
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          },
          "searchString" : {
            "type" : "string"
          },
          "searchTargetFields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sortField" : {
            "type" : "string"
          },
          "sortOrder" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        },
        "description" : "Query request"
      },
      "RadioParams24G" : {
        "type" : "object",
        "properties" : {
          "allowedChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ]
            }
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth24GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz" ]
          },
          "method" : {
            "type" : "string",
            "default" : "ScanMethodEnum.BACKGROUND_SCANNING",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "scanInterval" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPowerEnum.MAX",
            "enum" : [ "Auto", "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          }
        },
        "description" : "Radio customization for 2.4GHz."
      },
      "RadioParams50G" : {
        "type" : "object",
        "properties" : {
          "allowedIndoorChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "allowedOutdoorChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth5GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz", "80MHz", "160MHz" ]
          },
          "combineChannels" : {
            "type" : "boolean",
            "default" : false
          },
          "method" : {
            "type" : "string",
            "default" : "ScanMethodEnum.BACKGROUND_SCANNING",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "scanInterval" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPowerEnum.MAX",
            "enum" : [ "Auto", "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          }
        },
        "description" : "Radio customization for 5GHz."
      },
      "RadioParams6G" : {
        "type" : "object",
        "properties" : {
          "allowedChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "bssMinRate6G" : {
            "type" : "string",
            "default" : "BssMinRate6GEnum.HE_MCS_0",
            "enum" : [ "HE_MCS_0", "HE_MCS_1", "HE_MCS_2", "HE_MCS_3" ]
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth6GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz", "80MHz", "160MHz" ]
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "method" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "ScanMethodEnum.CHANNELFLY",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "mgmtTxRate6G" : {
            "type" : "string",
            "default" : "MgmtTxRate6GEnum._6",
            "enum" : [ "6", "9", "12", "18", "24" ]
          },
          "multicastDownlinkRateLimiting" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps) on 6-GHz radio. The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps) on 6-GHz radio.",
            "format" : "int32",
            "default" : 1
          },
          "scanInterval" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPower6GEnum.MAX",
            "enum" : [ "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          }
        },
        "description" : "Radio customization for 6GHz."
      },
      "RadioParamsDual5G" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "inheritParamsLower5G" : {
            "type" : "boolean",
            "default" : true
          },
          "inheritParamsUpper5G" : {
            "type" : "boolean",
            "default" : true
          },
          "radioParamsLower5G" : {
            "$ref" : "#/components/schemas/Dual5GRadioParams50G"
          },
          "radioParamsUpper5G" : {
            "$ref" : "#/components/schemas/Dual5GRadioParams50G"
          }
        },
        "description" : "Radio customization for dual 5GHz radios."
      },
      "Radius" : {
        "required" : [ "primary" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "primary" : {
            "$ref" : "#/components/schemas/RadiusServer"
          },
          "secondary" : {
            "$ref" : "#/components/schemas/RadiusServer"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "AUTHENTICATION", "ACCOUNTING" ]
          }
        },
        "description" : "Primary and secondary radius servers."
      },
      "RadiusOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/Radius"
          }
        }
      },
      "RadiusOptions" : {
        "type" : "object",
        "properties" : {
          "calledStationIdType" : {
            "type" : "string",
            "enum" : [ "BSSID", "AP_MAC", "NONE", "AP_GROUP" ]
          },
          "nasIdDelimiter" : {
            "type" : "string",
            "default" : "NasIdDelimiterEnum.DASH",
            "enum" : [ "DASH", "COLON" ]
          },
          "nasIdType" : {
            "type" : "string",
            "default" : "NasIdTypeEnum.BSSID",
            "enum" : [ "USER", "BSSID", "AP_MAC", "VENUE_NAME" ]
          },
          "nasMaxRetry" : {
            "maximum" : 10,
            "minimum" : 2,
            "type" : "integer",
            "format" : "int32",
            "default" : 2
          },
          "nasReconnectPrimaryMin" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "nasRequestTimeoutSec" : {
            "maximum" : 20,
            "minimum" : 2,
            "type" : "integer",
            "format" : "int32",
            "default" : 3
          },
          "singleSessionIdAccounting" : {
            "type" : "boolean",
            "default" : false
          },
          "userDefinedNasId" : {
            "maxLength" : 64,
            "minLength" : 2,
            "pattern" : "^((?!`|\\$\\()[ -~]){2,64}$",
            "type" : "string"
          }
        },
        "description" : "RADIUS custom settings"
      },
      "RadiusServer" : {
        "required" : [ "ip", "port", "sharedSecret" ],
        "type" : "object",
        "properties" : {
          "ip" : {
            "pattern" : "^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$",
            "type" : "string"
          },
          "port" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "sharedSecret" : {
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[\\x21-\\x7E]+([\\x20-\\x7E]*[\\x21-\\x7E]+)*$",
            "type" : "string"
          }
        },
        "description" : "RADIUS server"
      },
      "RadiusServerProfile" : {
        "required" : [ "primary" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "primary" : {
            "$ref" : "#/components/schemas/RadiusServerV1_1"
          },
          "secondary" : {
            "$ref" : "#/components/schemas/RadiusServerV1_1"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "AUTHENTICATION", "ACCOUNTING" ]
          }
        },
        "description" : "Primary and secondary radius servers."
      },
      "RadiusServerV1_1" : {
        "required" : [ "ip", "port" ],
        "type" : "object",
        "properties" : {
          "autoFallbackDisable" : {
            "type" : "boolean",
            "default" : true
          },
          "ip" : {
            "pattern" : "^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$",
            "type" : "string"
          },
          "port" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "sharedSecret" : {
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[\\x21-\\x7E]+([\\x20-\\x7E]*[\\x21-\\x7E]+)*$",
            "type" : "string"
          }
        },
        "description" : "RADIUS server"
      },
      "RateLimiting" : {
        "type" : "object",
        "properties" : {
          "downlinkLimit" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "uplinkLimit" : {
            "maximum" : 200,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        },
        "description" : "Client traffic rate limiting"
      },
      "RecoveryPassphraseSettings" : {
        "type" : "object",
        "properties" : {
          "passphrase" : {
            "pattern" : "^([0-9]{4}){4}$",
            "type" : "string"
          }
        },
        "description" : "Passphrase settings of the recovery network."
      },
      "RecoveryPsk" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean",
            "default" : false
          },
          "psk" : {
            "pattern" : "^([0-9]{4}){4}$",
            "type" : "string"
          },
          "tenantId" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "PSK of the recovery network."
      },
      "RogueClassificationPolicy" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RogueClassificationPolicyRule"
            }
          },
          "venues" : {
            "type" : "array",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/IdAndName"
            }
          }
        },
        "description" : "Rogue classification policy."
      },
      "RogueClassificationPolicyOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/RogueClassificationPolicy"
          }
        }
      },
      "RogueClassificationPolicyRule" : {
        "required" : [ "classification", "name", "priority", "type" ],
        "type" : "object",
        "properties" : {
          "classification" : {
            "type" : "string",
            "description" : "Rogue classification enumeration.",
            "enum" : [ "Ignored", "Known", "Unclassified", "Malicious" ]
          },
          "moreInfo" : {
            "type" : "string",
            "description" : "Used to communicate additional information about the rogue AP. This parameter value is dependent on the rogue classification policy rule used."
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          },
          "priority" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "description" : "Rogue rule type enumeration.",
            "enum" : [ "AdhocRule", "SsidSpoofingRule", "MacSpoofingRule", "SameNetworkRule", "CTSAbuseRule", "RTSAbuseRule", "DeauthFloodRule", "DisassocFloodRule", "ExcessivePowerRule", "NullSSIDRule", "CustomSsidRule", "CustomSnrRule", "CustomMacOuiRule" ]
          }
        },
        "description" : "Rogue classification policy rule."
      },
      "RoguePolicy" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RogueClassificationPolicyRule"
            }
          }
        },
        "description" : "Rogue classification policy."
      },
      "SimSettings" : {
        "required" : [ "networkSelection" ],
        "type" : "object",
        "properties" : {
          "apn" : {
            "pattern" : "^([!-?A-~]([!-?A-~]){0,62}[!-?A-~]|[!-?A-~]?)$",
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "lteBands" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LteBandLockChannel"
            }
          },
          "networkSelection" : {
            "type" : "string",
            "enum" : [ "AUTO", "LTE", "ThreeG" ]
          },
          "roaming" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "SIM setting object."
      },
      "SnmpAgentNotificationSettings" : {
        "type" : "object",
        "properties" : {
          "targetIpAddress" : {
            "pattern" : "^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)",
            "type" : "string"
          },
          "targetPort" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 162
          },
          "type" : {
            "type" : "string",
            "default" : "SnmpAgentNotificationTypeEnum.TRAP",
            "enum" : [ "TRAP", "INFORM" ]
          }
        }
      },
      "SnmpAgentProfileV1_1" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "snmpV2Agents" : {
            "maxItems" : 2,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SnmpV2Agent"
            }
          },
          "snmpV3Agents" : {
            "maxItems" : 2,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SnmpV3AgentV1_1"
            }
          }
        },
        "description" : "AP SNMP agent profile."
      },
      "SnmpV2Agent" : {
        "required" : [ "communityName" ],
        "type" : "object",
        "properties" : {
          "communityName" : {
            "maxLength" : 32,
            "minLength" : 1,
            "pattern" : "^[^'#\" ]*$",
            "type" : "string"
          },
          "notificationPrivilege" : {
            "type" : "boolean",
            "default" : false
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/SnmpAgentNotificationSettings"
          },
          "readOnlyPrivilege" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "SNMPv2 agent configuration."
      },
      "SnmpV3AgentV1_1" : {
        "required" : [ "authenticationPassphrase", "userName" ],
        "type" : "object",
        "properties" : {
          "authenticationPassphrase" : {
            "maxLength" : 32,
            "minLength" : 8,
            "pattern" : "^(?!~)(?!.*\\$\\()(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[~!@#$%^&*_\\-+=|\\(\\)\\{\\}\\[\\]:;\"'<>,.?/])[A-Za-z\\d~!@#$%^&*_\\-+=|\\(\\)\\{\\}\\[\\]:;\"'<>,.?/]+$",
            "type" : "string"
          },
          "authenticationType" : {
            "type" : "string",
            "default" : "SnmpAgentAuthenticationTypeEnum.SHA",
            "enum" : [ "SHA", "MD5" ]
          },
          "notificationPrivilege" : {
            "type" : "boolean",
            "default" : false
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/SnmpAgentNotificationSettings"
          },
          "privacyPassphrase" : {
            "maxLength" : 32,
            "minLength" : 8,
            "type" : "string"
          },
          "privacyType" : {
            "type" : "string",
            "default" : "SnmpAgentPrivacyTypeEnum.NONE",
            "enum" : [ "NONE", "DES", "AES" ]
          },
          "readOnlyPrivilege" : {
            "type" : "boolean",
            "default" : false
          },
          "userName" : {
            "maxLength" : 32,
            "minLength" : 3,
            "pattern" : "^[^'#\" ]*$",
            "type" : "string"
          }
        },
        "description" : "SNMPv3 agent configuration."
      },
      "SocialIdentities" : {
        "type" : "object",
        "properties" : {
          "facebook" : {
            "$ref" : "#/components/schemas/SocialIdentity"
          },
          "google" : {
            "$ref" : "#/components/schemas/SocialIdentity"
          },
          "linkedin" : {
            "$ref" : "#/components/schemas/SocialIdentity"
          },
          "twitter" : {
            "$ref" : "#/components/schemas/SocialIdentity"
          }
        },
        "description" : "Social media configuration"
      },
      "SocialIdentity" : {
        "type" : "object",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/OauthAppConfig"
          },
          "source" : {
            "type" : "string",
            "default" : "SocialIdentitySource.RUCKUS",
            "enum" : [ "RUCKUS", "CUSTOM" ]
          }
        },
        "description" : "Social media configuration"
      },
      "SoftGreProfile" : {
        "required" : [ "name", "primaryGatewayAddress" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "disassociateClientEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "gatewayFailbackEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "gatewaySecondaryToPrimaryTimer" : {
            "maximum" : 1440,
            "minimum" : 60,
            "type" : "integer",
            "format" : "int32",
            "default" : 60
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "keepAliveInterval" : {
            "maximum" : 180,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "keepAliveRetryTimes" : {
            "maximum" : 10,
            "minimum" : 2,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "mtuSize" : {
            "maximum" : 9018,
            "minimum" : 850,
            "type" : "integer",
            "description" : "The MTU size, it's required if the MTU type is manual.",
            "format" : "int32"
          },
          "mtuType" : {
            "type" : "string",
            "default" : "TunnelMtuTypeEnum.AUTO",
            "enum" : [ "MANUAL", "AUTO" ]
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "type" : "string"
          },
          "primaryGatewayAddress" : {
            "pattern" : "(^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9]?)\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)|(^(\\b((?=[A-Za-z0-9-]{1,63}\\.)(xn--)?[A-Za-z0-9]+(-[A-Za-z0-9]+)*\\.)+[A-Za-z]{2,63}\\b)$)",
            "type" : "string"
          },
          "secondaryGatewayAddress" : {
            "pattern" : "(^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9]?)\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)|(^(\\b((?=[A-Za-z0-9-]{1,63}\\.)(xn--)?[A-Za-z0-9]+(-[A-Za-z0-9]+)*\\.)+[A-Za-z]{2,63}\\b)$)",
            "type" : "string"
          }
        },
        "description" : "SoftGRE profile"
      },
      "SupplicantAuthenticationOptions" : {
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "default" : "ApLanPortSupplicantTypeEnum.DISABLED",
            "enum" : [ "DISABLED", "MAC_AUTH", "CUSTOM" ]
          },
          "username" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "description" : "Supplicant Authentication Options."
      },
      "SyslogServer" : {
        "required" : [ "server" ],
        "type" : "object",
        "properties" : {
          "port" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 514
          },
          "protocol" : {
            "type" : "string",
            "default" : "ProtocolEnum.UDP",
            "enum" : [ "TCP", "UDP" ]
          },
          "server" : {
            "pattern" : "(^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9]?)\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)|(^(([a-zA-Z]{1})|([a-zA-Z]{1}[a-zA-Z]{1})|([a-zA-Z]{1}[0-9]{1})|([0-9]{1}[a-zA-Z]{1})|([a-zA-Z0-9][a-zA-Z0-9-_]{1,61}[a-zA-Z0-9]))\\.([a-zA-Z]{2,6}|[a-zA-Z0-9-]{2,30}\\.[a-zA-Z]{2,3})$)",
            "type" : "string"
          }
        },
        "description" : "Syslog server"
      },
      "SyslogServerProfile" : {
        "required" : [ "name", "primary" ],
        "type" : "object",
        "properties" : {
          "facility" : {
            "type" : "string",
            "default" : "FacilityEnum.KEEP_ORIGINAL",
            "enum" : [ "KEEP_ORIGINAL", "LOCAL0", "LOCAL1", "LOCAL2", "LOCAL3", "LOCAL4", "LOCAL5", "LOCAL6", "LOCAL7" ]
          },
          "flowLevel" : {
            "type" : "string",
            "default" : "FlowLevelEnum.CLIENT_FLOW",
            "enum" : [ "GENERAL_LOGS", "CLIENT_FLOW", "ALL" ]
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "primary" : {
            "$ref" : "#/components/schemas/SyslogServer"
          },
          "priority" : {
            "type" : "string",
            "default" : "PriorityEnum.INFO",
            "enum" : [ "EMERGENCY", "ALERT", "CRITICAL", "ERROR", "WARNING", "NOTICE", "INFO", "ALL" ]
          },
          "secondary" : {
            "$ref" : "#/components/schemas/SyslogServer"
          },
          "venues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdAndName"
            }
          }
        },
        "description" : "Syslog Server Profile Configuration"
      },
      "SyslogServerProfileV1_1" : {
        "required" : [ "name", "primary" ],
        "type" : "object",
        "properties" : {
          "facility" : {
            "type" : "string",
            "default" : "FacilityEnum.KEEP_ORIGINAL",
            "enum" : [ "KEEP_ORIGINAL", "LOCAL0", "LOCAL1", "LOCAL2", "LOCAL3", "LOCAL4", "LOCAL5", "LOCAL6", "LOCAL7" ]
          },
          "flowLevel" : {
            "type" : "string",
            "default" : "FlowLevelEnum.CLIENT_FLOW",
            "enum" : [ "GENERAL_LOGS", "CLIENT_FLOW", "ALL" ]
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "primary" : {
            "$ref" : "#/components/schemas/SyslogServer"
          },
          "priority" : {
            "type" : "string",
            "default" : "PriorityEnum.INFO",
            "enum" : [ "EMERGENCY", "ALERT", "CRITICAL", "ERROR", "WARNING", "NOTICE", "INFO", "ALL" ]
          },
          "secondary" : {
            "$ref" : "#/components/schemas/SyslogServer"
          }
        },
        "description" : "Syslog Server Profile Configuration"
      },
      "TrustedCAChain" : {
        "required" : [ "rootCert" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "info" : {
            "type" : "string"
          },
          "interCerts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/X509Certificate"
            }
          },
          "rootCert" : {
            "$ref" : "#/components/schemas/X509Certificate"
          }
        },
        "description" : "Trusted certificate authority chain"
      },
      "TunnelServiceProfile" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "ageTimeMinutes" : {
            "maximum" : 10080,
            "minimum" : 5,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "forceFragmentation" : {
            "type" : "boolean",
            "default" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "keepAliveInterval" : {
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The unit is seconds.",
            "format" : "int32",
            "default" : 2
          },
          "keepAliveRetry" : {
            "maximum" : 10,
            "minimum" : 3,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "mtuRequestRetry" : {
            "maximum" : 64,
            "minimum" : 3,
            "type" : "integer",
            "description" : "This setting is only effective in path maximum transmission unit auto mode.",
            "format" : "int32"
          },
          "mtuRequestTimeout" : {
            "maximum" : 10000,
            "minimum" : 10,
            "type" : "integer",
            "description" : "The unit is milliseconds. This setting is only effective in path maximum transmission unit auto mode.",
            "format" : "int32"
          },
          "mtuSize" : {
            "maximum" : 1450,
            "minimum" : 576,
            "type" : "integer",
            "format" : "int32"
          },
          "mtuType" : {
            "type" : "string",
            "default" : "TunnelMtuTypeEnum.AUTO",
            "enum" : [ "MANUAL", "AUTO" ]
          },
          "name" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          },
          "tag" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "description" : "Network segment type.",
            "default" : "TunnelNetworkSegmentTypeEnum.VXLAN",
            "enum" : [ "VXLAN", "VLAN_VXLAN" ]
          }
        },
        "description" : "Tunnel service profile"
      },
      "Venue" : {
        "type" : "object",
        "properties" : {
          "apPassword" : {
            "type" : "string"
          },
          "apSnmpAgent" : {
            "$ref" : "#/components/schemas/VenueSnmpAgent"
          },
          "bandBalancing" : {
            "$ref" : "#/components/schemas/BandBalancing"
          },
          "bssColoring" : {
            "$ref" : "#/components/schemas/BssColoring"
          },
          "clientAdmissionControl" : {
            "$ref" : "#/components/schemas/VenueClientAdmissionControl"
          },
          "countryCode" : {
            "type" : "string"
          },
          "denialOfServiceProtection" : {
            "$ref" : "#/components/schemas/DenialOfServiceProtection"
          },
          "dhcpServiceSetting" : {
            "$ref" : "#/components/schemas/VenueDhcpServiceSetting"
          },
          "directedMulticast" : {
            "$ref" : "#/components/schemas/VenueDirectedMulticast"
          },
          "enableClientIsolationAllowlist" : {
            "type" : "boolean",
            "default" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "loadBalancing" : {
            "$ref" : "#/components/schemas/VenueLoadBalancing"
          },
          "lteBandLockChannels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LteBandLockChannel"
            }
          },
          "mesh" : {
            "$ref" : "#/components/schemas/Mesh"
          },
          "radioCustomization" : {
            "$ref" : "#/components/schemas/VenueRadioCustomization"
          },
          "rogueAp" : {
            "$ref" : "#/components/schemas/VenueRogueAp"
          },
          "syslog" : {
            "$ref" : "#/components/schemas/VenueSyslog"
          },
          "tenantId" : {
            "type" : "string",
            "readOnly" : true
          },
          "wifiFirmwareVersion" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Venue"
      },
      "VenueApAvailableLteBands" : {
        "required" : [ "region" ],
        "type" : "object",
        "properties" : {
          "band3G" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "band4G" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "countryCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "region" : {
            "type" : "string",
            "enum" : [ "DOMAIN_1", "DOMAIN_2", "USA_CANADA", "JAPAN" ]
          }
        },
        "description" : "LTE band lock channel settings."
      },
      "VenueApBssColoringSettings" : {
        "type" : "object",
        "properties" : {
          "bssColoringEnabled" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "BSS Coloring settings"
      },
      "VenueApCellularSettings" : {
        "required" : [ "primaryWanRecoveryTimer", "wanConnection" ],
        "type" : "object",
        "properties" : {
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "primarySim" : {
            "$ref" : "#/components/schemas/SimSettings"
          },
          "primaryWanRecoveryTimer" : {
            "maximum" : 300,
            "minimum" : 10,
            "type" : "integer",
            "format" : "int32"
          },
          "secondarySim" : {
            "$ref" : "#/components/schemas/SimSettings"
          },
          "wanConnection" : {
            "type" : "string",
            "enum" : [ "ETH_WITH_CELLULAR_FAILOVER", "CELLULAR_WITH_ETH_FAILOVER", "ETH", "CELLULAR" ]
          }
        },
        "description" : "Venue cellular settings"
      },
      "VenueApClientAdmissionControlSettings" : {
        "type" : "object",
        "properties" : {
          "enable24G" : {
            "type" : "boolean",
            "default" : false
          },
          "enable50G" : {
            "type" : "boolean",
            "default" : false
          },
          "maxRadioLoad24G" : {
            "maximum" : 100,
            "minimum" : 50,
            "type" : "integer",
            "format" : "int32",
            "default" : 75
          },
          "maxRadioLoad50G" : {
            "maximum" : 100,
            "minimum" : 50,
            "type" : "integer",
            "format" : "int32",
            "default" : 75
          },
          "minClientCount24G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "minClientCount50G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "minClientThroughput24G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "minClientThroughput50G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        },
        "description" : "Venue Client Admission Control Settings"
      },
      "VenueApDirectedMulticastSettings" : {
        "type" : "object",
        "properties" : {
          "networkEnabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wiredEnabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wirelessEnabled" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "Directed Multicast Setting."
      },
      "VenueApDosProtectionSettings" : {
        "type" : "object",
        "properties" : {
          "blockingPeriod" : {
            "maximum" : 600,
            "minimum" : 30,
            "type" : "integer",
            "format" : "int32",
            "default" : 60
          },
          "checkPeriod" : {
            "maximum" : 600,
            "minimum" : 30,
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          },
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "failThreshold" : {
            "maximum" : 25,
            "minimum" : 2,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          }
        },
        "description" : "This feature hinders a client (end-user device) from originating a DoS attack on an authentication server."
      },
      "VenueApGroup" : {
        "type" : "object",
        "properties" : {
          "apSerialNumbers" : {
            "type" : "array",
            "description" : "List of AP serial-numbers which are associated to the AP group.",
            "items" : {
              "type" : "string",
              "description" : "List of AP serial-numbers which are associated to the AP group."
            }
          },
          "description" : {
            "maxLength" : 180,
            "minLength" : 2,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "isDefault" : {
            "type" : "boolean",
            "description" : "True if the AP group is the default instance for the associated venue.",
            "readOnly" : true,
            "default" : false
          },
          "name" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,64}$)^(\\S.*\\S)$",
            "type" : "string",
            "description" : "The name of the AP group. Is required during creation and modification but not for the default AP group."
          }
        },
        "description" : "AP group per venue containing an optional list of AP serial numbers for association."
      },
      "VenueApIotSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "mqttBrokerAddress" : {
            "maxLength" : 255,
            "minLength" : 0,
            "pattern" : "^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])$|^(([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,})$",
            "type" : "string",
            "description" : "The MQTT IPv4 address/FQDN of the VRIoT controller."
          }
        },
        "description" : "AP IoT Settings"
      },
      "VenueApLoadBalancingSettings" : {
        "type" : "object",
        "properties" : {
          "bandBalancingClientPercent24G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          },
          "bandBalancingEnabled" : {
            "type" : "boolean",
            "default" : true
          },
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "loadBalancingMethod" : {
            "type" : "string",
            "default" : "LoadBalancingMethodEnum.BASED_ON_CLIENT_COUNT",
            "enum" : [ "BASED_ON_CLIENT_COUNT", "BASED_ON_CAPACITY" ]
          },
          "steeringMode" : {
            "type" : "string",
            "default" : "SteeringModeEnum.BASIC",
            "enum" : [ "BASIC", "PROACTIVE", "STRICT" ]
          },
          "stickyClientNbrApPercentageThreshold" : {
            "maximum" : 40,
            "minimum" : 10,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "stickyClientSnrThreshold" : {
            "maximum" : 30,
            "minimum" : 5,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "stickyClientSteeringEnabled" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "Load Balancing Setting."
      },
      "VenueApManagementTrafficVlanSettings" : {
        "type" : "object",
        "properties" : {
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "AP management VLAN settings of venue"
      },
      "VenueApMeshSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "passphrase" : {
            "pattern" : "(^[!-~]([ -~]){6,61}[!-~]$)|(^([0-9a-fA-F]){64}$)",
            "type" : "string"
          },
          "radioType" : {
            "type" : "string",
            "default" : "MeshRadioTypeEnum._5_GHz",
            "enum" : [ "2.4-GHz", "5-GHz" ]
          },
          "ssid" : {
            "pattern" : "(^(?!.*(\\$\\(|`))(([!-~]([ -~]){0,30}[!-~]$)|(^[!-~]$)))",
            "type" : "string"
          }
        },
        "description" : "Venue mesh"
      },
      "VenueApMeshSettingsV1_1" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "passphrase" : {
            "pattern" : "(^[!-~]([ -~]){6,61}[!-~]$)|(^([0-9a-fA-F]){64}$)",
            "type" : "string"
          },
          "radioType" : {
            "type" : "string",
            "default" : "MeshRadioTypeEnumV1_1._5_6_GHz",
            "enum" : [ "2.4-GHz", "5-GHz", "6-GHz", "5-6-GHz" ]
          },
          "ssid" : {
            "pattern" : "(^(?!.*(\\$\\(|`))(([!-~]([ -~]){0,30}[!-~]$)|(^[!-~]$)))",
            "type" : "string"
          }
        },
        "description" : "Venue mesh"
      },
      "VenueApModelAntennaTypeSettings" : {
        "type" : "object",
        "properties" : {
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "description" : "Venue AP-model specific attribute"
      },
      "VenueApModelBandModeSettings" : {
        "type" : "object",
        "properties" : {
          "bandMode" : {
            "type" : "string",
            "enum" : [ "DUAL", "TRIPLE" ]
          },
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "description" : "Venue AP-model specific attribute for band mode settings."
      },
      "VenueApModelCapabilities" : {
        "type" : "object",
        "properties" : {
          "apModels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CapabilitiesApModel"
            }
          }
        },
        "description" : "Wi-Fi capabilities model"
      },
      "VenueApModelCellular" : {
        "required" : [ "primaryWanRecoveryTimer", "wanConnection" ],
        "type" : "object",
        "properties" : {
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "primarySim" : {
            "$ref" : "#/components/schemas/SimSettings"
          },
          "primaryWanRecoveryTimer" : {
            "maximum" : 300,
            "minimum" : 10,
            "type" : "integer",
            "format" : "int32"
          },
          "secondarySim" : {
            "$ref" : "#/components/schemas/SimSettings"
          },
          "wanConnection" : {
            "type" : "string",
            "enum" : [ "ETH_WITH_CELLULAR_FAILOVER", "CELLULAR_WITH_ETH_FAILOVER", "ETH", "CELLULAR" ]
          }
        },
        "description" : "Venue cellular settings"
      },
      "VenueApModelExternalAntennaSettings" : {
        "type" : "object",
        "properties" : {
          "enable24G" : {
            "type" : "boolean",
            "default" : false
          },
          "enable50G" : {
            "type" : "boolean",
            "default" : false
          },
          "gain24G" : {
            "maximum" : 60,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "gain50G" : {
            "maximum" : 60,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "description" : "Venue AP-model specific attribute"
      },
      "VenueApModelLanPortSettings" : {
        "type" : "object",
        "properties" : {
          "lanPorts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VenueLanPort"
            }
          },
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "poeMode" : {
            "type" : "string",
            "enum" : [ "Auto", "802.3af", "802.3at", "802.3bt-Class_5", "802.3bt-Class_6", "802.3bt-Class_7", "802.3bt-Class_8" ]
          },
          "poeOut" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "Venue AP-model specific attribute"
      },
      "VenueApModelLanPortSettingsV1" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "Venue LAN-port"
      },
      "VenueApModelLanPortSpecificSettings" : {
        "type" : "object",
        "properties" : {
          "poeMode" : {
            "type" : "string",
            "enum" : [ "Auto", "802.3af", "802.3at", "802.3bt-Class_5", "802.3bt-Class_6", "802.3bt-Class_7", "802.3bt-Class_8" ]
          },
          "poeOut" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "Venue AP-model specific attribute"
      },
      "VenueApModelLedSettings" : {
        "type" : "object",
        "properties" : {
          "ledEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "description" : "Venue AP-model specific attribute"
      },
      "VenueApModelUsbPortSettings" : {
        "type" : "object",
        "properties" : {
          "model" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "description" : "Venue AP-model specific attribute"
      },
      "VenueApMulticastDnsFencingSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MulticastDnsFencingRule"
            }
          }
        },
        "description" : "Venue Multicast DNS fencing"
      },
      "VenueApRadio24GHzSettings" : {
        "type" : "object",
        "properties" : {
          "allowedChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ]
            }
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth24GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz" ]
          },
          "method" : {
            "type" : "string",
            "default" : "ScanMethodEnum.CHANNELFLY",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "scanInterval" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPowerEnum.MAX",
            "enum" : [ "Auto", "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          }
        },
        "description" : "Customized settings for 2.4-GHz radio."
      },
      "VenueApRadio5GHzSettings" : {
        "type" : "object",
        "properties" : {
          "allowedIndoorChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "allowedOutdoorChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth5GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz", "80MHz", "160MHz" ]
          },
          "combineChannels" : {
            "type" : "boolean",
            "default" : false
          },
          "method" : {
            "type" : "string",
            "default" : "ScanMethodEnum.CHANNELFLY",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "scanInterval" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPowerEnum.MAX",
            "enum" : [ "Auto", "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          }
        },
        "description" : "Customized settings for 5-GHz radio."
      },
      "VenueApRadio6GHzSettings" : {
        "type" : "object",
        "properties" : {
          "allowedChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "bssMinRate6G" : {
            "type" : "string",
            "default" : "BssMinRate6GEnum.HE_MCS_0",
            "enum" : [ "HE_MCS_0", "HE_MCS_1", "HE_MCS_2", "HE_MCS_3" ]
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth6GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz", "80MHz", "160MHz" ]
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "method" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "ScanMethodEnum.CHANNELFLY",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "mgmtTxRate6G" : {
            "type" : "string",
            "default" : "MgmtTxRate6GEnum._6",
            "enum" : [ "6", "9", "12", "18", "24" ]
          },
          "multicastDownlinkRateLimiting" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps) on 6-GHz radio. The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps) on 6-GHz radio.",
            "format" : "int32",
            "default" : 1
          },
          "scanInterval" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPower6GEnum.MAX",
            "enum" : [ "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          }
        },
        "description" : "Customized settings for 6-GHz radio."
      },
      "VenueApRadio6GHzSettingsV1_1" : {
        "type" : "object",
        "properties" : {
          "allowedChannels" : {
            "type" : "array",
            "deprecated" : true,
            "items" : {
              "type" : "string",
              "deprecated" : true,
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "allowedIndoorChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "allowedOutdoorChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "1", "5", "9", "13", "17", "21", "25", "29", "33", "37", "41", "45", "49", "53", "57", "61", "65", "69", "73", "77", "81", "85", "89", "93", "97", "101", "105", "109", "113", "117", "121", "125", "129", "133", "137", "141", "145", "149", "153", "157", "161", "165", "169", "173", "177", "181", "185", "189", "193", "197", "201", "205", "209", "213", "217", "221", "225", "229", "233" ]
            }
          },
          "bssMinRate6G" : {
            "type" : "string",
            "default" : "BssMinRate6GEnum.HE_MCS_0",
            "enum" : [ "HE_MCS_0", "HE_MCS_1", "HE_MCS_2", "HE_MCS_3" ]
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth6GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz", "80MHz", "160MHz" ]
          },
          "enableMulticastDownlinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast downlink traffic on 6-GHz radio.",
            "default" : false
          },
          "enableMulticastUplinkRateLimiting" : {
            "type" : "boolean",
            "description" : "Enable rate limiting of multicast uplink traffic on 6-GHz radio.",
            "default" : false
          },
          "method" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "ScanMethodEnum.CHANNELFLY",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "mgmtTxRate6G" : {
            "type" : "string",
            "default" : "MgmtTxRate6GEnum._6",
            "enum" : [ "6", "9", "12", "18", "24" ]
          },
          "multicastDownlinkRateLimiting" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast downlink traffic (Mbps) on 6-GHz radio. The value should be not greater than 50% of BSS min rate.",
            "format" : "int32",
            "default" : 1
          },
          "multicastUplinkRateLimiting" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Rate limiting of multicast uplink traffic (Mbps) on 6-GHz radio.",
            "format" : "int32",
            "default" : 1
          },
          "scanInterval" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPower6GEnum.MAX",
            "enum" : [ "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          }
        },
        "description" : "Customized settings for 6-GHz radio."
      },
      "VenueApRadioDual5GHzSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "inheritParamsLower5G" : {
            "type" : "boolean",
            "default" : true
          },
          "inheritParamsUpper5G" : {
            "type" : "boolean",
            "default" : true
          },
          "radioParamsLower5G" : {
            "$ref" : "#/components/schemas/VenueApRadioLower5GHzSettings"
          },
          "radioParamsUpper5G" : {
            "$ref" : "#/components/schemas/VenueApRadioUpper5GHzSettings"
          }
        },
        "description" : "Customized settings for lower/upper 5-GHz radios."
      },
      "VenueApRadioLower5GHzSettings" : {
        "type" : "object",
        "properties" : {
          "allowedIndoorChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "allowedOutdoorChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth5GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz", "80MHz", "160MHz" ]
          },
          "method" : {
            "type" : "string",
            "default" : "ScanMethodEnum.CHANNELFLY",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "scanInterval" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPowerEnum.MAX",
            "enum" : [ "Auto", "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          }
        },
        "description" : "Radio customization for 5GHz."
      },
      "VenueApRadioSettings" : {
        "type" : "object",
        "properties" : {
          "radioParams24G" : {
            "$ref" : "#/components/schemas/VenueApRadio24GHzSettings"
          },
          "radioParams50G" : {
            "$ref" : "#/components/schemas/VenueApRadio5GHzSettings"
          },
          "radioParams6G" : {
            "$ref" : "#/components/schemas/VenueApRadio6GHzSettings"
          },
          "radioParamsDual5G" : {
            "$ref" : "#/components/schemas/VenueApRadioDual5GHzSettings"
          }
        },
        "description" : "Venue radio customization"
      },
      "VenueApRadioSettingsV1_1" : {
        "type" : "object",
        "properties" : {
          "radioParams24G" : {
            "$ref" : "#/components/schemas/VenueApRadio24GHzSettings"
          },
          "radioParams50G" : {
            "$ref" : "#/components/schemas/VenueApRadio5GHzSettings"
          },
          "radioParams6G" : {
            "$ref" : "#/components/schemas/VenueApRadio6GHzSettingsV1_1"
          },
          "radioParamsDual5G" : {
            "$ref" : "#/components/schemas/VenueApRadioDual5GHzSettings"
          }
        },
        "description" : "Venue radio customization"
      },
      "VenueApRadioUpper5GHzSettings" : {
        "type" : "object",
        "properties" : {
          "allowedIndoorChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "allowedOutdoorChannels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "36", "40", "44", "48", "52", "56", "60", "64", "100", "104", "108", "112", "116", "120", "124", "128", "132", "136", "140", "144", "149", "153", "157", "161", "163", "165", "167", "169", "173" ]
            }
          },
          "changeInterval" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 33
          },
          "channelBandwidth" : {
            "type" : "string",
            "default" : "ChannelBandwidth5GEnum.AUTO",
            "enum" : [ "AUTO", "20MHz", "40MHz", "80MHz", "160MHz" ]
          },
          "method" : {
            "type" : "string",
            "default" : "ScanMethodEnum.CHANNELFLY",
            "enum" : [ "MANUAL", "BACKGROUND_SCANNING", "CHANNELFLY" ]
          },
          "scanInterval" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "txPower" : {
            "type" : "string",
            "default" : "TxPowerEnum.MAX",
            "enum" : [ "Auto", "MAX", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9", "-10", "MIN" ]
          }
        },
        "description" : "Radio customization for 5GHz."
      },
      "VenueApRadiusOptionSettings" : {
        "type" : "object",
        "properties" : {
          "calledStationIdType" : {
            "type" : "string",
            "default" : "CalledStationIdTypeEnum.BSSID",
            "enum" : [ "BSSID", "AP_MAC", "NONE", "AP_GROUP" ]
          },
          "nasIdDelimiter" : {
            "type" : "string",
            "default" : "NasIdDelimiterEnum.DASH",
            "enum" : [ "DASH", "COLON" ]
          },
          "nasIdType" : {
            "type" : "string",
            "default" : "NasIdTypeEnum.BSSID",
            "enum" : [ "USER", "BSSID", "AP_MAC", "VENUE_NAME" ]
          },
          "nasMaxRetry" : {
            "maximum" : 10,
            "minimum" : 2,
            "type" : "integer",
            "format" : "int32",
            "default" : 2
          },
          "nasReconnectPrimaryMin" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "nasRequestTimeoutSec" : {
            "maximum" : 20,
            "minimum" : 2,
            "type" : "integer",
            "format" : "int32",
            "default" : 3
          },
          "overrideEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "singleSessionIdAccounting" : {
            "type" : "boolean",
            "default" : false
          },
          "userDefinedNasId" : {
            "maxLength" : 64,
            "minLength" : 2,
            "pattern" : "^((?!`|\\$\\()[ -~]){2,64}$",
            "type" : "string"
          }
        },
        "description" : "Venue RADIUS custom settings"
      },
      "VenueApRebootTimeoutSettings" : {
        "type" : "object",
        "properties" : {
          "gatewayLossTimeout" : {
            "maximum" : 86400,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The timeout in seconds for rebooting AP if it cannot reach default gateway, 0 never reboot.",
            "format" : "int32",
            "default" : 1800
          },
          "serverLossTimeout" : {
            "maximum" : 86400,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The timeout in seconds for rebooting AP if it cannot reach the controller, 0 never reboot.",
            "format" : "int32",
            "default" : 7200
          }
        },
        "description" : "AP Reboot Timeout Settings"
      },
      "VenueApSmartMonitorSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "interval" : {
            "maximum" : 60,
            "minimum" : 5,
            "type" : "integer",
            "description" : "The interval how often smart monitor checks uplink status, measured by seconds.",
            "format" : "int32",
            "default" : 10
          },
          "threshold" : {
            "maximum" : 10,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The retry threshold for turning off the WLANs.",
            "format" : "int32",
            "default" : 3
          }
        },
        "description" : "AP Smart Monitor Settings"
      },
      "VenueApSnmpAgentProfileSettings" : {
        "type" : "object",
        "properties" : {
          "useVenueSettings" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "AP SNMP agent profile setting."
      },
      "VenueApTlsKeyEnhancedModeSettings" : {
        "type" : "object",
        "properties" : {
          "tlsKeyEnhancedModeEnabled" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "TLS key enhanced mode settings"
      },
      "VenueClientAdmissionControl" : {
        "type" : "object",
        "properties" : {
          "enable24G" : {
            "type" : "boolean",
            "default" : false
          },
          "enable50G" : {
            "type" : "boolean",
            "default" : false
          },
          "maxRadioLoad24G" : {
            "maximum" : 100,
            "minimum" : 50,
            "type" : "integer",
            "format" : "int32",
            "default" : 75
          },
          "maxRadioLoad50G" : {
            "maximum" : 100,
            "minimum" : 50,
            "type" : "integer",
            "format" : "int32",
            "default" : 75
          },
          "minClientCount24G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "minClientCount50G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "minClientThroughput24G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "minClientThroughput50G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        },
        "description" : "Venue Client Admission Control Settings"
      },
      "VenueClientIsolationAllowlistData" : {
        "type" : "object",
        "properties" : {
          "clientCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "clientMacs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "networkCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "networkNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Client isolation allowlist usage of venue."
      },
      "VenueClientIsolationAllowlistQueryRequest" : {
        "type" : "object",
        "properties" : {
          "page" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          },
          "sortField" : {
            "type" : "string",
            "description" : "Support name only"
          },
          "sortOrder" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        },
        "description" : "Venue Client Isolation Allowlist Query Request"
      },
      "VenueClientIsolationAllowlistQueryResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VenueClientIsolationAllowlistData"
            }
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Venue client isolation allowlist response."
      },
      "VenueDhcpConfigServiceProfileSetting" : {
        "type" : "object",
        "properties" : {
          "dhcpServiceAps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DhcpServiceAp"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "serviceProfileId" : {
            "type" : "string"
          },
          "wanPortSelectionMode" : {
            "type" : "string",
            "default" : "DhcpWanPortSelectionModeEnum.Dynamic",
            "enum" : [ "Dynamic", "Manual" ]
          }
        },
        "description" : "Venue"
      },
      "VenueDhcpConfigServiceProfileSettings" : {
        "type" : "object",
        "properties" : {
          "activeDhcpPoolNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "dhcpServiceAps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DhcpServiceAp"
            }
          },
          "wanPortSelectionMode" : {
            "type" : "string",
            "default" : "DhcpWanPortSelectionModeEnum.Dynamic",
            "enum" : [ "Dynamic", "Manual" ]
          }
        },
        "description" : "Venue"
      },
      "VenueDhcpServiceSetting" : {
        "type" : "object",
        "properties" : {
          "dhcpServiceAps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DhcpServiceAp"
            }
          },
          "dhcpServiceProfileIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "enableClientIsolationAllowlist" : {
            "type" : "boolean",
            "default" : false
          },
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "mode" : {
            "type" : "string",
            "default" : "DhcpModeEnum.EnableOnEachAPs",
            "enum" : [ "EnableOnEachAPs", "EnableOnMultipleAPs", "EnableOnHierarchicalAPs" ]
          },
          "wanPortSelectionMode" : {
            "type" : "string",
            "default" : "DhcpWanPortSelectionModeEnum.Dynamic",
            "enum" : [ "Dynamic", "Manual" ]
          }
        },
        "description" : "Venue"
      },
      "VenueDirectedMulticast" : {
        "type" : "object",
        "properties" : {
          "networkEnabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wiredEnabled" : {
            "type" : "boolean",
            "default" : true
          },
          "wirelessEnabled" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "Directed Multicast Setting."
      },
      "VenueLanPort" : {
        "required" : [ "type", "untagId", "vlanMembers" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : true
          },
          "portId" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ACCESS", "GENERAL", "TRUNK" ]
          },
          "untagId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "vlanMembers" : {
            "pattern" : "^(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4])(?: *- *(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4]))?(?: *, *(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4])(?: *- *(?:[1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-3][0-9]{3}|40[0-8][0-9]|409[0-4]))?)*$",
            "type" : "string"
          }
        },
        "description" : "Venue LAN-port"
      },
      "VenueLoadBalancing" : {
        "type" : "object",
        "properties" : {
          "bandBalancingClientPercent24G" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          },
          "bandBalancingEnabled" : {
            "type" : "boolean",
            "default" : true
          },
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "loadBalancingMethod" : {
            "type" : "string",
            "default" : "LoadBalancingMethodEnum.BASED_ON_CLIENT_COUNT",
            "enum" : [ "BASED_ON_CLIENT_COUNT", "BASED_ON_CAPACITY" ]
          },
          "steeringMode" : {
            "type" : "string",
            "default" : "SteeringModeEnum.BASIC",
            "enum" : [ "BASIC", "PROACTIVE", "STRICT" ]
          },
          "stickyClientNbrApPercentageThreshold" : {
            "maximum" : 40,
            "minimum" : 10,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "stickyClientSnrThreshold" : {
            "maximum" : 30,
            "minimum" : 5,
            "type" : "integer",
            "format" : "int32",
            "default" : 15
          },
          "stickyClientSteeringEnabled" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "Load Balancing Setting."
      },
      "VenueMdnsFencing" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "services" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MdnsFencing"
            }
          }
        },
        "description" : "Venue MDNS fencing"
      },
      "VenueRadioCustomization" : {
        "type" : "object",
        "properties" : {
          "radioParams24G" : {
            "$ref" : "#/components/schemas/RadioParams24G"
          },
          "radioParams50G" : {
            "$ref" : "#/components/schemas/RadioParams50G"
          },
          "radioParams6G" : {
            "$ref" : "#/components/schemas/RadioParams6G"
          },
          "radioParamsDual5G" : {
            "$ref" : "#/components/schemas/RadioParamsDual5G"
          }
        },
        "description" : "Venue radio customization"
      },
      "VenueRadiusOptions" : {
        "type" : "object",
        "properties" : {
          "calledStationIdType" : {
            "type" : "string",
            "default" : "CalledStationIdTypeEnum.BSSID",
            "enum" : [ "BSSID", "AP_MAC", "NONE", "AP_GROUP" ]
          },
          "nasIdDelimiter" : {
            "type" : "string",
            "default" : "NasIdDelimiterEnum.DASH",
            "enum" : [ "DASH", "COLON" ]
          },
          "nasIdType" : {
            "type" : "string",
            "default" : "NasIdTypeEnum.BSSID",
            "enum" : [ "USER", "BSSID", "AP_MAC", "VENUE_NAME" ]
          },
          "nasMaxRetry" : {
            "maximum" : 10,
            "minimum" : 2,
            "type" : "integer",
            "format" : "int32",
            "default" : 2
          },
          "nasReconnectPrimaryMin" : {
            "maximum" : 300,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          },
          "nasRequestTimeoutSec" : {
            "maximum" : 20,
            "minimum" : 2,
            "type" : "integer",
            "format" : "int32",
            "default" : 3
          },
          "overrideEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "singleSessionIdAccounting" : {
            "type" : "boolean",
            "default" : false
          },
          "userDefinedNasId" : {
            "maxLength" : 64,
            "minLength" : 2,
            "pattern" : "^((?!`|\\$\\()[ -~]){2,64}$",
            "type" : "string"
          }
        },
        "description" : "Venue RADIUS custom settings"
      },
      "VenueRegulatoryChannels" : {
        "type" : "object",
        "properties" : {
          "2.4GChannels" : {
            "$ref" : "#/components/schemas/Channels24G"
          },
          "5GChannels" : {
            "$ref" : "#/components/schemas/Channels5G"
          },
          "5GLowerChannels" : {
            "$ref" : "#/components/schemas/Channels5G"
          },
          "5GUpperChannels" : {
            "$ref" : "#/components/schemas/Channels5G"
          },
          "6GChannels" : {
            "$ref" : "#/components/schemas/Channels6G"
          }
        },
        "description" : "Venue regulatory channels"
      },
      "VenueRogueAp" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "reportThreshold" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "roguePolicyId" : {
            "type" : "string"
          }
        },
        "description" : "Rogue Ap configuration for venue."
      },
      "VenueRoguePolicySettings" : {
        "type" : "object",
        "properties" : {
          "reportThreshold" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        },
        "description" : "Rogue Ap configuration for venue."
      },
      "VenueSnmpAgent" : {
        "type" : "object",
        "properties" : {
          "apSnmpAgentProfileId" : {
            "type" : "string"
          },
          "enableApSnmp" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "AP SNMP agent setting."
      },
      "VenueSyslog" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "facility" : {
            "type" : "string",
            "default" : "FacilityEnum.KEEP_ORIGINAL",
            "enum" : [ "KEEP_ORIGINAL", "LOCAL0", "LOCAL1", "LOCAL2", "LOCAL3", "LOCAL4", "LOCAL5", "LOCAL6", "LOCAL7" ]
          },
          "flowLevel" : {
            "type" : "string",
            "default" : "FlowLevelEnum.CLIENT_FLOW",
            "enum" : [ "GENERAL_LOGS", "CLIENT_FLOW", "ALL" ]
          },
          "port" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 514
          },
          "priority" : {
            "type" : "string",
            "default" : "PriorityEnum.INFO",
            "enum" : [ "EMERGENCY", "ALERT", "CRITICAL", "ERROR", "WARNING", "NOTICE", "INFO", "ALL" ]
          },
          "protocol" : {
            "type" : "string",
            "default" : "ProtocolEnum.UDP",
            "enum" : [ "TCP", "UDP" ]
          },
          "secondaryPort" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 514
          },
          "secondaryProtocol" : {
            "type" : "string",
            "default" : "ProtocolEnum.TCP",
            "enum" : [ "TCP", "UDP" ]
          },
          "secondaryServer" : {
            "pattern" : "(^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9]?)\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$)|(^(([a-zA-Z]{1})|([a-zA-Z]{1}[a-zA-Z]{1})|([a-zA-Z]{1}[0-9]{1})|([0-9]{1}[a-zA-Z]{1})|([a-zA-Z0-9][a-zA-Z0-9-_]{1,61}[a-zA-Z0-9]))\\.([a-zA-Z]{2,6}|[a-zA-Z0-9-]{2,30}\\.[a-zA-Z]{2,3})$)",
            "type" : "string"
          },
          "server" : {
            "pattern" : "(^((22[0-3]|2[0-1][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9]?)\\.)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){2}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$)|(^(([a-zA-Z]{1})|([a-zA-Z]{1}[a-zA-Z]{1})|([a-zA-Z]{1}[0-9]{1})|([0-9]{1}[a-zA-Z]{1})|([a-zA-Z0-9][a-zA-Z0-9-_]{1,61}[a-zA-Z0-9]))\\.([a-zA-Z]{2,6}|[a-zA-Z0-9-]{2,30}\\.[a-zA-Z]{2,3})$)",
            "type" : "string"
          }
        },
        "description" : "Venue syslog"
      },
      "VenueSyslogServerProfile" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "default" : false
          },
          "serviceProfileId" : {
            "type" : "string"
          }
        },
        "description" : "Model to display SyslogServerProfile by Venue."
      },
      "VenueWifiNetwork" : {
        "type" : "object",
        "properties" : {
          "isAllApGroups" : {
            "type" : "boolean",
            "default" : true
          }
        },
        "description" : "Venue Wi-Fi network settings."
      },
      "VenueWifiNetworkApGroupSettings" : {
        "type" : "object",
        "properties" : {
          "radioTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "2.4-GHz", "5-GHz", "6-GHz" ]
            }
          },
          "vlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Network to AP-Group activation"
      },
      "VenueWifiNetworkSettings" : {
        "type" : "object",
        "properties" : {
          "allApGroupsRadioTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "2.4-GHz", "5-GHz", "6-GHz" ]
            }
          },
          "allApGroupsVlanId" : {
            "maximum" : 4094,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "isAllApGroups" : {
            "type" : "boolean",
            "default" : true
          },
          "scheduler" : {
            "$ref" : "#/components/schemas/NetworkVenueScheduler"
          }
        },
        "description" : "Venue Wi-Fi network settings."
      },
      "VlanPool" : {
        "required" : [ "name", "vlanMembers" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "tenantId" : {
            "type" : "string",
            "readOnly" : true
          },
          "vlanMembers" : {
            "maxItems" : 16,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "VLAN pool"
      },
      "VlanPoolApGroupData" : {
        "type" : "object",
        "properties" : {
          "apCount" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "apGroupId" : {
            "type" : "string"
          },
          "apGroupName" : {
            "type" : "string"
          }
        },
        "description" : "Ap Group usage of VLAN Pool."
      },
      "VlanPoolOperationResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/VlanPool"
          }
        }
      },
      "VlanPoolProfile" : {
        "required" : [ "name", "vlanMembers" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "vlanMembers" : {
            "maxItems" : 16,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "VLAN pool"
      },
      "VlanPoolQueryData" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "networksCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "networksNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "VLAN pool query data"
      },
      "VlanPoolQueryResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VlanPoolQueryData"
            }
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "VLAN pool query response"
      },
      "VlanPoolVenueData" : {
        "type" : "object",
        "properties" : {
          "apGroupData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VlanPoolApGroupData"
            }
          },
          "venueApCount" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          },
          "venueId" : {
            "type" : "string"
          },
          "venueName" : {
            "type" : "string"
          }
        },
        "description" : "Venue usage of VLAN Pool."
      },
      "VlanPoolVenueDataQueryResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VlanPoolVenueData"
            }
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "VLAN pool Venue response."
      },
      "WifiAvailableChannels" : {
        "type" : "object",
        "properties" : {
          "2.4GChannels" : {
            "$ref" : "#/components/schemas/Channels24G"
          },
          "5GChannels" : {
            "$ref" : "#/components/schemas/Channels5G"
          },
          "5GLowerChannels" : {
            "$ref" : "#/components/schemas/Channels5G"
          },
          "5GUpperChannels" : {
            "$ref" : "#/components/schemas/Channels5G"
          },
          "6GChannels" : {
            "$ref" : "#/components/schemas/Channels6G"
          }
        },
        "description" : "Venue regulatory channels"
      },
      "WifiAvailableChannelsV1_1" : {
        "type" : "object",
        "properties" : {
          "2.4GChannels" : {
            "$ref" : "#/components/schemas/Channels24G"
          },
          "5GChannels" : {
            "$ref" : "#/components/schemas/Channels5G"
          },
          "5GLowerChannels" : {
            "$ref" : "#/components/schemas/Channels5G"
          },
          "5GUpperChannels" : {
            "$ref" : "#/components/schemas/Channels5G"
          },
          "6GChannels" : {
            "$ref" : "#/components/schemas/Channels6GV1_1"
          }
        },
        "description" : "Venue regulatory channels"
      },
      "WifiCallingServiceProfile" : {
        "required" : [ "epdgs", "serviceName" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 180,
            "minLength" : 2,
            "type" : "string"
          },
          "epdgs" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Epdg"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "networkIds" : {
            "type" : "array",
            "deprecated" : true,
            "items" : {
              "type" : "string",
              "deprecated" : true
            }
          },
          "qosPriority" : {
            "type" : "string",
            "default" : "QosPriorityEnum.WIFICALLING_PRI_VOICE",
            "enum" : [ "WIFICALLING_PRI_VOICE", "WIFICALLING_PRI_VIDEO", "WIFICALLING_PRI_BE", "WIFICALLING_PRI_BG" ]
          },
          "serviceName" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          }
        },
        "description" : "Wi-Fi calling profile configuration"
      },
      "WifiCallingServiceProfileV1_1" : {
        "required" : [ "epdgs", "serviceName" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 180,
            "minLength" : 2,
            "type" : "string"
          },
          "epdgs" : {
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Epdg"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "qosPriority" : {
            "type" : "string",
            "default" : "QosPriorityEnum.WIFICALLING_PRI_VOICE",
            "enum" : [ "WIFICALLING_PRI_VOICE", "WIFICALLING_PRI_VIDEO", "WIFICALLING_PRI_BE", "WIFICALLING_PRI_BG" ]
          },
          "serviceName" : {
            "pattern" : "(?=^((?!(`|\\$\\()).){2,32}$)^(\\S.*\\S)$",
            "type" : "string"
          }
        },
        "description" : "Wi-Fi calling profile configuration"
      },
      "WifiDhcpClientLease" : {
        "type" : "object",
        "properties" : {
          "dhcpPoolName" : {
            "type" : "string",
            "readOnly" : true
          },
          "hostname" : {
            "type" : "string",
            "readOnly" : true
          },
          "ipAddress" : {
            "type" : "string",
            "readOnly" : true
          },
          "leaseExpiration" : {
            "type" : "string"
          },
          "macAddress" : {
            "type" : "string",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "AP DHCP Client Lease Time Response"
      },
      "WifiDhcpClientLeases" : {
        "type" : "object",
        "properties" : {
          "wifiDhcpClientLeases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WifiDhcpClientLease"
            }
          }
        },
        "description" : "DHCP Client Leases"
      },
      "WifiDhcpPoolUsage" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 2,
            "pattern" : "^[!-~]([ -~])*[!-~]$",
            "type" : "string"
          },
          "totalIpCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "usedIpCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "DHCP Service Profile Configuration."
      },
      "WifiDhcpPoolUsages" : {
        "type" : "object",
        "properties" : {
          "wifiDhcpPoolUsages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WifiDhcpPoolUsage"
            }
          }
        },
        "description" : "DHCP Pools Usages"
      },
      "WifiError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          },
          "suggestion" : {
            "type" : "string"
          }
        }
      },
      "WifiFeatureSetV1" : {
        "type" : "object",
        "properties" : {
          "featureName" : {
            "type" : "string"
          }
        }
      },
      "WifiFeatureSets" : {
        "type" : "object",
        "properties" : {
          "featureSets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WifiFeatureSetV1"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "WifiNetwork" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "description" : "Wi-Fi network",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "WifiNetworkRadiusServerProfileSettings" : {
        "type" : "object",
        "properties" : {
          "enableAccountingProxy" : {
            "type" : "boolean",
            "default" : false
          },
          "enableAuthProxy" : {
            "type" : "boolean",
            "default" : false
          },
          "macAuthMacFormat" : {
            "type" : "string",
            "enum" : [ "Lower", "UpperDash", "UpperColon", "Upper", "LowerDash", "LowerColon" ]
          }
        },
        "description" : "Radius server profile settings."
      },
      "WifiWisprPage" : {
        "required" : [ "captivePortalUrl" ],
        "type" : "object",
        "properties" : {
          "authType" : {
            "type" : "string",
            "default" : "AuthTypeEnum.RADIUS",
            "enum" : [ "RADIUS", "ALWAYS_ACCEPT" ]
          },
          "captivePortalUrl" : {
            "pattern" : "^https?:\\/\\/([A-Za-z0-9]+([\\-\\.]{1}[A-Za-z0-9]+)*\\.[A-Za-z]{2,}|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|localhost)(:([1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?(\\/.*)?([?#].*)?$",
            "type" : "string"
          },
          "customExternalProvider" : {
            "type" : "boolean",
            "default" : false
          },
          "externalProviderName" : {
            "type" : "string"
          },
          "externalProviderRegion" : {
            "type" : "string"
          },
          "integrationKey" : {
            "pattern" : "[a-zA-Z0-9]{16}",
            "type" : "string"
          }
        },
        "description" : "Configuration for WISPr network"
      },
      "WisprPage" : {
        "required" : [ "captivePortalUrl" ],
        "type" : "object",
        "properties" : {
          "accountingRadiusId" : {
            "type" : "string"
          },
          "authRadiusId" : {
            "type" : "string"
          },
          "authType" : {
            "type" : "string",
            "default" : "AuthTypeEnum.RADIUS",
            "enum" : [ "RADIUS", "ALWAYS_ACCEPT" ]
          },
          "captivePortalUrl" : {
            "pattern" : "^https?:\\/\\/([A-Za-z0-9]+([\\-\\.]{1}[A-Za-z0-9]+)*\\.[A-Za-z]{2,}|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|localhost)(:([1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?(\\/.*)?([?#].*)?$",
            "type" : "string"
          },
          "customExternalProvider" : {
            "type" : "boolean",
            "default" : false
          },
          "externalProviderName" : {
            "type" : "string"
          },
          "externalProviderRegion" : {
            "type" : "string"
          },
          "integrationKey" : {
            "pattern" : "[a-zA-Z0-9]{16}",
            "type" : "string"
          }
        },
        "description" : "Configuration for WISPr network"
      },
      "WisprProviders" : {
        "type" : "object",
        "properties" : {
          "wisprProviders" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WisprProvidersModel"
            }
          }
        },
        "description" : "External providers list"
      },
      "WisprProvidersModel" : {
        "type" : "object",
        "properties" : {
          "customExternalProvider" : {
            "type" : "boolean",
            "default" : false
          },
          "name" : {
            "type" : "string"
          },
          "regions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WisprProvidersRegion"
            }
          }
        },
        "description" : "Wispr providers model"
      },
      "WisprProvidersRegion" : {
        "type" : "object",
        "properties" : {
          "accountingRadius" : {
            "$ref" : "#/components/schemas/ExternalAccountingRadius"
          },
          "authRadius" : {
            "$ref" : "#/components/schemas/ExternalAuthRadius"
          },
          "captivePortalUrl" : {
            "type" : "string"
          },
          "externalProviderUrl" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "redirectUrl" : {
            "type" : "string"
          },
          "showAnalyticsData" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "Wispr providers region"
      },
      "WlanRadioCustomization" : {
        "type" : "object",
        "properties" : {
          "bssMinimumPhyRate" : {
            "type" : "string",
            "default" : "BssMinimumPhyRateEnum._default",
            "enum" : [ "1", "2", "5.5", "12", "24", "default" ]
          },
          "managementFrameMinimumPhyRate" : {
            "type" : "string",
            "default" : "ManagementFrameMinimumPhyRateEnum._6",
            "enum" : [ "1", "2", "5.5", "6", "9", "11", "12", "18", "24" ]
          },
          "phyTypeConstraint" : {
            "type" : "string",
            "default" : "PhyTypeConstraintEnum.OFDM",
            "enum" : [ "OFDM", "NONE" ]
          },
          "rfBandUsage" : {
            "type" : "string",
            "default" : "RfBandUsageEnum.BOTH",
            "enum" : [ "2.4GHZ", "5.0GHZ", "BOTH" ]
          }
        },
        "description" : "WLAN radio customization"
      },
      "X509Certificate" : {
        "required" : [ "certData", "fileName" ],
        "type" : "object",
        "properties" : {
          "certData" : {
            "maxLength" : 8192,
            "minLength" : 0,
            "pattern" : "^-+BEGIN CERTIFICATE-+[A-Za-z0-9/+\n]*={0,2}\n?-+END CERTIFICATE-+\n?$",
            "type" : "string"
          },
          "fileName" : {
            "type" : "string"
          },
          "isRootCert" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "description" : "X509 certificate"
      }
    }
  }
}