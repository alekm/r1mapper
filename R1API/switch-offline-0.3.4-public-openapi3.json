{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Switch Service API & Model Documentation",
    "description" : "# Overview\n\n ## Rate Limit\n For the Switch REST API the following will be true: \n - Limits are applied to each tenant.\n - A maximum of 20 calls can be made per second.\n - Each second 10 calls will be returned to be used.",
    "termsOfService" : "https://support.ruckuswireless.com/ruckus-cloud-wifi-legal-terms-and-conditions",
    "license" : {
      "name" : "RUCKUS Cloud Privacy Policy",
      "url" : "https://support.ruckuswireless.com/ruckus-cloud-privacy-policy"
    },
    "version" : "0.3.4"
  },
  "servers" : [ {
    "url" : "https://api.asia.ruckus.cloud",
    "description" : "Asian region"
  }, {
    "url" : "https://api.eu.ruckus.cloud",
    "description" : "European region"
  }, {
    "url" : "https://api.ruckus.cloud",
    "description" : "North American region"
  } ],
  "security" : [ {
    "jwtAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "AAA Server",
    "description" : "Manage AAA (authentication, authorization, and accounting) Servers."
  }, {
    "name" : "AAA Setting",
    "description" : "Manage AAA (authentication, authorization, and accounting) Settings."
  }, {
    "name" : "Command-Line Interface Template",
    "description" : "Manage command-line interface templates."
  }, {
    "name" : "Configuration History",
    "description" : "Retrieve configuration history."
  }, {
    "name" : "DHCP Server",
    "description" : "Manage ICX DHCP servers."
  }, {
    "name" : "ICX Switch",
    "description" : "Manage ICX Switches."
  }, {
    "name" : "Import Switch",
    "description" : "Import Switches."
  }, {
    "name" : "LAG",
    "description" : "Manage LAGs (link aggregation groups)."
  }, {
    "name" : "Profile",
    "description" : "Manage switch profiles."
  }, {
    "name" : "Profile ACL",
    "description" : "Manage ACL (access control list) of switch profile."
  }, {
    "name" : "Profile Template",
    "description" : "Manage switch profile templates."
  }, {
    "name" : "Profile VLAN",
    "description" : "Manage VLANs (virtual local area networks) of switch profile."
  }, {
    "name" : "Switch Access Control List",
    "description" : "Manage ACLs (access control lists)."
  }, {
    "name" : "Switch Configuration Backup",
    "description" : "Manage configuration backups."
  }, {
    "name" : "Switch Firmware Upgrade",
    "description" : "Manage firmware upgrade."
  }, {
    "name" : "Switch Ports",
    "description" : "Manage Ports."
  }, {
    "name" : "Switch Static Routes",
    "description" : "Manage static routes."
  }, {
    "name" : "Switch VLAN",
    "description" : "Manage VLANs (virtual local area networks)."
  }, {
    "name" : "Switch Virtual Ethernet",
    "description" : "Manage VE (virtual ethernet) port settings."
  }, {
    "name" : "Trusted Port",
    "description" : "Manage a port's trust settings."
  }, {
    "name" : "Venue Switch Setting",
    "description" : "Manage a switch's venue-level settings."
  }, {
    "name" : "Venue Template AAA Server",
    "description" : "Manage Venue Template AAA (authentication, authorization, and accounting) Servers."
  }, {
    "name" : "Venue Template AAA Setting",
    "description" : "Manage Venue Template AAA (authentication, authorization, and accounting) Settings."
  }, {
    "name" : "Venue Template Switch Setting",
    "description" : "Manage switch settings of venue template."
  }, {
    "name" : "Web Authentication Page Template",
    "description" : "Manage web authentication page template."
  } ],
  "paths" : {
    "/webAuthPageTemplates/{templateId}" : {
      "get" : {
        "tags" : [ "Web Authentication Page Template" ],
        "summary" : "Get Web Authentication Template",
        "description" : "Get a web authentication page template by id.",
        "operationId" : "GetWebAuthPageTemplate_1_1",
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebAuthPageTemplateView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebAuthPageTemplateView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebAuthPageTemplateViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Web Authentication Page Template" ],
        "summary" : "Update Web Authentication Template",
        "description" : "Update web authentication page template by id.",
        "operationId" : "PutWebAuthPageTemplate_1_1",
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebAuthPageTemplateBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebAuthPageTemplateBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebAuthPageTemplateViewV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebAuthPageTemplateView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebAuthPageTemplateView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebAuthPageTemplateResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Web Authentication Page Template" ],
        "summary" : "Delete Web Authentication Template",
        "description" : "Delete web authentication page template by id.",
        "operationId" : "DeleteWebAuthPageTemplate_1_1",
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}" : {
      "get" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Get ICX Switch",
        "description" : "Get ICX switch by id.",
        "operationId" : "GetSwitchById",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IcxSwitchViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IcxSwitchViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Update ICX Switch",
        "description" : "Update ICX switch. Use activity API with request id to get the status update.",
        "operationId" : "UpdateSwitchById",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IcxSwitchViewV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IcxSwitchViewV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IcxSwitchResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IcxSwitchResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Add ICX Switch",
        "description" : "Add an ICX switch. Use activity API with request id to get the status update.",
        "operationId" : "AddSwitch",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IcxSwitchViewV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IcxSwitchViewV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Delete ICX Switch",
        "description" : "Delete ICX switch by id.",
        "operationId" : "DeleteSwitchById",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/vlans/{vlanId}" : {
      "get" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Get Switch VLAN",
        "description" : "Get the specified switch-level VLAN by id.",
        "operationId" : "GetSwitchVlan",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vlanId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Update Switch VLAN",
        "description" : "Update a VLAN of the switch.",
        "operationId" : "UpdateSwitchVlan",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vlanId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SwitchVlanDtoV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SwitchVlanDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Delete Switch VLAN",
        "description" : "Delete a VLAN of the switch.",
        "operationId" : "DeleteSwitchVlan",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vlanId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/vePorts/{vePortId}" : {
      "get" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Get Virtual Ethernet Setting",
        "description" : "Get a specified virtual ethernet port.",
        "operationId" : "GetVePort",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vePortId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VePortViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VePortViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Update Virtual Ethernet Setting",
        "description" : "Update virtual ethernet port.",
        "operationId" : "UpdateVePort",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vePortId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VePortDtoV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VePortDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VePortResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VePortResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Delete Virtual Ethernet Setting",
        "description" : "Delete virtual ethernet port.",
        "operationId" : "DeleteVePort",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vePortId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/staticRoutes/{staticRouteId}" : {
      "get" : {
        "tags" : [ "Switch Static Routes" ],
        "summary" : "Get Static Route",
        "description" : "Get the specified static route.",
        "operationId" : "GetStaticRouteById",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "staticRouteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticRouteViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticRouteViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Switch Static Routes" ],
        "summary" : "Update Static Route",
        "description" : "Update the specified static route.",
        "operationId" : "UpdateStaticRoute",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "staticRouteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StaticRouteViewV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StaticRouteViewV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticRouteResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticRouteResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Switch Static Routes" ],
        "summary" : "Delete Static Route",
        "description" : "Delete the specified static route.",
        "operationId" : "DeleteStaticRoute",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "staticRouteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/positions" : {
      "put" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Update Switch Position",
        "description" : "Update ICX switch position in the floor plan.",
        "operationId" : "UpdateSwitchPosition",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SwitchPositionViewV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SwitchPositionViewV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/portSettings" : {
      "get" : {
        "tags" : [ "Switch Ports" ],
        "summary" : "Get Ports",
        "description" : "Get switch's port settings by switch id.",
        "operationId" : "GetSwitchPortsBySwitchId",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PortViewV1001"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PortViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Switch Ports" ],
        "summary" : "Update Port",
        "description" : "Update switch's port setting. Use activity API with request id to get the status update.",
        "operationId" : "UpdatePortSettings",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PortDtoV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PortDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Switch Ports" ],
        "summary" : "Get Ports",
        "description" : "Get switch's port settings with port ids.",
        "operationId" : "GetSwitchPortsByPortIds",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PortViewV1001"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PortViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/lags/{lagId}" : {
      "get" : {
        "tags" : [ "LAG" ],
        "summary" : "Get LAG",
        "description" : "Get LAG setting by id.",
        "operationId" : "GetLag",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LagViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LagViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "LAG" ],
        "summary" : "Update LAG",
        "description" : "Update switch's LAG setting.",
        "operationId" : "UpdateLag",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LagDtoV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LagDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LagResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LagResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "LAG" ],
        "summary" : "Delete LAG",
        "description" : "Delete switch's LAG setting.",
        "operationId" : "DeleteLag",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/dhcpServers/{dhcpServerId}" : {
      "get" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Get DHCP Server-Setting",
        "description" : "Get switch's DHCP server setting.",
        "operationId" : "GetSwitchDhcpServerSetting",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dhcpServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpServerViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpServerViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Update DHCP Server-Setting",
        "description" : "Update switch's DHCP server setting.",
        "operationId" : "UpdateSwitchDhcpServerSettings",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dhcpServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerViewV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerViewV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpServerResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpServerResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Delete DHCP Server-Setting",
        "description" : "Delete switch's DHCP server setting.",
        "operationId" : "DeleteSwitchDhcpServerSetting",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dhcpServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/portSettings" : {
      "put" : {
        "tags" : [ "Switch Ports" ],
        "summary" : "Update Ports",
        "description" : "Update ports of different switches. Use activity API with request id to get the status update.",
        "operationId" : "UpdatePortsAmongSwitches",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PortsDtoV1001"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PortsDtoV1001"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Switch Ports" ],
        "summary" : "Get Ports",
        "description" : "Get port settings of different switches.",
        "operationId" : "GetPortsAmongSwitches",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PortRequestV1001"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PortRequestV1001"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PortViewV1001"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PortViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switchSettings" : {
      "get" : {
        "tags" : [ "Venue Switch Setting" ],
        "summary" : "Get Venue Switch Setting",
        "description" : "Get the switch settings of the venue.",
        "operationId" : "GetVenueSetting_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Venue Switch Setting" ],
        "summary" : "Update Venue Switch Setting",
        "description" : "Update the switch settings of the venue. Use activity API with request id to get the status update.",
        "operationId" : "UpdateVenueSetting_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateVenueSettingBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateVenueSettingBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Venue Switch Setting" ],
        "summary" : "Delete Venue Switch Settings",
        "description" : "Delete switch settings of the venue.",
        "operationId" : "DeleteVenueSwitchSettings",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseBaseViewObject"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/venues/{venueId}/switchProfiles/{switchProfileId}" : {
      "put" : {
        "tags" : [ "Profile" ],
        "summary" : "Associate Switch Profile to Venue",
        "description" : "Associate a switch profile to a venue.",
        "operationId" : "AssociateProfile",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Profile" ],
        "summary" : "Disassociate Switch Profile to Venue",
        "description" : "Disassociate a switch profile to a venue.",
        "operationId" : "DisassociateProfile",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switchFirmwares/schedules" : {
      "put" : {
        "tags" : [ "Switch Firmware Upgrade" ],
        "summary" : "Change Upgrade Schedule",
        "description" : "Schedule the firmware upgrade for venues. Use activity API with request id to get the status update.",
        "operationId" : "ChangeUpdateScheduleV1001",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChangeScheduleDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Switch Firmware Upgrade" ],
        "summary" : "Create Upgrade Schedule",
        "description" : "Schedule the firmware upgrade for venues. Use activity API with request id to get the status update.",
        "operationId" : "UpdateSchedule_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChangeScheduleDtoV1000"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChangeScheduleDtoV1000"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChangeScheduleDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Switch Firmware Upgrade" ],
        "summary" : "Delete Upgrade Schedule",
        "description" : "Cancel the schedule for firmware upgrade.",
        "operationId" : "SkipUpgradeSchedule",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SkipScheduleUpgradeDtoV1000"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SkipScheduleUpgradeDtoV1000"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/cliTemplates/{cliTemplateId}" : {
      "put" : {
        "tags" : [ "Command-Line Interface Template" ],
        "summary" : "Associate Command-Line Interface Templates to Switches",
        "description" : "Associate command-line interface templates to switches.",
        "operationId" : "AssociateCliTemplate",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cliTemplateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Command-Line Interface Template" ],
        "summary" : "Disassociate Command-Line Interface Templates to Switches",
        "description" : "Disassociate command-line interface templates to switches.",
        "operationId" : "DisassociateCliTemplate",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cliTemplateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/aaaSettings" : {
      "get" : {
        "tags" : [ "AAA Setting" ],
        "summary" : "Retrieve AAA Setting",
        "description" : "Retrieve venue's authentication, authorization, and accounting setting.",
        "operationId" : "GetAaaSettings_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AAASettingView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AAASettingView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AaaSettingViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "AAA Setting" ],
        "summary" : "Update AAA Setting",
        "description" : "Update authentication, authorization, and accounting setting by id. Use activity API with request id to get the status update.",
        "operationId" : "PutAaaSetting",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaSettingViewV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaSettingViewV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AaaSettingResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AaaSettingResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/aaaSettings/{aaaSettingId}" : {
      "put" : {
        "tags" : [ "AAA Setting" ],
        "summary" : "Update AAA Setting",
        "description" : "Update authentication, authorization, and accounting setting by id. Use activity API with request id to get the status update.",
        "operationId" : "PutAaaSetting_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aaaSettingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaSettingBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaSettingBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/venues/{venueId}/aaaServers/{aaaServerId}" : {
      "get" : {
        "tags" : [ "AAA Server" ],
        "summary" : "Get AAA Server-Setting",
        "description" : "Get a switch's authentication, authorization, and accounting server setting.",
        "operationId" : "GetAaaServer",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aaaServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AaaServerViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AaaServerViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "AAA Server" ],
        "summary" : "Update AAA Server",
        "description" : "Update authentication, authorization, and accounting server by id. Use activity API with request id to get the status update.",
        "operationId" : "PutAaaServer_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aaaServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AAAServerView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AAAServerView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AaaServerResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AAA Server" ],
        "summary" : "Delete AAA Server",
        "description" : "Delete authentication, authorization, and accounting server by id.",
        "operationId" : "DeleteAaaServer",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aaaServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/templates/venues/{venueId}/switchSettings" : {
      "get" : {
        "tags" : [ "Venue Template Switch Setting" ],
        "summary" : "Get Venue Template Switch Setting",
        "description" : "Get the switch settings of the venue template.",
        "operationId" : "GetVenueTemplateSetting_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueTemplateViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueTemplateViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Venue Template Switch Setting" ],
        "summary" : "Update Venue Template Switch Setting",
        "description" : "Update the switch settings of the venue template. Use activity API with request id to get the status update.",
        "operationId" : "UpdateVenueTemplateSetting_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueTemplateDtoV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateVenueSettingBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenueTemplateDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/templates/venues/{venueId}/switchProfiles/{switchProfileId}" : {
      "put" : {
        "tags" : [ "Profile Template" ],
        "summary" : "Associate Switch Profile Template to Venue",
        "description" : "Associate a regular switch profile template or command-line interface profile template to venue template.",
        "operationId" : "AssociateProfileTemplate",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Profile Template" ],
        "summary" : "Disassociate Switch Profile Template to Venue",
        "description" : "Disassociate a regular switch profile template or command-line interface profile template to venue template.",
        "operationId" : "DisassociateProfileTemplate",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/templates/venues/{venueId}/aaaSettings" : {
      "get" : {
        "tags" : [ "Venue Template AAA Setting" ],
        "summary" : "Retrieve Venue Template AAA Setting",
        "description" : "Retrieve venue template's authentication, authorization, and accounting setting.",
        "operationId" : "GetVenueTemplateAaaSettings_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AaaSettingViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AAASettingView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AaaSettingViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Venue Template AAA Setting" ],
        "summary" : "Update Venue Template AAA Setting",
        "description" : "Update venue template's authentication, authorization, and accounting setting by id. Use activity API with request id to get the status update.",
        "operationId" : "UpdateVenueTemplateAaaSetting",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaSettingViewV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaSettingViewV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AaaSettingResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AaaSettingResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/templates/venues/{venueId}/aaaSettings/{aaaSettingId}" : {
      "put" : {
        "tags" : [ "Venue Template AAA Setting" ],
        "summary" : "Update Venue Template AAA Setting",
        "description" : "Update venue template's authentication, authorization, and accounting setting by id. Use activity API with request id to get the status update.",
        "operationId" : "UpdateVenueTemplateAaaSetting_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aaaSettingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaSettingBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaSettingBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/templates/venues/{venueId}/aaaServers/{aaaServerId}" : {
      "get" : {
        "tags" : [ "Venue Template AAA Server" ],
        "summary" : "Get Venue Template AAA Server",
        "description" : "Get venue template's authentication, authorization, and accounting server.",
        "operationId" : "GetVenueTemplateAaaServer",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aaaServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueTemplateAaaServerViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueTemplateAaaServerViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Venue Template AAA Server" ],
        "summary" : "Update Venue Template AAA Server",
        "description" : "Update venue template's authentication, authorization, and accounting server by id. Use activity API with request id to get the status update.",
        "operationId" : "UpdateVenueTemplateAaaServer_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aaaServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerDtoV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueTemplateAaaServerResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AAAServerView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueTemplateAaaServerResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Venue Template AAA Server" ],
        "summary" : "Delete Venue Template AAA Server",
        "description" : "Delete venue template's authentication, authorization, and accounting server by id.",
        "operationId" : "DeleteVenueTemplateAaaServer",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aaaServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/templates/switchProfiles/{switchProfileId}" : {
      "get" : {
        "tags" : [ "Profile Template" ],
        "summary" : "Get Switch Profile Template",
        "description" : "Get a regular switch profile template or command-line interface profile template.",
        "operationId" : "GetProfileTemplateById_1_1",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Profile Template" ],
        "summary" : "Update Switch Profile Template",
        "description" : "Update a regular switch profile template or command-line interface profile template. Use activity API with request id to get the status update.",
        "operationId" : "UpdateProfileTemplate_1_1",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileDtoV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Profile Template" ],
        "summary" : "Delete Switch Profile Template",
        "description" : "Delete a regular switch profile template or command-line interface profile template.",
        "operationId" : "DeleteProfileTemplateById_1_1",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/switches/{switchId}" : {
      "get" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Get ICX Switch",
        "description" : "Get ICX switch by id.",
        "operationId" : "GetSwitchById_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IcxSwitchView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IcxSwitchView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "put" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Update ICX Switch",
        "description" : "Update ICX switch. Use activity API with request id to get the status update.",
        "operationId" : "UpdateSwitchById_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddSwitchBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddSwitchBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IcxSwitchView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IcxSwitchView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Delete ICX Switch",
        "description" : "Delete ICX switch by id.",
        "operationId" : "DeleteSwitchById_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/portSettings" : {
      "get" : {
        "tags" : [ "Switch Ports" ],
        "summary" : "Get Ports",
        "description" : "Get switch's port settings by switch id.",
        "operationId" : "GetSwitchPortsBySwitchId_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "put" : {
        "tags" : [ "Switch Ports" ],
        "summary" : "Update Port",
        "description" : "Update switch's port setting. Use activity API with request id to get the status update.",
        "operationId" : "UpdatePortSettings_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdatePortBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdatePortBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Switch Ports" ],
        "summary" : "Get Ports",
        "description" : "Get switch's port settings with port ids.",
        "operationId" : "GetSwitchPortsByPortIds_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/dhcpServers" : {
      "put" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Update DHCP Server-Setting",
        "description" : "Update switch's DHCP server setting.",
        "operationId" : "UpdateSwitchDhcpServerSettings_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpServerView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpServerView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Add DHCP Server",
        "description" : "Add switch's DHCP server settings. Use activity API with request id to get the status update.",
        "operationId" : "AddSwitchDhcpServerSettings_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpServerView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpServerView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Delete DHCP Servers",
        "description" : "Delete switch's DHCP servers.",
        "operationId" : "DeleteSwitchDhcpServerSettings_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/vlans/{vlanId}" : {
      "get" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Get Switch VLAN",
        "description" : "Get the specified switch-level VLAN by id.",
        "operationId" : "GetSwitchVlan_1",
        "parameters" : [ {
          "name" : "vlanId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "put" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Update Switch VLAN",
        "description" : "Update a VLAN of the switch.",
        "operationId" : "UpdateSwitchVlan_1",
        "parameters" : [ {
          "name" : "vlanId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Delete Switch VLAN",
        "description" : "Delete a VLAN of the switch.",
        "operationId" : "DeleteSwitchVlan_1",
        "parameters" : [ {
          "name" : "vlanId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/vePorts/{vePortId}" : {
      "get" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Get Virtual Ethernet Setting",
        "description" : "Get a specified virtual ethernet port.",
        "operationId" : "GetVePort_1",
        "parameters" : [ {
          "name" : "vePortId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VePortBo"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VePortBo"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "put" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Update Virtual Ethernet Setting",
        "description" : "Update virtual ethernet port.",
        "operationId" : "UpdateVePort_1",
        "parameters" : [ {
          "name" : "vePortId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VePortBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VePortBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VePortView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VePortView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Delete Virtual Ethernet Setting",
        "description" : "Delete virtual ethernet port.",
        "operationId" : "DeleteVePort_1",
        "parameters" : [ {
          "name" : "vePortId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/staticRoutes/{staticRouteId}" : {
      "get" : {
        "tags" : [ "Switch Static Routes" ],
        "summary" : "Get Static Route",
        "description" : "Get the specified static route.",
        "operationId" : "GetStaticRouteById_1",
        "parameters" : [ {
          "name" : "staticRouteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticRouteView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticRouteView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "put" : {
        "tags" : [ "Switch Static Routes" ],
        "summary" : "Update Static Route",
        "description" : "Update the specified static route.",
        "operationId" : "UpdateStaticRoute_1",
        "parameters" : [ {
          "name" : "staticRouteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StaticRouteBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StaticRouteBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticRouteView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticRouteView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Switch Static Routes" ],
        "summary" : "Delete Static Route",
        "description" : "Delete the specified static route.",
        "operationId" : "DeleteStaticRoute_1",
        "parameters" : [ {
          "name" : "staticRouteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/portSettings" : {
      "put" : {
        "tags" : [ "Switch Ports" ],
        "summary" : "Update Ports",
        "description" : "Update ports of different switches. Use activity API with request id to get the status update.",
        "operationId" : "UpdatePortsAmongSwitches_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UpdatePortsRequestPayload"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UpdatePortsRequestPayload"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Switch Ports" ],
        "summary" : "Get Ports",
        "description" : "Get port settings of different switches.",
        "operationId" : "GetPortsAmongSwitches_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PortsRequestPayload"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PortsRequestPayload"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/lags/{lagId}" : {
      "get" : {
        "tags" : [ "LAG" ],
        "summary" : "Get LAG",
        "description" : "Get LAG setting by id.",
        "operationId" : "GetLag_1",
        "parameters" : [ {
          "name" : "lagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LagView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LagView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "put" : {
        "tags" : [ "LAG" ],
        "summary" : "Update LAG",
        "description" : "Update switch's LAG setting.",
        "operationId" : "UpdateLag_1",
        "parameters" : [ {
          "name" : "lagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LagBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LagBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LagView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LagView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "LAG" ],
        "summary" : "Delete LAG",
        "description" : "Delete switch's LAG setting.",
        "operationId" : "DeleteLag_1",
        "parameters" : [ {
          "name" : "lagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/configBackups/{configBackupId}" : {
      "get" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Get Switch Configuration Backup",
        "description" : "Get a switch's configuration backup.",
        "operationId" : "GetSwitchConfigBackupById_1",
        "parameters" : [ {
          "name" : "configBackupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigBackupView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigBackupView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "put" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Restore Switch Configuration Backup",
        "description" : "Restore switch's configuration backup.",
        "operationId" : "RestoreSwitchByConfigBackup",
        "parameters" : [ {
          "name" : "configBackupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Delete Switch Configuration Backup",
        "description" : "Delete switch's configuration backup by id.",
        "operationId" : "DeleteSwitchConfigBackupById_1",
        "parameters" : [ {
          "name" : "configBackupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switchProfiles/{switchProfileId}" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "Get Switch Profile",
        "description" : "Get a regular switch profile or command-line interface profile.",
        "operationId" : "GetProfileById_1",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Profile" ],
        "summary" : "Update Switch Profile",
        "description" : "Update a regular switch profile or command-line interface profile. Use activity API with request id to get the status update.",
        "operationId" : "UpdateProfile_1",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Profile" ],
        "summary" : "Delete Switch Profile",
        "description" : "Delete a regular switch profile or command-line interface profile.",
        "operationId" : "DeleteProfileById_1_1",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/switchProfiles/{switchProfileId}/vlans/{vlanId}" : {
      "get" : {
        "tags" : [ "Profile VLAN" ],
        "summary" : "Get Profile VLAN",
        "description" : "Get the specified VLAN of the switch profile.",
        "operationId" : "GetVlanByUuid",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vlanId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "put" : {
        "tags" : [ "Profile VLAN" ],
        "summary" : "Update VLAN",
        "description" : "Update the VLAN of the switch profile.",
        "operationId" : "UpdateVlan",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vlanId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Profile VLAN" ],
        "summary" : "Delete Profile VLAN",
        "description" : "Delete the specified VLAN of the switch profile.",
        "operationId" : "DeleteVlanByUuid",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vlanId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switchProfiles/{switchProfileId}/trustedPorts/{trustedPortId}" : {
      "get" : {
        "tags" : [ "Trusted Port" ],
        "summary" : "Get Trusted Port",
        "description" : "Get the specified trusted port of the switch profile.",
        "operationId" : "GetTrustedPort",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "trustedPortId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrustedPortView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrustedPortView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "put" : {
        "tags" : [ "Trusted Port" ],
        "summary" : "Update Trusted Port",
        "description" : "Update the trusted port of the switch profile.",
        "operationId" : "UpdateTrustedPort",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "trustedPortId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TrustedPortBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TrustedPortBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrustedPortView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrustedPortView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Trusted Port" ],
        "summary" : "Delete Trusted Port",
        "description" : "Delete the specified trusted port of the switch profile.",
        "operationId" : "DeleteTrustedPort",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "trustedPortId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switchProfiles/{switchProfileId}/acls/{aclId}" : {
      "get" : {
        "tags" : [ "Profile ACL" ],
        "summary" : "Get ACL",
        "description" : "Get the ACL of the switch profile.",
        "operationId" : "GetAclById_1",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aclId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "put" : {
        "tags" : [ "Profile ACL" ],
        "summary" : "Update ACL",
        "description" : "Update the ACL of the switch profile.",
        "operationId" : "UpdateProfileAcl",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aclId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AclBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Profile ACL" ],
        "summary" : "Delete ACL",
        "description" : "Delete ACL of the switch profile.",
        "operationId" : "DeleteProfileAcl",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aclId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/cliTemplates/{cliTemplateId}" : {
      "get" : {
        "tags" : [ "Command-Line Interface Template" ],
        "summary" : "Get Command-Line Interface Template",
        "description" : "Get a command-line interface template by id.",
        "operationId" : "GetCliTemplate_1_1",
        "parameters" : [ {
          "name" : "cliTemplateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AcxCliTemplateView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AcxCliTemplateView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AcxCliTemplateViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Command-Line Interface Template" ],
        "summary" : "Update Command-Line Interface Template",
        "description" : "Update a command-line interface template for switches by id.",
        "operationId" : "UpdateCliTemplate_1_1",
        "parameters" : [ {
          "name" : "cliTemplateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AcxCliTemplateBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AcxCliTemplateBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AcxCliTemplateDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AcxCliTemplateView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AcxCliTemplateView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Command-Line Interface Template" ],
        "summary" : "Delete Command-Line Interface Template",
        "description" : "Delete a command-line interface template by id.",
        "operationId" : "DeleteCliTemplate_1_1",
        "parameters" : [ {
          "name" : "cliTemplateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/webAuthPageTemplates" : {
      "post" : {
        "tags" : [ "Web Authentication Page Template" ],
        "summary" : "Add Web Authentication Template",
        "description" : "Add web authentication page template.",
        "operationId" : "AddWebAuthPageTemplate_1_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebAuthPageTemplateBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebAuthPageTemplateBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebAuthPageTemplateViewV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebAuthPageTemplateResponseV1001"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebAuthPageTemplateView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebAuthPageTemplateView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/webAuthPageTemplates/query" : {
      "post" : {
        "tags" : [ "Web Authentication Page Template" ],
        "summary" : "Query Web Authentication Templates",
        "description" : "List of tenant's web authentication page templates.",
        "operationId" : "QueryWebAuthPageTemplates_1_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/vlans" : {
      "get" : {
        "tags" : [ "Profile VLAN" ],
        "summary" : "Get VLANs",
        "description" : "List all of VLANs in profiles with the specified venue and the specific model.",
        "operationId" : "GetVlansByVenueAndModel",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "model",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Add Switch VLANs",
        "description" : "Create multiple VLANs under the specified switches.",
        "operationId" : "AddSwitchVlans",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/SwitchVlansDtoV1001"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/SwitchVlansDtoV1001"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/vlans/query" : {
      "post" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Retrieve Switch VLANs",
        "description" : "Retrieve all usable VLANs under the specified switches.",
        "operationId" : "GetSwitchVlanBySwitchIds",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SwitchVlanOverviewV1001"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SwitchVlanOverviewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/vePorts/query" : {
      "post" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Retrieve Virtual Ethernet Settings",
        "description" : "Retrieve virtual ethernet ports of venue by query.",
        "operationId" : "GetVePortsByVenueQuery_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterableQueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterableQueryRequest"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterableQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/untaggedVlans/query" : {
      "post" : {
        "tags" : [ "Profile VLAN" ],
        "summary" : "Retrieve Untagged-VLANs",
        "description" : "List of venues switch-profile VLANs with specific model and untagged port.",
        "operationId" : "GetUntaggedVlansByVenue",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanTaggingRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanTaggingRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/venues/{venueId}/transactions/{transactionId}/configHistDetails" : {
      "post" : {
        "tags" : [ "Configuration History" ],
        "summary" : "Get Configuration History",
        "description" : "Get the configuration history details for this transaction relative to the switches in this venue.",
        "operationId" : "GetVenueConfigurationHistoryDetailByTransaction_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigurationHistoryDetailRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigurationHistoryDetailRequest"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigurationHistoryForVenueQueryRequestV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationHistoryView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationHistoryView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationHistoryViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/taggedVlans/query" : {
      "post" : {
        "tags" : [ "Profile VLAN" ],
        "summary" : "Retrieve Tagged-VLANs",
        "description" : "List of venues switch-profile VLANs with specific model and tagged port.",
        "operationId" : "GetTaggedVlansByVenue",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanTaggingRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanTaggingRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/venues/{venueId}/switches" : {
      "get" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Retrieve ICX Switches",
        "description" : "Retrieve list of venues' ICX switches.",
        "operationId" : "GetSwitchesByVenue_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IcxSwitchView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IcxSwitchView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IcxSwitchViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Add ICX Switches",
        "description" : "Add multiple ICX switches. Use activity API with request id to get the status update.",
        "operationId" : "AddMultipleSwitches",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/IcxSwitchViewV1001"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/IcxSwitchViewV1001"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Delete ICX Switches",
        "description" : "Delete multiple ICX switches.",
        "operationId" : "DeleteMultipleSwitches",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/vlans" : {
      "get" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Get VLAN-VE-Ports",
        "description" : "List all usable VLANs that are available for the VE setting.",
        "operationId" : "GetVlanByVenueWithVePortsInfoBySwitchId_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanVePortView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanVePortView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SwitchVlanViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Add Switch VLAN",
        "description" : "Create a VLAN of the switch.",
        "operationId" : "AddSwitchVlan",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SwitchVlanDtoV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SwitchVlanDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Delete Switch VLANs",
        "description" : "Delete multiple VLANs of the switch.",
        "operationId" : "DeleteSwitchVlans",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/vlans/query" : {
      "post" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Query Switch VLANs",
        "description" : "Query the switch's switch-level VLANs.",
        "operationId" : "QuerySwitchVlans",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchableQueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchableQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/vePorts" : {
      "get" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Retrieve Virtual Ethernet Settings",
        "description" : "Retrieve virtual ethernet ports of the specified switch.",
        "operationId" : "GetVePortsBySwitch",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VePortViewV1001"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VePortViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Add Virtual Ethernet Settings",
        "description" : "Add virtual ethernet ports of the switch.",
        "operationId" : "AddVePorts",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VePortDtoV1001"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VePortDtoV1001"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VePortResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VePortResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Delete Virtual Ethernet Settings",
        "description" : "Delete multiple virtual ethernet ports.",
        "operationId" : "DeleteVePorts",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/vePorts/query" : {
      "post" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Retrieve Virtual Ethernet Settings",
        "description" : "Retrieve virtual ethernet ports of switch by query.",
        "operationId" : "GetVePortsByQuery",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterableQueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterableQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/staticRoutes" : {
      "get" : {
        "tags" : [ "Switch Static Routes" ],
        "summary" : "Get Static Routes",
        "description" : "Get multiple static routes of the switch.",
        "operationId" : "GetStaticRoutesBySwitchId",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StaticRouteViewV1001"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StaticRouteViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Switch Static Routes" ],
        "summary" : "Add Static Route",
        "description" : "Add multiple static routes of the switch.",
        "operationId" : "AddStaticRoutes",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/StaticRouteViewV1001"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/StaticRouteViewV1001"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticRouteResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticRouteResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Switch Static Routes" ],
        "summary" : "Delete Static Routes",
        "description" : "Delete multiple static routes.",
        "operationId" : "DeleteStaticRoutes",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/lags" : {
      "get" : {
        "tags" : [ "LAG" ],
        "summary" : "Get LAGs",
        "description" : "List of switch's LAG settings.",
        "operationId" : "GetLags",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LagViewV1001"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LagViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "LAG" ],
        "summary" : "Add LAGs",
        "description" : "Add switch's multiple LAG settings.",
        "operationId" : "AddLags",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/LagDtoV1001"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/LagDtoV1001"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LagResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LagResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "LAG" ],
        "summary" : "Delete LAGs",
        "description" : "Delete switch's multiple LAG settings.",
        "operationId" : "DeleteLags",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/dhcpServers" : {
      "post" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Add DHCP Server",
        "description" : "Add switch's DHCP server settings. Use activity API with request id to get the status update.",
        "operationId" : "AddSwitchDhcpServerSettings",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerViewV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerViewV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpServerResponseV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpServerResponseV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Delete DHCP Servers",
        "description" : "Delete switch's DHCP servers.",
        "operationId" : "DeleteSwitchDhcpServerSettings",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/dhcpServers/query" : {
      "post" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Query DHCP Servers",
        "description" : "List of ICX's DHCP servers.",
        "operationId" : "ListOfIcxDhcpServers",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/deviceRequests" : {
      "post" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Sync/Reboot ICX Device",
        "description" : "Execute sync or reboot command on the specified switch device, no need to provide switch id list on the request body.",
        "operationId" : "DeviceRequests",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceRequestViewV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceRequestViewV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/configHistDetails/query" : {
      "post" : {
        "tags" : [ "Configuration History" ],
        "summary" : "Get Configuration History",
        "description" : "Query for configuration history details on this switch.",
        "operationId" : "GetAllConfigurationHistDetailsBySwitch",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigurationHistoryQueryRequestV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigurationHistoryQueryRequestV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationHistoryViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationHistoryViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/configBackups" : {
      "get" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Get Switch Configuration Backups",
        "description" : "List of switch's configuration backup.",
        "operationId" : "GetConfigBackupsBySwitch",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ConfigBackupViewV1001"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ConfigBackupViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Add Switch Configuration Backup",
        "description" : "Create a switch's configuration backup.",
        "operationId" : "AddSwitchConfigBackup",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigBackupDtoV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigBackupDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Delete Switch Configuration Backups",
        "description" : "Delete switch's configuration backups.",
        "operationId" : "DeleteSwitchConfigBackups",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/configBackups/query" : {
      "post" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Retrieve Switch Configuration Backups",
        "description" : "Query the switch's configuration backups.",
        "operationId" : "GetSwitchConfigBackupsByQuery",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/configBackups/comparisons" : {
      "post" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Compare Switch Configuration Backups",
        "description" : "Compare switch's configuration backups.",
        "operationId" : "CompareSwitchConfigBackups",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigBackupComparisonDtoV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigBackupComparisonDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigBackupComparisonViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigBackupComparisonViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/acls/query" : {
      "post" : {
        "tags" : [ "Switch Access Control List" ],
        "summary" : "Query Switch ACLs",
        "description" : "Get switch ACLs by query criteria.",
        "operationId" : "GetSwitchAclsByQuery",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/powerCycleRequests" : {
      "post" : {
        "tags" : [ "Switch Ports" ],
        "summary" : "Power Cycle Port",
        "description" : "Power cycle switch's port. Use activity API with request id to get the status update.",
        "operationId" : "PowerCyclePort",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PortRequestV1001"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PortRequestV1001"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/importRequests" : {
      "post" : {
        "tags" : [ "Import Switch" ],
        "summary" : "Add Switches",
        "description" : "Add switches by CSV file. Use activity API with request id to get the status update.",
        "operationId" : "ImportSwitches",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/deviceRequests" : {
      "post" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Create Multiple Device Requests",
        "description" : "Execute sync venues admin password on multiple switch devices, switch id list should be provided on the request body.",
        "operationId" : "SyncVenueAdminPasswordMultipleDeviceRequests",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceRequestViewV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceRequestViewV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/configHistories/query" : {
      "post" : {
        "tags" : [ "Configuration History" ],
        "summary" : "Get Configuration History",
        "description" : "Query for configuration history details for switches in this venue.",
        "operationId" : "GetConfigurationHistoryByVenue_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigurationHistoryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigurationHistoryRequest"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigurationHistoryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationHistoryVenueView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationHistoryVenueView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationHistoryVenueViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/aaaServers" : {
      "post" : {
        "tags" : [ "AAA Server" ],
        "summary" : "Add AAA Server",
        "description" : "Add authentication, authorization, and accounting server. Use activity API with request id to get the status update.",
        "operationId" : "AddAaaServer_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AaaServerResponseV1001"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AAAServerView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AAAServerView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AAA Server" ],
        "summary" : "Delete AAA Servers",
        "description" : "Delete multiple authentication, authorization, and accounting servers.",
        "operationId" : "DeleteAaaServers",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/aaaServers/query" : {
      "post" : {
        "tags" : [ "AAA Server" ],
        "summary" : "Query AAA Servers",
        "description" : "List of venue's authentication, authorization, and accounting servers.",
        "operationId" : "QueryAaaServers",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerQueryRequestV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerQueryRequestV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/switches" : {
      "post" : {
        "tags" : [ "Import Switch" ],
        "summary" : "Add Switches",
        "description" : "Add switches by CSV file. Use activity API with request id to get the status update.",
        "operationId" : "ImportSwitches_1",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/venues/switchFirmwares/upgradeStatusDetails/query" : {
      "post" : {
        "tags" : [ "Switch Firmware Upgrade" ],
        "summary" : "Get Venue Upgrade Statuses",
        "description" : "Get venue upgrade status by venue id for upgrading.",
        "operationId" : "getUpgradeStatusDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpgradeStatusDetailsCriteria"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpgradeStatusDetailsCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpgradeStatusDetailsView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpgradeStatusDetailsView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/venues/switchFirmwares/switches/schedules/query" : {
      "post" : {
        "tags" : [ "Switch Firmware Upgrade" ],
        "summary" : "Get Switches",
        "description" : "Get all switches by tenant id for upgrading.",
        "operationId" : "GetUpgradeSwitches",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpgradeSwitchCriteria"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpgradeSwitchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpgradeSwitchView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpgradeSwitchView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/venues/switchFirmwares/schedules" : {
      "post" : {
        "tags" : [ "Switch Firmware Upgrade" ],
        "summary" : "Create Upgrade Schedule",
        "description" : "Schedule the firmware upgrade for venues. Use activity API with request id to get the status update.",
        "operationId" : "UpdateSchedule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChangeScheduleRequestView"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChangeScheduleRequestView"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Switch Firmware Upgrade" ],
        "summary" : "Delete Upgrade Schedule",
        "description" : "Cancel the schedule for firmware upgrade.",
        "operationId" : "SkipUpgradeSchedule_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SkipScheduleUpgradeRequestView"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SkipScheduleUpgradeRequestView"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/venues/switchFirmwares/schedules/query" : {
      "post" : {
        "tags" : [ "Switch Firmware Upgrade" ],
        "summary" : "Get Venues",
        "description" : "Get all venues by tenant id for upgrading.",
        "operationId" : "GetUpgradeVenues",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpgradeVenueCriteria"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpgradeVenueCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpgradeVenueView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpgradeVenueView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/venues/aaaServers/query" : {
      "post" : {
        "tags" : [ "AAA Server" ],
        "summary" : "Query AAA Servers",
        "description" : "List of venue's authentication, authorization, and accounting servers.",
        "operationId" : "QueryAaaServers_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerQueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/templates/venues/{venueId}/aaaServers" : {
      "post" : {
        "tags" : [ "Venue Template AAA Server" ],
        "summary" : "Add Venue Template AAA Server",
        "description" : "Add venue template's authentication, authorization, and accounting server. Use activity API with request id to get the status update.",
        "operationId" : "AddVenueTemplateAaaServer_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerDtoV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueTemplateAaaServerResponseV1001"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueTemplateAaaServerResponseV1001"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AAAServerView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Venue Template AAA Server" ],
        "summary" : "Delete Venue Template AAA Servers",
        "description" : "Delete venue template's multiple authentication, authorization, and accounting servers.",
        "operationId" : "DeleteVenueTemplateAaaServers",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/templates/venues/{venueId}/aaaServers/query" : {
      "post" : {
        "tags" : [ "Venue Template AAA Server" ],
        "summary" : "Query Venue Template AAA Servers",
        "description" : "List of venue template's authentication, authorization, and accounting servers.",
        "operationId" : "QueryVenueTemplateAaaServers",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerQueryRequestV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerQueryRequestV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/templates/venues/aaaServers/query" : {
      "post" : {
        "tags" : [ "Venue Template AAA Server" ],
        "summary" : "Query Venue Template AAA Servers",
        "description" : "List of venue template's authentication, authorization, and accounting servers.",
        "operationId" : "QueryVenueTemplateAaaServers_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerQueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AaaServerQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/templates/switchProfiles" : {
      "get" : {
        "tags" : [ "Profile Template" ],
        "summary" : "Get Switch Profile Templates",
        "description" : "Get multiple regular switch profile templates or command-line interface profile templates.",
        "operationId" : "GetProfileTemplates",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Profile Template" ],
        "summary" : "Add Switch Profile Template",
        "description" : "Add a regular switch profile template or command-line interface profile template. Use activity API with request id to get the status update.",
        "operationId" : "AddProfileTemplate_1_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileDtoV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Profile Template" ],
        "summary" : "Delete Switch Profile Templates",
        "description" : "Delete multiple regular switch profile templates or command-line interface profile templates.",
        "operationId" : "DeleteProfileTemplates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/templates/switchProfiles/query" : {
      "post" : {
        "tags" : [ "Profile Template" ],
        "summary" : "Query Switch Profile Templates",
        "description" : "List the regular switch profile templates or command-line interface profile templates.",
        "operationId" : "QueryProfileTemplates_1_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchableQueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchableQueryRequest"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchableQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/switches" : {
      "get" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Get ICX Switches",
        "description" : "List of tenant's ICX switches.",
        "operationId" : "GetSwitchesOfTenant",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IcxSwitchView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IcxSwitchView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Add ICX Switches",
        "description" : "Add multiple ICX switches. Use activity API with request id to get the status update.",
        "operationId" : "AddMultipleSwitches_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AddSwitchBo"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AddSwitchBo"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Delete ICX Switches",
        "description" : "Delete multiple ICX switches.",
        "operationId" : "DeleteMultipleSwitches_1",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/vlans" : {
      "get" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Get Switch VLANs",
        "description" : "Get switch-level VLANs by switch.",
        "operationId" : "GetSwitchVlans",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Add Switch VLAN",
        "description" : "Create a VLAN of the switch.",
        "operationId" : "AddSwitchVlan_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/vlans/query" : {
      "post" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Query Switch VLANs",
        "description" : "Query the switch's switch-level VLANs.",
        "operationId" : "QuerySwitchVlans_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchableQueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchableQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/vePorts" : {
      "get" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Retrieve Virtual Ethernet Settings",
        "description" : "Retrieve virtual ethernet ports of the specified switch.",
        "operationId" : "GetVePortsBySwitch_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VePortView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VePortView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Add Virtual Ethernet Settings",
        "description" : "Add virtual ethernet ports of the switch.",
        "operationId" : "AddVePorts_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VePortBo"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VePortBo"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VePortView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VePortView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/vePorts/query" : {
      "post" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Retrieve Virtual Ethernet Settings",
        "description" : "Retrieve virtual ethernet ports of switch by query.",
        "operationId" : "GetVePortsByQuery_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterableQueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterableQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/staticRoutes" : {
      "get" : {
        "tags" : [ "Switch Static Routes" ],
        "summary" : "Get Static Routes",
        "description" : "Get multiple static routes of the switch.",
        "operationId" : "GetStaticRoutesBySwitchId_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticRouteView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticRouteView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Switch Static Routes" ],
        "summary" : "Add Static Route",
        "description" : "Add multiple static routes of the switch.",
        "operationId" : "AddStaticRoutes_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/StaticRouteBo"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/StaticRouteBo"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticRouteView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticRouteView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/lags" : {
      "get" : {
        "tags" : [ "LAG" ],
        "summary" : "Get LAGs",
        "description" : "List of switch's LAG settings.",
        "operationId" : "GetLags_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LagView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LagView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "LAG" ],
        "summary" : "Add LAGs",
        "description" : "Add switch's multiple LAG settings.",
        "operationId" : "AddLags_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/LagBo"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/LagBo"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LagView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LagView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/dhcpServers/query" : {
      "post" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Query DHCP Servers",
        "description" : "List of ICX's DHCP servers.",
        "operationId" : "ListOfIcxDhcpServers_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerQueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/dhcpServerStateSettings" : {
      "post" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Update DHCP Server",
        "description" : "Change switch's DHCP server state. Use activity API with request id to get the status update.",
        "operationId" : "ChangeSwitchDhcpServerState",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerStateRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerStateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpServerView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpServerView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/deviceRequests" : {
      "post" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Sync/Reboot ICX Device",
        "description" : "Execute sync or reboot command on the specified switch device, no need to provide switch id list on the request body.",
        "operationId" : "DeviceRequests_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringErrorCodeResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringErrorCodeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/configHistDetails/query" : {
      "post" : {
        "tags" : [ "Configuration History" ],
        "summary" : "Get Configuration History",
        "description" : "Query for configuration history details on this switch.",
        "operationId" : "GetAllConfigurationHistDetailsBySwitch_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigurationHistoryDetailRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigurationHistoryDetailRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationHistoryView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationHistoryView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/configBackups" : {
      "get" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Get Switch Configuration Backups",
        "description" : "List of switch's configuration backup.",
        "operationId" : "GetConfigBackupsBySwitch_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigBackupView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigBackupView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Add Switch Configuration Backup",
        "description" : "Create a switch's configuration backup.",
        "operationId" : "AddSwitchConfigBackup_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddConfigBackupRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddConfigBackupRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/configBackups/query" : {
      "post" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Retrieve Switch Configuration Backups",
        "description" : "Query the switch's configuration backups.",
        "operationId" : "GetSwitchConfigBackupsByQuery_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/acls/query" : {
      "post" : {
        "tags" : [ "Switch Access Control List" ],
        "summary" : "Retrieve ACLs",
        "description" : "Query the switch's switch-level ACLs.",
        "operationId" : "GetSwitchAclsByQuery_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/vlans" : {
      "post" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Add Switch VLANs",
        "description" : "Create multiple VLANs under the specified switches.",
        "operationId" : "AddSwitchVlans_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VlanBo"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/VlanBo"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Delete Switch VLANs",
        "description" : "Delete multiple VLANs of the switch.",
        "operationId" : "DeleteSwitchVlans_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/vlans/query" : {
      "post" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Retrieve Switch VLANs",
        "description" : "Retrieve all usable VLANs under the specified switches.",
        "operationId" : "GetSwitchVlanBySwitchIds_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SwitchVlanRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SwitchVlanRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/dhcpServers/query" : {
      "post" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Query DHCP Servers",
        "description" : "List of venue's DHCP servers.",
        "operationId" : "ListOfVenueDhcpServers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerQueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/deviceRequests" : {
      "post" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Create Multiple Device Requests",
        "description" : "Execute sync venues admin password on multiple switch devices, switch id list should be provided on the request body.",
        "operationId" : "SyncVenueAdminPasswordMultipleDeviceRequests_1",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyncAdminPasswordView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyncAdminPasswordView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/configBackups/comparisons" : {
      "post" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Compare Switch Configuration Backups",
        "description" : "Compare switch's configuration backups.",
        "operationId" : "CompareSwitchConfigBackups_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompareConfigBackupsRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompareConfigBackupsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompareConfigBackupsResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompareConfigBackupsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switchProfiles" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "Get Switch Profiles",
        "description" : "Get multiple regular switch profiles or command-line interface profiles.",
        "operationId" : "GetProfiles",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Profile" ],
        "summary" : "Add Switch Profile",
        "description" : "Add a regular switch profile or command-line interface profile. Use activity API with request id to get the status update.",
        "operationId" : "AddProfile_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Profile" ],
        "summary" : "Delete Switch Profiles",
        "description" : "Delete multiple regular switch profiles or command-line interface profiles.",
        "operationId" : "DeleteProfiles",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switchProfiles/{switchProfileId}/vlans" : {
      "get" : {
        "tags" : [ "Profile VLAN" ],
        "summary" : "Get Multiple VLANs",
        "description" : "Get multiple VLANs of the switch profile.",
        "operationId" : "GetVlans",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Profile VLAN" ],
        "summary" : "Add VLAN",
        "description" : "Create a VLAN of the switch profile.",
        "operationId" : "AddVlan_1_1",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VlanBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileVlanViewV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileVlanResponseV1001"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Profile VLAN" ],
        "summary" : "Delete Multiple VLANs",
        "description" : "Delete multiple VLANs of the switch profile.",
        "operationId" : "DeleteVlans",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switchProfiles/{switchProfileId}/trustedPorts" : {
      "post" : {
        "tags" : [ "Trusted Port" ],
        "summary" : "Add Trusted Port",
        "description" : "Add the trusted port of the switch profile.",
        "operationId" : "AddTrustedPort",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TrustedPortBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TrustedPortBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrustedPortView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrustedPortView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Trusted Port" ],
        "summary" : "Delete Trusted Ports",
        "description" : "Delete multiple trusted ports of the specified switch profile.",
        "operationId" : "DeleteTrustedPorts",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResponseBaseViewObject"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switchProfiles/{switchProfileId}/acls" : {
      "get" : {
        "tags" : [ "Profile ACL" ],
        "summary" : "Get ACLs",
        "description" : "Get multiple ACLs of the switch profile.",
        "operationId" : "GetAcls",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Profile ACL" ],
        "summary" : "Add ACL",
        "description" : "Add the ACL of the switch profile.",
        "operationId" : "AddProfileAcl",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AclBo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Profile ACL" ],
        "summary" : "Delete ACLs",
        "description" : "Delete multiple ACLs of the switch profile.",
        "operationId" : "DeleteProfileAcls",
        "parameters" : [ {
          "name" : "switchProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switchProfiles/query" : {
      "post" : {
        "tags" : [ "Profile" ],
        "summary" : "Query Switch Profiles",
        "description" : "List the regular switch profiles or command-line interface profiles.",
        "operationId" : "QueryProfiles_1_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchableQueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchableQueryRequest"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchableQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/switchFirmwares/schedules/switches/query" : {
      "post" : {
        "tags" : [ "Switch Firmware Upgrade" ],
        "summary" : "Get Switches",
        "description" : "Get all switches by tenant id for upgrading.",
        "operationId" : "GetUpgradeSwitches_1_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpgradeSwitchQueryFilterV1000"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpgradeSwitchQueryFilterV1000"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpgradeSwitchQueryFilterV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UpgradeSwitchViewV1000"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UpgradeSwitchViewV1000"
                  }
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UpgradeSwitchViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/switchFirmwares/schedules/query" : {
      "post" : {
        "tags" : [ "Switch Firmware Upgrade" ],
        "summary" : "Get Venues",
        "description" : "Get all venues by tenant id for upgrading.",
        "operationId" : "GetUpgradeVenues_1_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpgradeVenueQueryFilterV1000"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpgradeVenueQueryFilterV1000"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpgradeVenueQueryFilterV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UpgradeVenueViewV1000"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UpgradeVenueViewV1000"
                  }
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UpgradeVenueFirmwareViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cliTemplates" : {
      "get" : {
        "tags" : [ "Command-Line Interface Template" ],
        "summary" : "Get Command-Line Interface Templates",
        "description" : "Get a list of command-line interface templates.",
        "operationId" : "GetCliTemplates",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AcxCliTemplateView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AcxCliTemplateView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Command-Line Interface Template" ],
        "summary" : "Add Command-Line Interface Template",
        "description" : "Create a command-line interface template for switches.",
        "operationId" : "AddCliTemplate_1_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AcxCliTemplateBo"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AcxCliTemplateBo"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AcxCliTemplateDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AcxCliTemplateView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AcxCliTemplateView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Command-Line Interface Template" ],
        "summary" : "Delete Command-Line Interface Templates",
        "description" : "Delete command-line interface templates.",
        "operationId" : "DeleteCliTemplates_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cliTemplates/query" : {
      "post" : {
        "tags" : [ "Command-Line Interface Template" ],
        "summary" : "Query Command-Line Interface Templates",
        "description" : "Get a list of command-line interface templates by query.",
        "operationId" : "QueryCliTemplates_1_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchableQueryRequest"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchableQueryRequest"
              }
            },
            "application/vnd.ruckus.v1.1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchableQueryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/dhcpServerStates" : {
      "patch" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Change Switch DHCP Server State",
        "description" : "Change switch's DHCP server state. Use activity API with request id to get the status update.",
        "operationId" : "ChangeSwitchDhcpServerState_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerStateViewV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DhcpServerStateViewV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/configBackups/{configBackupId}" : {
      "get" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Get Switch Configuration Backup",
        "description" : "Get a switch's configuration backup.",
        "operationId" : "GetSwitchConfigBackupById",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configBackupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigBackupViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigBackupViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Delete Switch Configuration Backup",
        "description" : "Delete switch's configuration backup by id.",
        "operationId" : "DeleteSwitchConfigBackupById",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configBackupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Restore Switch Configuration Backup",
        "description" : "Restore switch's configuration backup.",
        "operationId" : "RestoreSwitchByConfigBackup_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configBackupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigBackupActionDtoV1001"
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigBackupActionDtoV1001"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/webAuthPageTemplates/{templateId}/switches" : {
      "get" : {
        "tags" : [ "Web Authentication Page Template" ],
        "summary" : "Get Web Authentication Template's Switch Info",
        "description" : "Get a web authentication page template's switch info by id.",
        "operationId" : "GetWebAuthPageTemplateSwitchInfo_1_1",
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebAuthPageTemplateView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebAuthPageTemplateView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SwitchAndVenueViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/vlanUnions" : {
      "get" : {
        "tags" : [ "Switch VLAN" ],
        "summary" : "Get VLANs",
        "description" : "List all usable VLANs under this venue.",
        "operationId" : "GetVlanUnionByVenue_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanConcise"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVlanConcise"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SwitchVlanViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/trustedPorts" : {
      "get" : {
        "tags" : [ "Trusted Port" ],
        "summary" : "Get Trusted Ports",
        "description" : "Retrieve trusted ports with the specified venue.",
        "operationId" : "GetTrustedPortsByVenue",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrustedPortView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrustedPortView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/venues/{venueId}/switches/{switchId}/vlanUnions" : {
      "get" : {
        "tags" : [ "Profile VLAN" ],
        "summary" : "Retrieve VLANs",
        "description" : "List all usable VLANs for multiple ports of the same switch.",
        "operationId" : "GetVlanUnion",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanIntersectionResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanIntersectionResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/transactions/{transactionId}/configHistDetails" : {
      "get" : {
        "tags" : [ "Configuration History" ],
        "summary" : "Get Configuration History",
        "description" : "Get the configuration history details of this transaction on this switch.",
        "operationId" : "RetrieveSwitchConfigurationHistDetailByTransaction",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationHistoryViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationHistoryViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/acls" : {
      "get" : {
        "tags" : [ "Switch Access Control List" ],
        "summary" : "Get Switch ACLs",
        "description" : "Get all ACLs of the switch.",
        "operationId" : "GetAclsBySwitch",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SwitchAclViewV1001"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SwitchAclViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switches/{switchId}/aclUnions" : {
      "get" : {
        "tags" : [ "Switch Access Control List" ],
        "summary" : "Get ACL Unions",
        "description" : "List all usable ACLs for this switch (the union of venue and device levels).",
        "operationId" : "GetAclUnion",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclIntersectionViewV1001"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclIntersectionViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switchProfiles" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "Get Switch Profiles",
        "description" : "Get regular switch profiles or command-line interface profiles of the venue.",
        "operationId" : "GetProfilesByVenueId_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProfileViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switchProfiles/vlans" : {
      "get" : {
        "tags" : [ "Profile VLAN" ],
        "summary" : "Get VLANs",
        "description" : "Get a list of VLANs in profiles with the specified venue.",
        "operationId" : "GetVlansByVenue_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProfileVlanViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/switchProfiles/acls" : {
      "get" : {
        "tags" : [ "Profile ACL" ],
        "summary" : "Get ACLs",
        "description" : "Get all ACLs of switch profiles in the venue.",
        "operationId" : "GetAclsByVenueId",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/venues/switchFirmwares/versions/{versionType}" : {
      "get" : {
        "tags" : [ "Switch Firmware Upgrade" ],
        "summary" : "Get Versions",
        "description" : "Get different version type of firmware.",
        "operationId" : "GetVersions",
        "parameters" : [ {
          "name" : "versionType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVersionView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SwitchVersionView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/venues/switchFirmwares/currentVersions" : {
      "get" : {
        "tags" : [ "Switch Firmware Upgrade" ],
        "summary" : "Get Current Versions",
        "description" : "Get current versions of the venues.",
        "operationId" : "GetCurrentVersionsByVenues",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueCurrentVersionView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueCurrentVersionView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/venues/aaaServers/{aaaServerId}" : {
      "get" : {
        "tags" : [ "AAA Server" ],
        "summary" : "Get AAA Server-Setting",
        "description" : "Get a switch's authentication, authorization, and accounting server setting.",
        "operationId" : "GetAaaServer_1",
        "parameters" : [ {
          "name" : "aaaServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AAAServerView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AAAServerView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "AAA Server" ],
        "summary" : "Delete AAA Server",
        "description" : "Delete authentication, authorization, and accounting server by id.",
        "operationId" : "DeleteAaaServer_1",
        "parameters" : [ {
          "name" : "aaaServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/templates/venues/{venueId}/switchProfiles" : {
      "get" : {
        "tags" : [ "Profile Template" ],
        "summary" : "Get Switch Profile Templates",
        "description" : "Get regular switch profile templates or command-line interface profile templates of the venue.",
        "operationId" : "GetProfileTemplatesByVenueId_1_1",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProfileViewV1001"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProfileViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/templates/venues/aaaServers/{aaaServerId}" : {
      "get" : {
        "tags" : [ "Venue Template AAA Server" ],
        "summary" : "Get Venue Template AAA Server",
        "description" : "Get venue template's authentication, authorization, and accounting server.",
        "operationId" : "GetVenueTemplateAaaServer_1",
        "parameters" : [ {
          "name" : "aaaServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AAAServerView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AAAServerView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Venue Template AAA Server" ],
        "summary" : "Delete Venue Template AAA Server",
        "description" : "Delete venue template's authentication, authorization, and accounting server by id.",
        "operationId" : "DeleteVenueTemplateAaaServer_1",
        "parameters" : [ {
          "name" : "aaaServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/vlanUnions" : {
      "get" : {
        "tags" : [ "Profile VLAN" ],
        "summary" : "Retrieve VLANs",
        "description" : "List all usable VLANs for multiple ports of the same switch.",
        "operationId" : "GetVlanUnion_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanIntersectionResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VlanIntersectionResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/transactions/{transactionId}/configHistDetails" : {
      "get" : {
        "tags" : [ "Configuration History" ],
        "summary" : "Get Configuration History",
        "description" : "Get the configuration history details of this transaction on this switch.",
        "operationId" : "RetrieveSwitchConfigurationHistDetailByTransaction_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationHistoryView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationHistoryView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/acls" : {
      "get" : {
        "tags" : [ "Switch Access Control List" ],
        "summary" : "Get ACLs",
        "description" : "Get all ACLs of the switch.",
        "operationId" : "GetAclsBySwitch_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/aclUnions" : {
      "get" : {
        "tags" : [ "Switch Access Control List" ],
        "summary" : "Get ACL Union",
        "description" : "List all usable ACLs for this switch (the union of venue and device levels).",
        "operationId" : "GetAclUnion_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclIntersectionResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclIntersectionResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/dhcpServers/{dhcpServerId}" : {
      "get" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Get DHCP Server-Setting",
        "description" : "Get switch's DHCP server setting.",
        "operationId" : "GetSwitchDhcpServerSetting_1",
        "parameters" : [ {
          "name" : "dhcpServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpServerView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DhcpServerView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/acls/{aclId}" : {
      "get" : {
        "tags" : [ "Switch Access Control List" ],
        "summary" : "Get ACL",
        "description" : "Get the ACL of the switch.",
        "operationId" : "GetAclById",
        "parameters" : [ {
          "name" : "aclId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AclView"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switchFirmwares/versions/{versionType}" : {
      "get" : {
        "tags" : [ "Switch Firmware Upgrade" ],
        "summary" : "Get Versions",
        "description" : "Get different version type of firmware.",
        "operationId" : "GetVersions_1_1",
        "parameters" : [ {
          "name" : "versionType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SwitchVersionViewV1000"
                  }
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SwitchVersionViewV1000"
                  }
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SwitchVersionViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/switchFirmwares/currentVersions" : {
      "get" : {
        "tags" : [ "Switch Firmware Upgrade" ],
        "summary" : "Get Current Versions",
        "description" : "Get current versions of the venues.",
        "operationId" : "GetCurrentVersionsByVenues_1_1",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueCurrentVersionViewV1000"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueCurrentVersionViewV1000"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenueCurrentVersionViewV1001"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cliTemplates/examples" : {
      "get" : {
        "tags" : [ "Command-Line Interface Template" ],
        "summary" : "Get Command-Line Interface Template-Examples",
        "description" : "Get a list of command-line interface template examples.",
        "operationId" : "GetCliTemplates_2_1",
        "parameters" : [ {
          "name" : "category",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CliTemplateSampleView"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CliTemplateSampleView"
                }
              },
              "application/vnd.ruckus.v1.1+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AcxCliTemplateSampleViewV1001"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/stacks/{stackSwitchSerialNumber}" : {
      "delete" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Delete Stack Member",
        "description" : "Delete stack member.",
        "operationId" : "DeleteStackMember",
        "parameters" : [ {
          "name" : "venueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "stackSwitchSerialNumber",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/aaaServers" : {
      "delete" : {
        "tags" : [ "AAA Server" ],
        "summary" : "Delete AAA Servers",
        "description" : "Delete multiple authentication, authorization, and accounting servers.",
        "operationId" : "DeleteAaaServers_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/templates/venues/aaaServers" : {
      "delete" : {
        "tags" : [ "Venue Template AAA Server" ],
        "summary" : "Delete Venue Template AAA Servers",
        "description" : "Delete venue template's multiple authentication, authorization, and accounting servers.",
        "operationId" : "DeleteVenueTemplateAaaServers_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/{switchId}/dhcpServers/{dhcpServerId}" : {
      "delete" : {
        "tags" : [ "DHCP Server" ],
        "summary" : "Delete DHCP Server-Setting",
        "description" : "Delete switch's DHCP server setting.",
        "operationId" : "DeleteSwitchDhcpServerSetting_1",
        "parameters" : [ {
          "name" : "switchId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dhcpServerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/vePorts" : {
      "delete" : {
        "tags" : [ "Switch Virtual Ethernet" ],
        "summary" : "Delete Virtual Ethernet Settings",
        "description" : "Delete multiple virtual ethernet ports.",
        "operationId" : "DeleteVePorts_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/staticRoutes" : {
      "delete" : {
        "tags" : [ "Switch Static Routes" ],
        "summary" : "Delete Static Routes",
        "description" : "Delete multiple static routes.",
        "operationId" : "DeleteStaticRoutes_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/lags" : {
      "delete" : {
        "tags" : [ "LAG" ],
        "summary" : "Delete LAGs",
        "description" : "Delete switch's multiple LAG settings.",
        "operationId" : "DeleteLags_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/switches/configBackups" : {
      "delete" : {
        "tags" : [ "Switch Configuration Backup" ],
        "summary" : "Delete Switch Configuration Backups",
        "description" : "Delete switch's configuration backups.",
        "operationId" : "DeleteSwitchConfigBackups_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "application/vnd.ruckus.v1+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/stacks/{stackSwitchSerialNumber}" : {
      "delete" : {
        "tags" : [ "ICX Switch" ],
        "summary" : "Delete Stack Member",
        "description" : "Delete stack member.",
        "operationId" : "DeleteStackMember_1",
        "parameters" : [ {
          "name" : "stackSwitchSerialNumber",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              },
              "application/vnd.ruckus.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad/malformed request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource or related-entity not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    }
  },
  "components" : {
    "schemas" : {
      "AAAServerView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "purpose" : {
            "type" : "string",
            "enum" : [ "UNSPECIFIED", "DEFAULT", "AUTHENTICATION_ONLY", "AUTHORIZATION_ONLY", "ACCOUNTING_ONLY" ]
          },
          "level" : {
            "type" : "string",
            "enum" : [ "UNSPECIFIED", "READ_WRITE", "PORT_CONFIG", "READ_ONLY", "LEVEL_NONE" ]
          },
          "serverType" : {
            "type" : "string",
            "enum" : [ "__NULL", "RADIUS", "TACACS_PLUS", "LOCAL", "NONE_TYPE" ]
          },
          "secret" : {
            "type" : "string"
          },
          "ip" : {
            "type" : "string"
          },
          "acctPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "switchCountInVenue" : {
            "type" : "integer",
            "format" : "int32"
          },
          "syncedPasswordSwitchCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "aaaServerViewList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AAAServerView"
            }
          }
        }
      },
      "AAASettingView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "authnEnabledSsh" : {
            "type" : "boolean"
          },
          "authnEnableTelnet" : {
            "type" : "boolean"
          },
          "authnFirstPref" : {
            "type" : "string"
          },
          "authnSecondPref" : {
            "type" : "string"
          },
          "authnThirdPref" : {
            "type" : "string"
          },
          "authnFourthPref" : {
            "type" : "string"
          },
          "authzEnabledCommand" : {
            "type" : "boolean"
          },
          "authzEnabledExec" : {
            "type" : "boolean"
          },
          "authzCommonsLevel" : {
            "type" : "string"
          },
          "authzCommonsFirstServer" : {
            "type" : "string"
          },
          "authzCommonsSecondServer" : {
            "type" : "string"
          },
          "authzCommonsThirdServer" : {
            "type" : "string"
          },
          "authzExecFirstServer" : {
            "type" : "string"
          },
          "authzExecSecondServer" : {
            "type" : "string"
          },
          "authzExecThirdServer" : {
            "type" : "string"
          },
          "acctEnabledCommand" : {
            "type" : "boolean"
          },
          "acctEnabledExec" : {
            "type" : "boolean"
          },
          "acctCommonsLevel" : {
            "type" : "string"
          },
          "acctCommonsFirstServer" : {
            "type" : "string"
          },
          "acctCommonsSecondServer" : {
            "type" : "string"
          },
          "acctCommonsThirdServer" : {
            "type" : "string"
          },
          "acctExecFirstServer" : {
            "type" : "string"
          },
          "acctExecSecondServer" : {
            "type" : "string"
          },
          "acctExecThirdServer" : {
            "type" : "string"
          }
        }
      },
      "AaaServerBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "acctPort" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "authPort" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "ip" : {
            "pattern" : "^([1-9]|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])(\\.([0-9]|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])){2}\\.([1-9]|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-4])$",
            "type" : "string"
          },
          "level" : {
            "type" : "string",
            "enum" : [ "UNSPECIFIED", "READ_WRITE", "PORT_CONFIG", "READ_ONLY", "LEVEL_NONE" ]
          },
          "name" : {
            "maxLength" : 64,
            "minLength" : 2,
            "type" : "string"
          },
          "password" : {
            "maxLength" : 64,
            "minLength" : 8,
            "type" : "string"
          },
          "encryptedPassword" : {
            "type" : "string"
          },
          "purpose" : {
            "type" : "string",
            "enum" : [ "UNSPECIFIED", "DEFAULT", "AUTHENTICATION_ONLY", "AUTHORIZATION_ONLY", "ACCOUNTING_ONLY" ]
          },
          "secret" : {
            "maxLength" : 64,
            "minLength" : 1,
            "type" : "string"
          },
          "serverType" : {
            "type" : "string",
            "enum" : [ "__NULL", "RADIUS", "TACACS_PLUS", "LOCAL", "NONE_TYPE" ]
          },
          "username" : {
            "maxLength" : 48,
            "minLength" : 2,
            "type" : "string"
          },
          "authEnable" : {
            "type" : "boolean"
          }
        }
      },
      "AaaServerDtoV1001" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 64,
            "minLength" : 2,
            "type" : "string"
          },
          "username" : {
            "maxLength" : 48,
            "minLength" : 2,
            "type" : "string"
          },
          "password" : {
            "maxLength" : 64,
            "minLength" : 8,
            "type" : "string"
          },
          "purpose" : {
            "type" : "string",
            "enum" : [ "UNSPECIFIED", "DEFAULT", "AUTHENTICATION_ONLY", "AUTHORIZATION_ONLY", "ACCOUNTING_ONLY" ]
          },
          "level" : {
            "type" : "string",
            "enum" : [ "UNSPECIFIED", "READ_WRITE", "PORT_CONFIG", "READ_ONLY", "LEVEL_NONE" ]
          },
          "serverType" : {
            "type" : "string",
            "enum" : [ "__NULL", "RADIUS", "TACACS_PLUS", "LOCAL", "NONE_TYPE" ]
          },
          "secret" : {
            "maxLength" : 64,
            "minLength" : 1,
            "type" : "string"
          },
          "ip" : {
            "pattern" : "^([1-9]|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])(\\.([0-9]|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])){2}\\.([1-9]|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-4])$",
            "type" : "string"
          },
          "acctPort" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "authPort" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AaaServerQueryRequest" : {
        "type" : "object",
        "properties" : {
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortField" : {
            "type" : "string"
          },
          "sortOrder" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          },
          "serverType" : {
            "type" : "string",
            "enum" : [ "__NULL", "RADIUS", "TACACS_PLUS", "LOCAL", "NONE_TYPE" ]
          },
          "venueId" : {
            "type" : "string"
          }
        }
      },
      "AaaServerQueryRequestV1001" : {
        "type" : "object",
        "properties" : {
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortField" : {
            "type" : "string"
          },
          "sortOrder" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          },
          "serverType" : {
            "type" : "string",
            "enum" : [ "__NULL", "RADIUS", "TACACS_PLUS", "LOCAL", "NONE_TYPE" ]
          }
        }
      },
      "AaaServerResponseV1001" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/AaaServerViewV1001"
          }
        }
      },
      "AaaServerViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "purpose" : {
            "type" : "string",
            "enum" : [ "UNSPECIFIED", "DEFAULT", "AUTHENTICATION_ONLY", "AUTHORIZATION_ONLY", "ACCOUNTING_ONLY" ]
          },
          "level" : {
            "type" : "string",
            "enum" : [ "UNSPECIFIED", "READ_WRITE", "PORT_CONFIG", "READ_ONLY", "LEVEL_NONE" ]
          },
          "serverType" : {
            "type" : "string",
            "enum" : [ "__NULL", "RADIUS", "TACACS_PLUS", "LOCAL", "NONE_TYPE" ]
          },
          "secret" : {
            "type" : "string"
          },
          "ip" : {
            "type" : "string"
          },
          "acctPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "switchCountInVenue" : {
            "type" : "integer",
            "format" : "int32"
          },
          "syncedPasswordSwitchCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AaaSettingBo" : {
        "type" : "object",
        "properties" : {
          "authnEnabledSsh" : {
            "type" : "boolean"
          },
          "authnEnableTelnet" : {
            "type" : "boolean"
          },
          "authnFirstPref" : {
            "type" : "string"
          },
          "authnSecondPref" : {
            "type" : "string"
          },
          "authnThirdPref" : {
            "type" : "string"
          },
          "authnFourthPref" : {
            "type" : "string"
          },
          "authzEnabledCommand" : {
            "type" : "boolean"
          },
          "authzEnabledExec" : {
            "type" : "boolean"
          },
          "authzCommonsLevel" : {
            "type" : "string"
          },
          "authzCommonsFirstServer" : {
            "type" : "string"
          },
          "authzCommonsSecondServer" : {
            "type" : "string"
          },
          "authzCommonsThirdServer" : {
            "type" : "string"
          },
          "authzExecFirstServer" : {
            "type" : "string"
          },
          "authzExecSecondServer" : {
            "type" : "string"
          },
          "authzExecThirdServer" : {
            "type" : "string"
          },
          "acctEnabledCommand" : {
            "type" : "boolean"
          },
          "acctEnabledExec" : {
            "type" : "boolean"
          },
          "acctCommonsLevel" : {
            "type" : "string"
          },
          "acctCommonsFirstServer" : {
            "type" : "string"
          },
          "acctCommonsSecondServer" : {
            "type" : "string"
          },
          "acctCommonsThirdServer" : {
            "type" : "string"
          },
          "acctExecFirstServer" : {
            "type" : "string"
          },
          "acctExecSecondServer" : {
            "type" : "string"
          },
          "acctExecThirdServer" : {
            "type" : "string"
          }
        }
      },
      "AaaSettingResponseV1001" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/AaaSettingViewV1001"
          }
        }
      },
      "AaaSettingViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "authnEnabledSsh" : {
            "type" : "boolean"
          },
          "authnEnableTelnet" : {
            "type" : "boolean"
          },
          "authnFirstPref" : {
            "type" : "string"
          },
          "authnSecondPref" : {
            "type" : "string"
          },
          "authnThirdPref" : {
            "type" : "string"
          },
          "authnFourthPref" : {
            "type" : "string"
          },
          "authzEnabledCommand" : {
            "type" : "boolean"
          },
          "authzEnabledExec" : {
            "type" : "boolean"
          },
          "authzCommonsLevel" : {
            "type" : "string"
          },
          "authzCommonsFirstServer" : {
            "type" : "string"
          },
          "authzCommonsSecondServer" : {
            "type" : "string"
          },
          "authzCommonsThirdServer" : {
            "type" : "string"
          },
          "authzExecFirstServer" : {
            "type" : "string"
          },
          "authzExecSecondServer" : {
            "type" : "string"
          },
          "authzExecThirdServer" : {
            "type" : "string"
          },
          "acctEnabledCommand" : {
            "type" : "boolean"
          },
          "acctEnabledExec" : {
            "type" : "boolean"
          },
          "acctCommonsLevel" : {
            "type" : "string"
          },
          "acctCommonsFirstServer" : {
            "type" : "string"
          },
          "acctCommonsSecondServer" : {
            "type" : "string"
          },
          "acctCommonsThirdServer" : {
            "type" : "string"
          },
          "acctExecFirstServer" : {
            "type" : "string"
          },
          "acctExecSecondServer" : {
            "type" : "string"
          },
          "acctExecThirdServer" : {
            "type" : "string"
          }
        }
      },
      "Acl" : {
        "required" : [ "aclType", "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "name" : {
            "type" : "string"
          },
          "aclType" : {
            "type" : "string",
            "enum" : [ "standard", "extended", "IPv6" ]
          },
          "aclRules" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AclRule"
            }
          },
          "profileId" : {
            "type" : "string"
          }
        }
      },
      "AclBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "aclType" : {
            "type" : "string",
            "enum" : [ "standard", "extended", "IPv6" ]
          },
          "aclRules" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AclRuleBo"
            }
          },
          "uniqueName" : {
            "type" : "string"
          }
        }
      },
      "AclIntersectionResponse" : {
        "type" : "object",
        "properties" : {
          "profileAcl" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "switchAcl" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AclIntersectionViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "profileAcl" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "switchAcl" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AclRule" : {
        "required" : [ "action", "id", "protocol", "sequence", "source" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "sequence" : {
            "maximum" : 65000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "permit", "deny" ]
          },
          "destination" : {
            "pattern" : "^[aA][nN][yY]|(\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\b)\\.(\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\b)\\.(\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\b)\\.(\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\b)/([0-9]|[12]\\d|3[0-2])$",
            "type" : "string"
          },
          "destinationPort" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "protocol" : {
            "type" : "string",
            "enum" : [ "ip", "tcp", "udp", "ipv6" ]
          },
          "source" : {
            "pattern" : "^[aA][nN][yY]|(\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\b)\\.(\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\b)\\.(\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\b)\\.(\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\b)/([0-9]|[12]\\d|3[0-2])$",
            "type" : "string"
          },
          "sourcePort" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "acl" : {
            "$ref" : "#/components/schemas/Acl"
          },
          "dscpMatching" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dscpMarking" : {
            "type" : "integer",
            "format" : "int32"
          },
          "internalPriority" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AclRuleBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "sequence" : {
            "type" : "integer",
            "format" : "int32"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "permit", "deny" ]
          },
          "protocol" : {
            "type" : "string",
            "enum" : [ "ip", "tcp", "udp", "ipv6" ]
          },
          "source" : {
            "type" : "string"
          },
          "sourcePort" : {
            "type" : "string"
          },
          "destination" : {
            "type" : "string"
          },
          "destinationPort" : {
            "type" : "string"
          },
          "dscpMatching" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dscpMarking" : {
            "type" : "integer",
            "format" : "int32"
          },
          "internalPriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "typeIp" : {
            "type" : "boolean"
          }
        }
      },
      "AclRuleView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "sequence" : {
            "type" : "integer",
            "format" : "int32"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "permit", "deny" ]
          },
          "destination" : {
            "type" : "string"
          },
          "destinationPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "protocol" : {
            "type" : "string",
            "enum" : [ "ip", "tcp", "udp", "ipv6" ]
          },
          "source" : {
            "type" : "string"
          },
          "sourcePort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dscpMatching" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dscpMarking" : {
            "type" : "integer",
            "format" : "int32"
          },
          "internalPriority" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AclView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "aclType" : {
            "type" : "string",
            "enum" : [ "standard", "extended", "IPv6" ]
          },
          "aclRules" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AclRuleView"
            }
          },
          "aclViewList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AclView"
            }
          }
        }
      },
      "AcxCliTemplateBo" : {
        "type" : "object",
        "properties" : {
          "applyLater" : {
            "type" : "boolean"
          },
          "cli" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "pattern" : "^.{1,64}$",
            "type" : "string"
          },
          "reload" : {
            "type" : "boolean"
          },
          "variables" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AcxCliTemplateVariableBo"
            }
          },
          "venueSwitches" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VenueSwitchBo"
            }
          }
        }
      },
      "AcxCliTemplateDtoV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "pattern" : "^.{1,64}$",
            "type" : "string"
          },
          "cli" : {
            "type" : "string"
          },
          "variables" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AcxCliTemplateVariableViewV1001"
            }
          },
          "reload" : {
            "type" : "boolean"
          },
          "applyLater" : {
            "type" : "boolean"
          }
        }
      },
      "AcxCliTemplateSampleViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "cli" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          }
        }
      },
      "AcxCliTemplateSwitchVariable" : {
        "required" : [ "id", "serialNumbers", "value" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "serialNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "AcxCliTemplateSwitchesView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "venueId" : {
            "type" : "string"
          },
          "switches" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AcxCliTemplateSwitchesViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "venueId" : {
            "type" : "string"
          },
          "switches" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AcxCliTemplateVariable" : {
        "required" : [ "id", "name", "value", "variableType" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "variableType" : {
            "type" : "string",
            "enum" : [ "ADDRESS", "RANGE", "STRING" ]
          },
          "needUpdate" : {
            "type" : "boolean"
          },
          "switchVariables" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AcxCliTemplateSwitchVariable"
            }
          },
          "variableName" : {
            "type" : "string"
          },
          "ipAddressEnd" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          },
          "ipAddressStart" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          },
          "addressType" : {
            "type" : "boolean"
          },
          "rangeType" : {
            "type" : "boolean"
          },
          "subMaskAndEndIp" : {
            "type" : "array",
            "writeOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "valueFromFieldsByTypeByUpdateVariable" : {
            "$ref" : "#/components/schemas/AcxCliTemplateVariable"
          }
        }
      },
      "AcxCliTemplateVariableBo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ADDRESS", "RANGE", "STRING" ]
          }
        }
      },
      "AcxCliTemplateVariableViewV1001" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ADDRESS", "RANGE", "STRING" ]
          },
          "value" : {
            "type" : "string"
          },
          "rangeStart" : {
            "type" : "integer",
            "format" : "int32"
          },
          "rangeEnd" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ipAddressStart" : {
            "type" : "string"
          },
          "ipAddressEnd" : {
            "type" : "string"
          },
          "subMask" : {
            "type" : "string"
          }
        }
      },
      "AcxCliTemplateView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "pattern" : "^.{1,64}$",
            "type" : "string"
          },
          "cli" : {
            "type" : "string"
          },
          "variables" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CliTemplateVariableBo"
            }
          },
          "reload" : {
            "type" : "boolean"
          },
          "applyLater" : {
            "type" : "boolean"
          },
          "venueSwitches" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AcxCliTemplateSwitchesView"
            }
          }
        }
      },
      "AcxCliTemplateViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "pattern" : "^.{1,64}$",
            "type" : "string"
          },
          "cli" : {
            "type" : "string"
          },
          "variables" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AcxCliTemplateVariableViewV1001"
            }
          },
          "reload" : {
            "type" : "boolean"
          },
          "applyLater" : {
            "type" : "boolean"
          },
          "venueSwitches" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AcxCliTemplateSwitchesViewV1001"
            }
          }
        }
      },
      "AcxVenueCliTemplate" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "name" : {
            "pattern" : "^.{1,64}$",
            "type" : "string"
          },
          "cli" : {
            "type" : "string"
          },
          "switchModels" : {
            "type" : "string"
          },
          "variables" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AcxCliTemplateVariable"
            }
          },
          "overwrite" : {
            "type" : "boolean"
          },
          "switchModelArray" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AcxVenueCliTemplateBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "pattern" : "\"^.{1,64}$\"",
            "type" : "string"
          },
          "cli" : {
            "type" : "string"
          },
          "switchModels" : {
            "type" : "string"
          },
          "variables" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AcxCliTemplateVariableBo"
            }
          },
          "overwrite" : {
            "type" : "boolean"
          },
          "customizedSerialSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AcxVenueCliTemplateView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "cli" : {
            "type" : "string"
          },
          "switchModels" : {
            "type" : "string"
          },
          "variables" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CliTemplateVariableBo"
            }
          },
          "overwrite" : {
            "type" : "boolean"
          }
        }
      },
      "AcxVenueCliTemplateViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "pattern" : "^.{1,64}$",
            "type" : "string"
          },
          "cli" : {
            "type" : "string"
          },
          "switchModels" : {
            "type" : "string"
          },
          "variables" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AcxCliTemplateVariableViewV1001"
            }
          },
          "overwrite" : {
            "type" : "boolean"
          }
        }
      },
      "AddConfigBackupRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "pattern" : "^(?:(?!\").){1,64}$",
            "type" : "string"
          }
        }
      },
      "AddSwitchBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "venueId" : {
            "type" : "string"
          },
          "initialVlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "enableStack" : {
            "type" : "boolean"
          },
          "defaultGateway" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "dhcpClientEnabled" : {
            "type" : "boolean"
          },
          "dhcpServerEnabled" : {
            "type" : "boolean"
          },
          "firmwareVersion" : {
            "type" : "string"
          },
          "igmpSnooping" : {
            "type" : "string"
          },
          "ipAddress" : {
            "type" : "string"
          },
          "ipAddressInterface" : {
            "type" : "string"
          },
          "ipAddressInterfaceType" : {
            "type" : "string"
          },
          "ipAddressType" : {
            "type" : "string",
            "enum" : [ "static", "dynamic" ]
          },
          "jumboMode" : {
            "type" : "boolean"
          },
          "lastDataSyncTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastDataSyncTriggerTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "position" : {
            "type" : "string"
          },
          "previousMembers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "softDeletedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "spanningTreePriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "stackConfigTimestamp" : {
            "type" : "string"
          },
          "stackMembers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StackMembers"
            }
          },
          "displayOfStack" : {
            "type" : "string"
          },
          "subnetMask" : {
            "type" : "string"
          },
          "syncDataEndTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "syncDataId" : {
            "type" : "string"
          },
          "syncDataStartTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "tags" : {
            "type" : "string"
          },
          "trustPorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "specifiedType" : {
            "type" : "string",
            "enum" : [ "AUTO", "SWITCH", "ROUTER" ]
          },
          "rearModule" : {
            "type" : "string"
          },
          "vlanCustomize" : {
            "type" : "boolean"
          },
          "stackMembersAndFilterActiveId" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StackMembers"
            }
          }
        }
      },
      "AuthenticationBo" : {
        "type" : "object",
        "properties" : {
          "authEnable" : {
            "type" : "boolean"
          },
          "authenticationType" : {
            "type" : "string",
            "enum" : [ "__NULL", "802.1x", "macauth", "802.1x_and_macauth" ]
          },
          "authDefaultVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "guestVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "isAaaSupportAuth" : {
            "type" : "boolean"
          }
        }
      },
      "AuthenticationProfile" : {
        "required" : [ "authenticationType", "id", "profileName" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "profileName" : {
            "type" : "string"
          },
          "authenticationType" : {
            "type" : "string",
            "enum" : [ "__NULL", "802.1x", "macauth", "802.1x_and_macauth" ]
          },
          "changeAuthOrder" : {
            "type" : "boolean"
          },
          "dot1xPortControl" : {
            "type" : "string",
            "enum" : [ "__NULL", "auto", "force_authorized", "force_unauthorized", "" ]
          },
          "authDefaultVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "restrictedVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "criticalVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "guestVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "authFailAction" : {
            "type" : "string",
            "enum" : [ "__NULL", "block", "restricted_vlan" ]
          },
          "authTimeoutAction" : {
            "type" : "string",
            "enum" : [ "__NULL", "none", "failure", "success", "critical_vlan" ]
          }
        }
      },
      "BackupContent" : {
        "type" : "object",
        "properties" : {
          "configBackup1" : {
            "$ref" : "#/components/schemas/ConfigBackupContent"
          },
          "configBackup2" : {
            "$ref" : "#/components/schemas/ConfigBackupContent"
          }
        }
      },
      "BaseViewObject" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "ChangeScheduleDtoV1000" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string"
          },
          "time" : {
            "type" : "string"
          },
          "switchVersion" : {
            "type" : "string"
          },
          "switchVersionAboveTen" : {
            "type" : "string"
          },
          "switchIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "preDownload" : {
            "type" : "boolean"
          }
        }
      },
      "ChangeScheduleDtoV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string"
          },
          "time" : {
            "type" : "string"
          },
          "versions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModelVersionViewV1001"
            }
          },
          "switchIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "preDownload" : {
            "type" : "boolean"
          }
        }
      },
      "ChangeScheduleRequestView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string"
          },
          "time" : {
            "type" : "string"
          },
          "switchVersion" : {
            "type" : "string"
          },
          "switchVersionAboveTen" : {
            "type" : "string"
          },
          "venueIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "switchIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "preDownload" : {
            "type" : "boolean"
          }
        }
      },
      "CliTemplateSampleView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "cli" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          }
        }
      },
      "CliTemplateVariableBo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ADDRESS", "RANGE", "STRING" ]
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "CommonConfigBo" : {
        "type" : "object",
        "properties" : {
          "dnsConfig" : {
            "type" : "string"
          },
          "dns" : {
            "$ref" : "#/components/schemas/CommonConfigDnsBo"
          },
          "handleType" : {
            "type" : "string",
            "enum" : [ "__NULL", "DNS" ]
          }
        }
      },
      "CommonConfigDnsBo" : {
        "type" : "object",
        "properties" : {
          "ip" : {
            "type" : "string"
          },
          "ipByIpList" : {
            "type" : "array",
            "writeOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CompareConfigBackupsRequest" : {
        "type" : "object",
        "properties" : {
          "backupId1" : {
            "type" : "string"
          },
          "backupId2" : {
            "type" : "string"
          }
        }
      },
      "CompareConfigBackupsResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/BackupContent"
          }
        }
      },
      "ConfigBackupActionDtoV1001" : {
        "type" : "object",
        "properties" : {
          "configBackupAction" : {
            "type" : "string",
            "enum" : [ "restore", "download" ]
          }
        }
      },
      "ConfigBackupComparisonDtoV1001" : {
        "type" : "object",
        "properties" : {
          "backupId1" : {
            "type" : "string"
          },
          "backupId2" : {
            "type" : "string"
          }
        }
      },
      "ConfigBackupComparisonViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "configBackup1" : {
            "$ref" : "#/components/schemas/ConfigBackupContentViewV1001"
          },
          "configBackup2" : {
            "$ref" : "#/components/schemas/ConfigBackupContentViewV1001"
          }
        }
      },
      "ConfigBackupContent" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "config" : {
            "type" : "string"
          }
        }
      },
      "ConfigBackupContentViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "config" : {
            "type" : "string"
          }
        }
      },
      "ConfigBackupDtoV1001" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "pattern" : "^(?:(?!\").){1,64}$",
            "type" : "string"
          }
        }
      },
      "ConfigBackupView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "backupId" : {
            "type" : "string"
          },
          "backupType" : {
            "type" : "string"
          },
          "backupName" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "restoreStatus" : {
            "type" : "string"
          },
          "restoreTimestamp" : {
            "type" : "string"
          },
          "failureReason" : {
            "type" : "string"
          },
          "config" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "configBackupViewList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ConfigBackupView"
            }
          }
        }
      },
      "ConfigBackupViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "backupId" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "backupType" : {
            "type" : "string"
          },
          "config" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "restoreStatus" : {
            "type" : "string"
          },
          "restoreTimestamp" : {
            "type" : "string"
          },
          "failureReason" : {
            "type" : "string"
          }
        }
      },
      "ConfigsAaaServerBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AaaServerBo"
            }
          }
        }
      },
      "ConfigsAaaSettingBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AaaSettingBo"
            }
          }
        }
      },
      "ConfigsAclBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AclBo"
            }
          }
        }
      },
      "ConfigsAcxCliTemplateVariableBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AcxCliTemplateVariableBo"
            }
          }
        }
      },
      "ConfigsAuthenticationBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AuthenticationBo"
            }
          }
        }
      },
      "ConfigsCommonConfigBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CommonConfigBo"
            }
          }
        }
      },
      "ConfigsDefaultVlanBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DefaultVlanBo"
            }
          }
        }
      },
      "ConfigsDhcpClientBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DhcpClientBo"
            }
          }
        }
      },
      "ConfigsDhcpServerBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DhcpServerBo"
            }
          }
        }
      },
      "ConfigsIpConfigBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IpConfigBo"
            }
          }
        }
      },
      "ConfigsLagBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LagBo"
            }
          }
        }
      },
      "ConfigsMacAclBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MacAclBo"
            }
          }
        }
      },
      "ConfigsNetworkSegmentationAccessSwitchBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NetworkSegmentationAccessSwitchBo"
            }
          }
        }
      },
      "ConfigsNetworkSegmentationDistributionSwitchBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NetworkSegmentationDistributionSwitchBo"
            }
          }
        }
      },
      "ConfigsNtpServerBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NtpServerBo"
            }
          }
        }
      },
      "ConfigsPortDisableRecoveryBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortDisableRecoveryBo"
            }
          }
        }
      },
      "ConfigsSpecificSettingBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SpecificSettingBo"
            }
          }
        }
      },
      "ConfigsStackConfigBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StackConfigBo"
            }
          }
        }
      },
      "ConfigsStaticRouteBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StaticRouteBo"
            }
          }
        }
      },
      "ConfigsSwitchPortProfileBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchPortProfileBo"
            }
          }
        }
      },
      "ConfigsSyslogServerConfigBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SyslogServerConfigBo"
            }
          }
        }
      },
      "ConfigsVePortBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VePortBo"
            }
          }
        }
      },
      "ConfigsVlanBo" : {
        "type" : "object",
        "properties" : {
          "configList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VlanBo"
            }
          }
        }
      },
      "ConfigurationHistoryDetailRequest" : {
        "type" : "object",
        "properties" : {
          "filterByStatus" : {
            "type" : "string",
            "enum" : [ "ALL", "SUCCESS", "FAILED", "NOTIFY_SUCCESS" ]
          },
          "sortInfo" : {
            "$ref" : "#/components/schemas/ConfigurationHistoryDetailSortInfo"
          },
          "filterByConfigType" : {
            "type" : "string"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortField" : {
            "type" : "string",
            "enum" : [ "startTime", "configType", "dispatchStatus" ]
          },
          "sortOrder" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          },
          "filters" : {
            "$ref" : "#/components/schemas/ConfigurationHistoryFilter"
          },
          "orderBy" : {
            "type" : "string"
          }
        }
      },
      "ConfigurationHistoryDetailSortInfo" : {
        "type" : "object",
        "properties" : {
          "sortColumn" : {
            "type" : "string",
            "enum" : [ "startTime", "configType", "dispatchStatus" ]
          },
          "dir" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        }
      },
      "ConfigurationHistoryFilter" : {
        "type" : "object",
        "properties" : {
          "filterByStatus" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ALL", "SUCCESS", "FAILED", "NOTIFY_SUCCESS" ]
            }
          },
          "configType" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ConfigurationHistoryForVenueQueryRequestV1001" : {
        "type" : "object",
        "properties" : {
          "filterByStatus" : {
            "type" : "string",
            "enum" : [ "ALL", "SUCCESS", "FAILED", "NOTIFY_SUCCESS" ]
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortInfo" : {
            "$ref" : "#/components/schemas/ConfigurationHistoryDetailSortInfo"
          }
        }
      },
      "ConfigurationHistoryInfo" : {
        "type" : "object",
        "properties" : {
          "switchName" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "serialNumber" : {
            "type" : "string"
          },
          "configType" : {
            "type" : "string",
            "enum" : [ "PROVISIONING", "ACL", "VLAN", "STATIC_ROUTE", "PORT_CONFIGURATION", "OTHER", "CLI_PROVISIONING", "CLI_UPDATE", "VE_PORTS", "SPECIFIC_SETTING", "LAG", "DNS_SERVER", "AAA_SETTING", "AAA_SERVER", "MSP_CONFIGURATION", "SYSLOG_SERVER", "DHCP_SERVER", "DHCP_CLIENT", "CONFIG_BACKUP", "CONFIG_RESTORE", "ICX_SWITCH", "UNKNOWN", "TRUSTED_PORT", "STACK", "FIRMWARE_UPGRADE", "COLLECTD", "RUNNING_CONFIG", "IP_CONFIG", "OVERWRITE", "DEFAULT_VLAN", "TRIGGER_SYNC", "TROUBLESHOOTING", "COLLECT_CONFIG", "NOTIFY_ONLY", "VXLAN", "WEB_AUTHENTICATION", "ADMIN_PASSWORD", "CLI_NOTIFICATION", "PROFILE_SYNC", "PROFILE_ASSOCIATE", "POWER_CYCLE_PORT", "DEPLOY_HISTORY", "PROFILE_TEMPLATE_SYNC", "CLI_PROFILE_TEMPLATE_SYNC", "PROFILE_TEMPLATE_ASSOCIATE", "PROFILE_TEMPLATE_APPLY", "CLI_PROFILE_TEMPLATE_APPLY", "CLI_TEMPLATE_SYNC", "CLI_TEMPLATE_ASSOCIATE", "NTP_SERVER", "MSP_ACTIVATION", "TRIGGER_REBOOT", "AUTHENTICATION", "AUTHENTICATION_PROFILE", "PORT_PROFILE", "LLDP_TLV", "MAC_OUI", "PORT_PROFILE_SYNC", "PORT_DISABLE_RECOVERY", "MAC_ACL" ]
          },
          "dispatchStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "IN_PROGRESS", "SUCCESS", "FAILED", "FAILED_NO_RESPONSE", "FAILED_SAVE_FLASH", "OFFLINE", "NO_CONFIG_CHANGE", "APPLIED", "SWITCH_NOT_FOUND", "NOTIFY_FAILED", "NOTIFY_SUCCESS", "NOTIFY_IN_PROGRESS" ]
          },
          "clis" : {
            "type" : "string"
          },
          "numberOfErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "transactionId" : {
            "type" : "string"
          },
          "dispatchFailedReason" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DispatchFailedReason"
            }
          }
        }
      },
      "ConfigurationHistoryInfoViewV1001" : {
        "type" : "object",
        "properties" : {
          "switchName" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "serialNumber" : {
            "type" : "string"
          },
          "configType" : {
            "type" : "string",
            "enum" : [ "PROVISIONING", "ACL", "VLAN", "STATIC_ROUTE", "PORT_CONFIGURATION", "CLI_PROVISIONING", "CLI_UPDATE", "VE_PORTS", "SPECIFIC_SETTING", "LAG", "LAG_SETTINGS", "MODEL", "DNS_SERVER", "AAA_SETTING", "AAA_SERVER", "MSP_CONFIGURATION", "SYSLOG_SERVER", "DHCP_SERVER", "TRUSTED_PORT", "STACK", "IP_CONFIG", "OVERWRITE", "DEFAULT_VLAN", "TRIGGER_SYNC", "COLLECT_CONFIG", "VXLAN", "WEB_AUTHENTICATION", "ADMIN_PASSWORD", "NTP_SERVER", "AUTHENTICATION", "PORT_PROFILE", "PORT_DISABLE_RECOVERY", "MAC_ACL" ]
          },
          "dispatchStatus" : {
            "type" : "string",
            "enum" : [ "PENDING", "IN_PROGRESS", "SUCCESS", "FAILED", "FAILED_NO_RESPONSE", "FAILED_SAVE_FLASH", "OFFLINE", "NO_CONFIG_CHANGE", "APPLIED", "SWITCH_NOT_FOUND", "NOTIFY_FAILED", "NOTIFY_SUCCESS", "NOTIFY_IN_PROGRESS" ]
          },
          "clis" : {
            "type" : "string"
          },
          "numberOfErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "transactionId" : {
            "type" : "string"
          },
          "dispatchFailedReason" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DispatchFailedReasonViewV1001"
            }
          }
        }
      },
      "ConfigurationHistoryQueryRequestV1001" : {
        "type" : "object",
        "properties" : {
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortField" : {
            "type" : "string",
            "enum" : [ "startTime", "configType", "dispatchStatus" ]
          },
          "sortOrder" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          },
          "filterByConfigType" : {
            "type" : "string",
            "enum" : [ "PROVISIONING", "ACL", "VLAN", "STATIC_ROUTE", "PORT_CONFIGURATION", "CLI_PROVISIONING", "CLI_UPDATE", "VE_PORTS", "SPECIFIC_SETTING", "LAG", "LAG_SETTINGS", "MODEL", "DNS_SERVER", "AAA_SETTING", "AAA_SERVER", "MSP_CONFIGURATION", "SYSLOG_SERVER", "DHCP_SERVER", "TRUSTED_PORT", "STACK", "IP_CONFIG", "OVERWRITE", "DEFAULT_VLAN", "TRIGGER_SYNC", "COLLECT_CONFIG", "VXLAN", "WEB_AUTHENTICATION", "ADMIN_PASSWORD", "NTP_SERVER", "AUTHENTICATION", "PORT_PROFILE", "PORT_DISABLE_RECOVERY", "MAC_ACL" ]
          }
        }
      },
      "ConfigurationHistoryRequest" : {
        "type" : "object",
        "properties" : {
          "sortInfo" : {
            "$ref" : "#/components/schemas/SortInfo"
          },
          "filterByConfigType" : {
            "type" : "string"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortField" : {
            "type" : "string",
            "enum" : [ "startTime" ]
          },
          "sortOrder" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          },
          "filters" : {
            "$ref" : "#/components/schemas/ConfigurationHistoryFilter"
          }
        }
      },
      "ConfigurationHistoryVenueInfo" : {
        "type" : "object",
        "properties" : {
          "configType" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PROVISIONING", "ACL", "VLAN", "STATIC_ROUTE", "PORT_CONFIGURATION", "OTHER", "CLI_PROVISIONING", "CLI_UPDATE", "VE_PORTS", "SPECIFIC_SETTING", "LAG", "DNS_SERVER", "AAA_SETTING", "AAA_SERVER", "MSP_CONFIGURATION", "SYSLOG_SERVER", "DHCP_SERVER", "DHCP_CLIENT", "CONFIG_BACKUP", "CONFIG_RESTORE", "ICX_SWITCH", "UNKNOWN", "TRUSTED_PORT", "STACK", "FIRMWARE_UPGRADE", "COLLECTD", "RUNNING_CONFIG", "IP_CONFIG", "OVERWRITE", "DEFAULT_VLAN", "TRIGGER_SYNC", "TROUBLESHOOTING", "COLLECT_CONFIG", "NOTIFY_ONLY", "VXLAN", "WEB_AUTHENTICATION", "ADMIN_PASSWORD", "CLI_NOTIFICATION", "PROFILE_SYNC", "PROFILE_ASSOCIATE", "POWER_CYCLE_PORT", "DEPLOY_HISTORY", "PROFILE_TEMPLATE_SYNC", "CLI_PROFILE_TEMPLATE_SYNC", "PROFILE_TEMPLATE_ASSOCIATE", "PROFILE_TEMPLATE_APPLY", "CLI_PROFILE_TEMPLATE_APPLY", "CLI_TEMPLATE_SYNC", "CLI_TEMPLATE_ASSOCIATE", "NTP_SERVER", "MSP_ACTIVATION", "TRIGGER_REBOOT", "AUTHENTICATION", "AUTHENTICATION_PROFILE", "PORT_PROFILE", "LLDP_TLV", "MAC_OUI", "PORT_PROFILE_SYNC", "PORT_DISABLE_RECOVERY", "MAC_ACL" ]
            }
          },
          "numberOfFailed" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numberOfSuccess" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numberOfSwitches" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numberOfNotifySuccess" : {
            "type" : "integer",
            "format" : "int32"
          },
          "transactionId" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ConfigurationHistoryVenueInfoViewV1001" : {
        "type" : "object",
        "properties" : {
          "configType" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PROVISIONING", "ACL", "VLAN", "STATIC_ROUTE", "PORT_CONFIGURATION", "CLI_PROVISIONING", "CLI_UPDATE", "VE_PORTS", "SPECIFIC_SETTING", "LAG", "LAG_SETTINGS", "MODEL", "DNS_SERVER", "AAA_SETTING", "AAA_SERVER", "MSP_CONFIGURATION", "SYSLOG_SERVER", "DHCP_SERVER", "TRUSTED_PORT", "STACK", "IP_CONFIG", "OVERWRITE", "DEFAULT_VLAN", "TRIGGER_SYNC", "COLLECT_CONFIG", "VXLAN", "WEB_AUTHENTICATION", "ADMIN_PASSWORD", "NTP_SERVER", "AUTHENTICATION", "PORT_PROFILE", "PORT_DISABLE_RECOVERY", "MAC_ACL" ]
            }
          },
          "numberOfFailed" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numberOfSuccess" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numberOfSwitches" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numberOfNotifySuccess" : {
            "type" : "integer",
            "format" : "int32"
          },
          "transactionId" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ConfigurationHistoryVenueView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "list" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ConfigurationHistoryVenueInfo"
            }
          }
        }
      },
      "ConfigurationHistoryVenueViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "list" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ConfigurationHistoryVenueInfoViewV1001"
            }
          }
        }
      },
      "ConfigurationHistoryView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "list" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ConfigurationHistoryInfo"
            }
          }
        }
      },
      "ConfigurationHistoryViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "list" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ConfigurationHistoryInfoViewV1001"
            }
          }
        }
      },
      "DefaultVlanBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "vlanName" : {
            "type" : "string"
          },
          "rootBridgeFamilyId" : {
            "type" : "string",
            "enum" : [ "__NULL", "ICX7150", "ICX7250", "ICX7650", "ICX7850", "ICX7550", "ICX8200", "ICX8100" ]
          },
          "ipv4DhcpSnooping" : {
            "type" : "boolean"
          },
          "arpInspection" : {
            "type" : "boolean"
          },
          "igmpSnooping" : {
            "type" : "string",
            "enum" : [ "active", "passive", "none" ]
          },
          "multicastVersion" : {
            "maximum" : 3,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "spanningTreeProtocol" : {
            "type" : "string",
            "enum" : [ "rstp", "stp", "none" ]
          },
          "spanningTreePriority" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "managementVlan" : {
            "type" : "boolean"
          },
          "switchVlanPortModels" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchVlanPortModelBo"
            }
          },
          "switchId" : {
            "type" : "string"
          },
          "rapidSpanningTreeProtocol" : {
            "type" : "boolean"
          },
          "defaultVlan" : {
            "type" : "boolean"
          }
        }
      },
      "DeviceRequest" : {
        "type" : "object",
        "properties" : {
          "deviceRequestAction" : {
            "type" : "string",
            "enum" : [ "sync", "reboot", "syncAdminPassword" ]
          },
          "switchIdList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "DeviceRequestViewV1001" : {
        "type" : "object",
        "properties" : {
          "deviceRequestAction" : {
            "type" : "string",
            "enum" : [ "sync", "reboot", "syncAdminPassword" ]
          },
          "switchIdList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "DhcpClientBo" : {
        "type" : "object",
        "properties" : {
          "dhcpClientEnabled" : {
            "type" : "boolean"
          },
          "veId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DhcpOption" : {
        "type" : "object",
        "properties" : {
          "seq" : {
            "type" : "integer",
            "format" : "int32"
          },
          "value" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ASCII", "HEX", "IP", "INTEGER", "BOOLEAN" ]
          }
        }
      },
      "DhcpOptionBo" : {
        "type" : "object",
        "properties" : {
          "seq" : {
            "type" : "integer",
            "format" : "int32"
          },
          "value" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ASCII", "HEX", "IP", "INTEGER", "BOOLEAN" ]
          }
        }
      },
      "DhcpOptionViewV1001" : {
        "type" : "object",
        "properties" : {
          "seq" : {
            "type" : "integer",
            "format" : "int32"
          },
          "value" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ASCII", "HEX", "IP", "INTEGER", "BOOLEAN" ]
          }
        }
      },
      "DhcpServerBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "poolName" : {
            "type" : "string"
          },
          "network" : {
            "type" : "string"
          },
          "defaultRouterIp" : {
            "type" : "string"
          },
          "excludedEnd" : {
            "type" : "string"
          },
          "excludedStart" : {
            "type" : "string"
          },
          "leaseDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "leaseHrs" : {
            "type" : "integer",
            "format" : "int32"
          },
          "leaseMins" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dhcpOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DhcpOptionBo"
            }
          },
          "subnetAddress" : {
            "pattern" : "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type" : "string"
          },
          "subnetMask" : {
            "pattern" : "^(?:(?:(?:255\\.){3}(?:252|248|240|224|192|128|0+))|(?:(?:255\\.){2}(?:255|254|252|248|240|224|192|128|0+)\\.0)|(?:(?:255\\.)(?:255|254|252|248|240|224|192|128|0+)(?:\\.0+){2})|(?:(?:255|254|252|248|240|224|192|128|0+)(?:\\.0+){3}))$",
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "prefixLength" : {
            "type" : "string"
          },
          "dhcpServerEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "DhcpServerQueryRequest" : {
        "type" : "object",
        "properties" : {
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortField" : {
            "type" : "string"
          },
          "sortOrder" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          },
          "venueId" : {
            "type" : "string"
          }
        }
      },
      "DhcpServerResponseV1001" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/DhcpServerViewV1001"
          }
        }
      },
      "DhcpServerStateRequest" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "type" : "boolean"
          }
        }
      },
      "DhcpServerStateViewV1001" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "type" : "boolean"
          }
        }
      },
      "DhcpServerView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "poolName" : {
            "type" : "string"
          },
          "network" : {
            "type" : "string"
          },
          "defaultRouterIp" : {
            "type" : "string"
          },
          "excludedEnd" : {
            "type" : "string"
          },
          "excludedStart" : {
            "type" : "string"
          },
          "leaseDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "leaseHrs" : {
            "type" : "integer",
            "format" : "int32"
          },
          "leaseMins" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dhcpOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DhcpOption"
            }
          },
          "subnetAddress" : {
            "type" : "string"
          },
          "subnetMask" : {
            "type" : "string"
          }
        }
      },
      "DhcpServerViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "poolName" : {
            "type" : "string"
          },
          "defaultRouterIp" : {
            "type" : "string"
          },
          "excludedEnd" : {
            "type" : "string"
          },
          "excludedStart" : {
            "type" : "string"
          },
          "leaseDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "leaseHrs" : {
            "type" : "integer",
            "format" : "int32"
          },
          "leaseMins" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dhcpOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DhcpOptionViewV1001"
            }
          },
          "subnetAddress" : {
            "type" : "string"
          },
          "subnetMask" : {
            "type" : "string"
          }
        }
      },
      "DispatchFailedReason" : {
        "type" : "object",
        "properties" : {
          "lineNumber" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "DispatchFailedReasonViewV1001" : {
        "type" : "object",
        "properties" : {
          "lineNumber" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "EmptyResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/EmptyView"
          }
        }
      },
      "EmptyView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          },
          "suggestion" : {
            "type" : "string"
          },
          "object" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          }
        }
      },
      "ErrorCode" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          },
          "suggestion" : {
            "type" : "string"
          }
        }
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            }
          },
          "downloadUrl" : {
            "type" : "string"
          }
        }
      },
      "FamilyModelSlot" : {
        "type" : "object",
        "properties" : {
          "slotNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "enable" : {
            "type" : "boolean"
          },
          "option" : {
            "type" : "string"
          }
        }
      },
      "FamilyModelSlotBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "slotNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "enable" : {
            "type" : "boolean"
          },
          "option" : {
            "type" : "string"
          }
        }
      },
      "FamilyModelSlotViewV1001" : {
        "type" : "object",
        "properties" : {
          "slotNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "enable" : {
            "type" : "boolean"
          },
          "option" : {
            "type" : "string"
          }
        }
      },
      "FilterableQueryRequest" : {
        "type" : "object",
        "properties" : {
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortField" : {
            "type" : "string"
          },
          "sortOrder" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          },
          "filterType" : {
            "type" : "string",
            "deprecated" : true
          },
          "filters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "IcxSwitchResponseV1001" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/IcxSwitchViewV1001"
          }
        }
      },
      "IcxSwitchView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "venueId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "string"
          },
          "enableStack" : {
            "type" : "boolean"
          },
          "igmpSnooping" : {
            "type" : "string",
            "enum" : [ "active", "passive", "none" ]
          },
          "jumboMode" : {
            "type" : "boolean"
          },
          "position" : {
            "$ref" : "#/components/schemas/SwitchPositionView"
          },
          "spanningTreePriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "softDeletedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "stackMembers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StackMembersView"
            }
          },
          "ipAddressInterfaceType" : {
            "type" : "string",
            "enum" : [ "NONE", "PORT", "VE", "MANAGEMENT" ]
          },
          "ipAddressInterface" : {
            "type" : "string"
          },
          "ipAddressType" : {
            "type" : "string",
            "enum" : [ "static", "dynamic" ]
          },
          "ipAddress" : {
            "type" : "string"
          },
          "subnetMask" : {
            "type" : "string"
          },
          "defaultGateway" : {
            "type" : "string"
          },
          "firmwareVersion" : {
            "type" : "string"
          },
          "previousMembers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "lastDataSyncTriggerTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastDataSyncTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "syncDataId" : {
            "type" : "string"
          },
          "syncDataStartTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "syncDataEndTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "dhcpClientEnabled" : {
            "type" : "boolean"
          },
          "dhcpServerEnabled" : {
            "type" : "boolean"
          },
          "trustPorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "initialVlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "stackConfigTimestamp" : {
            "type" : "string"
          },
          "specifiedType" : {
            "type" : "string",
            "enum" : [ "AUTO", "SWITCH", "ROUTER" ]
          },
          "rearModule" : {
            "type" : "string"
          },
          "vlanCustomize" : {
            "type" : "boolean"
          }
        }
      },
      "IcxSwitchViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "enableStack" : {
            "type" : "boolean"
          },
          "igmpSnooping" : {
            "type" : "string",
            "enum" : [ "active", "passive", "none" ]
          },
          "jumboMode" : {
            "type" : "boolean"
          },
          "spanningTreePriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "stackMembers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StackMembersViewV1001"
            }
          },
          "ipAddressInterfaceType" : {
            "type" : "string",
            "enum" : [ "NONE", "PORT", "VE", "MANAGEMENT" ]
          },
          "ipAddressInterface" : {
            "type" : "string"
          },
          "ipAddressType" : {
            "type" : "string",
            "enum" : [ "static", "dynamic" ]
          },
          "ipAddress" : {
            "type" : "string"
          },
          "subnetMask" : {
            "type" : "string"
          },
          "defaultGateway" : {
            "type" : "string"
          },
          "dhcpClientEnabled" : {
            "type" : "boolean"
          },
          "dhcpServerEnabled" : {
            "type" : "boolean"
          },
          "initialVlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "specifiedType" : {
            "type" : "string",
            "enum" : [ "AUTO", "SWITCH", "ROUTER" ]
          },
          "rearModule" : {
            "type" : "string"
          },
          "vlanCustomize" : {
            "type" : "boolean"
          }
        }
      },
      "IpConfigBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "serialNumber" : {
            "type" : "string"
          },
          "defaultGateway" : {
            "type" : "string"
          },
          "ipAddress" : {
            "type" : "string"
          },
          "subnetMask" : {
            "type" : "string"
          },
          "ipAddressType" : {
            "type" : "string",
            "enum" : [ "static", "dynamic" ]
          },
          "ipAddressInterface" : {
            "type" : "string"
          }
        }
      },
      "Ipv6" : {
        "type" : "object",
        "properties" : {
          "addr" : {
            "type" : "string"
          },
          "pref_len" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LagBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "lagId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "pattern" : "^(?:(?!\").){1,64}$",
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "static", "dynamic" ]
          },
          "ports" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "taggedVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedVlan" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "addPorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "removePorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "portVlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LagPortVlanBo"
            }
          },
          "portAddVlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LagPortVlanBo"
            }
          },
          "lastName" : {
            "type" : "string"
          },
          "defaultVlanId" : {
            "type" : "string"
          },
          "originalUntaggedVlan" : {
            "type" : "string"
          },
          "forceUpPort" : {
            "type" : "string"
          },
          "dynamicLag" : {
            "type" : "boolean"
          }
        }
      },
      "LagDtoV1001" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "static", "dynamic" ]
          },
          "ports" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "taggedVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedVlan" : {
            "type" : "string"
          },
          "forceUpPort" : {
            "type" : "string"
          }
        }
      },
      "LagPortVlanBo" : {
        "type" : "object",
        "properties" : {
          "portId" : {
            "type" : "string"
          },
          "taggedVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedVlan" : {
            "type" : "string"
          },
          "needRemoveUntaggedDefaultVlan" : {
            "type" : "boolean"
          }
        }
      },
      "LagResponseV1001" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/LagViewV1001"
          }
        }
      },
      "LagView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "lagId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "pattern" : "^(?:(?!\").){1,64}$",
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "static", "dynamic" ]
          },
          "ports" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "taggedVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedVlan" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "tenantId" : {
            "type" : "string"
          },
          "addPorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "removePorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "portVlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LagPortVlanBo"
            }
          },
          "portAddVlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LagPortVlanBo"
            }
          },
          "lastName" : {
            "type" : "string"
          },
          "realRemove" : {
            "type" : "boolean"
          },
          "defaultVlanId" : {
            "type" : "string"
          },
          "originalUntaggedVlan" : {
            "type" : "string"
          },
          "lagViewList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LagView"
            }
          }
        }
      },
      "LagViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "lagId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "static", "dynamic" ]
          },
          "ports" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "taggedVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedVlan" : {
            "type" : "string"
          },
          "forceUpPort" : {
            "type" : "string"
          }
        }
      },
      "LldpQosBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "applicationType" : {
            "type" : "string",
            "enum" : [ "GUEST_VOICE", "GUEST_VOICE_SIGNALING", "SOFTPHONE_VOICE", "STREAMING_VIDEO", "VIDEO_CONFERENCING", "VIDEO_SIGNALING", "VOICE", "VOICE_SIGNALING", "NONE" ]
          },
          "qosVlanType" : {
            "type" : "string",
            "enum" : [ "PRIORITY_TAGGED", "TAGGED", "UNTAGGED" ]
          },
          "vlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dscp" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hasTaggedVlan" : {
            "type" : "boolean"
          },
          "hasUntaggedVlan" : {
            "type" : "boolean"
          }
        }
      },
      "LldpQosView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "applicationType" : {
            "type" : "string",
            "enum" : [ "GUEST_VOICE", "GUEST_VOICE_SIGNALING", "SOFTPHONE_VOICE", "STREAMING_VIDEO", "VIDEO_CONFERENCING", "VIDEO_SIGNALING", "VOICE", "VOICE_SIGNALING", "NONE" ]
          },
          "qosVlanType" : {
            "type" : "string",
            "enum" : [ "PRIORITY_TAGGED", "TAGGED", "UNTAGGED" ]
          },
          "vlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dscp" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LldpQosViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "applicationType" : {
            "type" : "string",
            "enum" : [ "GUEST_VOICE", "GUEST_VOICE_SIGNALING", "SOFTPHONE_VOICE", "STREAMING_VIDEO", "VIDEO_CONFERENCING", "VIDEO_SIGNALING", "VOICE", "VOICE_SIGNALING", "NONE" ]
          },
          "qosVlanType" : {
            "type" : "string",
            "enum" : [ "PRIORITY_TAGGED", "TAGGED", "UNTAGGED" ]
          },
          "vlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dscp" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LldpTlv" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "systemName" : {
            "type" : "string"
          },
          "systemDescription" : {
            "type" : "string"
          },
          "nameMatchingType" : {
            "type" : "string",
            "enum" : [ "FULL_MAPPING", "BEGIN", "INCLUDE" ]
          },
          "descMatchingType" : {
            "type" : "string",
            "enum" : [ "FULL_MAPPING", "BEGIN", "INCLUDE" ]
          },
          "portProfiles" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortProfile"
            }
          },
          "switchPortProfiles" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchPortProfile"
            }
          },
          "appliedLevel" : {
            "type" : "string",
            "enum" : [ "TENANT", "SWITCH" ]
          }
        }
      },
      "LldpTlvBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "systemName" : {
            "type" : "string"
          },
          "systemDescription" : {
            "type" : "string"
          },
          "nameMatchingType" : {
            "type" : "string",
            "enum" : [ "FULL_MAPPING", "BEGIN", "INCLUDE" ]
          },
          "descMatchingType" : {
            "type" : "string",
            "enum" : [ "FULL_MAPPING", "BEGIN", "INCLUDE" ]
          }
        }
      },
      "LoopbackConfigBo" : {
        "type" : "object",
        "properties" : {
          "switchId" : {
            "type" : "string"
          },
          "loopbackInterfaceId" : {
            "type" : "string"
          },
          "loopbackInterfaceIp" : {
            "type" : "string"
          },
          "loopbackInterfaceSubnetMask" : {
            "type" : "string"
          }
        }
      },
      "MacAclBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "macAclRules" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MacAclRuleBo"
            }
          },
          "customized" : {
            "type" : "boolean"
          },
          "usePolicyAndProfileSetting" : {
            "type" : "boolean"
          }
        }
      },
      "MacAclRuleBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "permit", "deny" ]
          },
          "sourceAddress" : {
            "type" : "string"
          },
          "sourceMask" : {
            "type" : "string"
          },
          "destinationAddress" : {
            "type" : "string"
          },
          "destinationMask" : {
            "type" : "string"
          }
        }
      },
      "MacOui" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "oui" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "appliedLevel" : {
            "type" : "string",
            "enum" : [ "TENANT", "SWITCH" ]
          },
          "portProfiles" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortProfile"
            }
          },
          "switchPortProfiles" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchPortProfile"
            }
          }
        }
      },
      "MacOuiBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "oui" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          }
        }
      },
      "ModelCurrentVersionViewV1001" : {
        "type" : "object",
        "properties" : {
          "modelGroup" : {
            "type" : "string",
            "enum" : [ "ICX71", "ICX7X", "ICX82", "ICX81", "ICX71E" ]
          },
          "versions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ModelSwitchCountViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "modelGroup" : {
            "type" : "string",
            "enum" : [ "ICX71", "ICX7X", "ICX82", "ICX81", "ICX71E" ]
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ModelVersionViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "modelGroup" : {
            "type" : "string",
            "enum" : [ "ICX71", "ICX7X", "ICX82", "ICX81", "ICX71E" ]
          },
          "version" : {
            "type" : "string"
          }
        }
      },
      "NetworkSegmentationAccessSwitchBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenantId" : {
            "type" : "string"
          },
          "nsgId" : {
            "type" : "string"
          },
          "webAuthPageType" : {
            "type" : "string",
            "enum" : [ "TEMPLATE", "USER_DEFINED" ]
          },
          "templateId" : {
            "type" : "string"
          },
          "vlanId" : {
            "type" : "string"
          },
          "uplinkInfo" : {
            "$ref" : "#/components/schemas/NetworkSegmentationUplinkInfoBo"
          },
          "webAuthUserIdLabel" : {
            "type" : "string"
          },
          "webAuthPasswordLabel" : {
            "type" : "string"
          },
          "webAuthCustomTitle" : {
            "type" : "string"
          },
          "webAuthCustomTop" : {
            "type" : "string"
          },
          "webAuthCustomLoginButton" : {
            "type" : "string"
          },
          "webAuthCustomBottom" : {
            "type" : "string"
          },
          "webAuthShowUserId" : {
            "type" : "boolean"
          },
          "distributionSwitchId" : {
            "type" : "string"
          },
          "vlanPortTagged" : {
            "type" : "boolean"
          },
          "accessSwitchMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/NetworkSegmentationAccessSwitchBo"
            }
          }
        }
      },
      "NetworkSegmentationDistributionSwitchBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenantId" : {
            "type" : "string"
          },
          "nsgId" : {
            "type" : "string"
          },
          "gatewayName" : {
            "type" : "string"
          },
          "loopbackInterfaceId" : {
            "type" : "string"
          },
          "loopbackInterfaceIp" : {
            "type" : "string"
          },
          "loopbackInterfaceSubnetMask" : {
            "type" : "string"
          },
          "siteKeepAlive" : {
            "type" : "string"
          },
          "siteRetry" : {
            "type" : "string"
          },
          "siteName" : {
            "type" : "string"
          },
          "siteIp" : {
            "type" : "string"
          },
          "forwardingProfile" : {
            "type" : "string"
          },
          "vlans" : {
            "type" : "string"
          },
          "expandVlanList" : {
            "type" : "string"
          },
          "loopbackConfigList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LoopbackConfigBo"
            }
          },
          "vlanVniMappingList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VlanVniMappingItem"
            }
          },
          "siteExtendVlan" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "siteConnection" : {
            "type" : "string"
          },
          "siteActive" : {
            "type" : "string"
          },
          "family" : {
            "type" : "string"
          },
          "dispatchMessage" : {
            "type" : "string"
          },
          "flagFromOriginal" : {
            "$ref" : "#/components/schemas/NetworkSegmentationDistributionSwitchBo"
          }
        }
      },
      "NetworkSegmentationUplinkInfoBo" : {
        "type" : "object",
        "properties" : {
          "uplinkType" : {
            "type" : "string",
            "enum" : [ "PORT", "LAG" ]
          },
          "uplinkId" : {
            "type" : "string"
          }
        }
      },
      "NtpServerBo" : {
        "type" : "object",
        "properties" : {
          "ntpServer" : {
            "type" : "string"
          }
        }
      },
      "OperationResponseBaseViewObject" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/BaseViewObject"
          }
        }
      },
      "PortDisableRecoveryBo" : {
        "type" : "object",
        "properties" : {
          "bpduGuard" : {
            "type" : "boolean"
          },
          "loopDetection" : {
            "type" : "boolean"
          },
          "packetInError" : {
            "type" : "boolean"
          },
          "loamRemoteCriticalEvent" : {
            "type" : "boolean"
          },
          "pvstplusProtect" : {
            "type" : "boolean"
          },
          "bpduTunnelThreshold" : {
            "type" : "boolean"
          },
          "lagOperationalSpeedMismatch" : {
            "type" : "boolean"
          },
          "allCause" : {
            "type" : "boolean"
          },
          "recoveryInterval" : {
            "maximum" : 65535,
            "minimum" : 10,
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PortDtoV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "ports" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "ignoreFields" : {
            "type" : "string"
          },
          "revert" : {
            "type" : "boolean"
          },
          "portSpeed" : {
            "type" : "string",
            "enum" : [ "__NULL", "UNSET", "NONE", "AUTO", "TEN_M_FULL", "TEN_M_HALF", "ONE_HUNDRED_M_FULL", "ONE_HUNDRED_M_HALF", "ONE_G_FULL", "ONE_G_FULL_MASTER", "ONE_G_FULL_SLAVE", "TWO_POINT_FIVE_G_FULL", "TWO_POINT_FIVE_G_FULL_MASTER", "TWO_POINT_FIVE_G_FULL_SLAVE", "FIVE_G_FULL", "FIVE_G_FULL_MASTER", "FIVE_G_FULL_SLAVE", "TEN_G_FULL", "TEN_G_FULL_MASTER", "TEN_G_FULL_SLAVE", "TWENTY_FIVE_G_FULL", "FORTY_G_FULL", "ONE_HUNDRED_G_FULL", "OPTIC" ]
          },
          "poeClass" : {
            "type" : "string",
            "enum" : [ "__NULL", "UNSET", "ZERO", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT" ]
          },
          "poeBudget" : {
            "type" : "number",
            "format" : "float"
          },
          "poePriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "poeEnable" : {
            "type" : "boolean"
          },
          "poeCapability" : {
            "type" : "boolean"
          },
          "portEnable" : {
            "type" : "boolean"
          },
          "portProtected" : {
            "type" : "boolean"
          },
          "dhcpSnoopingTrust" : {
            "type" : "boolean"
          },
          "arpInspectionTrust" : {
            "type" : "boolean"
          },
          "rstpAdminEdgePort" : {
            "type" : "boolean"
          },
          "adminPtToPt" : {
            "type" : "string",
            "enum" : [ "AUTO", "DISABLE", "ENABLE" ]
          },
          "stpBpduGuard" : {
            "type" : "boolean"
          },
          "stpRootGuard" : {
            "type" : "boolean"
          },
          "ipsg" : {
            "type" : "boolean"
          },
          "lldpEnable" : {
            "type" : "boolean"
          },
          "lldpQos" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LldpQosViewV1001"
            }
          },
          "taggedVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedVlan" : {
            "type" : "string"
          },
          "voiceVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "ingressAcl" : {
            "type" : "string"
          },
          "egressAcl" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "string"
          },
          "flexibleAuthenticationEnabled" : {
            "type" : "boolean"
          },
          "authenticationType" : {
            "type" : "string",
            "enum" : [ "__NULL", "802.1x", "macauth", "802.1x_and_macauth" ]
          },
          "authenticationCustomize" : {
            "type" : "boolean"
          },
          "authenticationProfileId" : {
            "type" : "string"
          },
          "changeAuthOrder" : {
            "type" : "boolean"
          },
          "dot1xPortControl" : {
            "type" : "string",
            "enum" : [ "__NULL", "auto", "force_authorized", "force_unauthorized", "" ]
          },
          "authDefaultVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "restrictedVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "criticalVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "guestVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "authFailAction" : {
            "type" : "string",
            "enum" : [ "__NULL", "block", "restricted_vlan" ]
          },
          "authTimeoutAction" : {
            "type" : "string",
            "enum" : [ "__NULL", "none", "failure", "success", "critical_vlan" ]
          },
          "switchPortProfileId" : {
            "type" : "string"
          },
          "portSecurity" : {
            "type" : "boolean"
          },
          "portSecurityMaxEntries" : {
            "type" : "integer",
            "format" : "int32"
          },
          "switchMacAcl" : {
            "type" : "string"
          },
          "poeScheduler" : {
            "$ref" : "#/components/schemas/SchedulerViewV1000"
          }
        }
      },
      "PortProfile" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "DYNAMIC", "STATIC" ]
          },
          "taggedVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedVlan" : {
            "type" : "integer",
            "format" : "int32"
          },
          "poeEnable" : {
            "type" : "boolean"
          },
          "poeClass" : {
            "type" : "string",
            "enum" : [ "__NULL", "UNSET", "ZERO", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT" ]
          },
          "poePriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "portSpeed" : {
            "type" : "string",
            "enum" : [ "__NULL", "UNSET", "NONE", "AUTO", "TEN_M_FULL", "TEN_M_HALF", "ONE_HUNDRED_M_FULL", "ONE_HUNDRED_M_HALF", "ONE_G_FULL", "ONE_G_FULL_MASTER", "ONE_G_FULL_SLAVE", "TWO_POINT_FIVE_G_FULL", "TWO_POINT_FIVE_G_FULL_MASTER", "TWO_POINT_FIVE_G_FULL_SLAVE", "FIVE_G_FULL", "FIVE_G_FULL_MASTER", "FIVE_G_FULL_SLAVE", "TEN_G_FULL", "TEN_G_FULL_MASTER", "TEN_G_FULL_SLAVE", "TWENTY_FIVE_G_FULL", "FORTY_G_FULL", "ONE_HUNDRED_G_FULL", "OPTIC" ]
          },
          "ingressAcl" : {
            "type" : "string"
          },
          "egressAcl" : {
            "type" : "string"
          },
          "radius" : {
            "type" : "string"
          },
          "portProtected" : {
            "type" : "boolean"
          },
          "rstpAdminEdgePort" : {
            "type" : "boolean"
          },
          "stpBpduGuard" : {
            "type" : "boolean"
          },
          "stpRootGuard" : {
            "type" : "boolean"
          },
          "dhcpSnoopingTrust" : {
            "type" : "boolean"
          },
          "ipsg" : {
            "type" : "boolean"
          },
          "dot1x" : {
            "type" : "boolean"
          },
          "macAuth" : {
            "type" : "boolean"
          },
          "lldpTlvs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LldpTlv"
            }
          },
          "macOuis" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MacOui"
            }
          },
          "profileMappings" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortProfileAndProfileMapping"
            }
          }
        }
      },
      "PortProfileAndProfileMapping" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "portProfile" : {
            "$ref" : "#/components/schemas/PortProfile"
          },
          "models" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
            }
          },
          "portProfileId" : {
            "type" : "string"
          },
          "regularProfileId" : {
            "type" : "string"
          },
          "portProfileName" : {
            "type" : "string"
          }
        }
      },
      "PortProfileAndProfileMappingBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "models" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
            }
          },
          "portProfileId" : {
            "type" : "string"
          }
        }
      },
      "PortRequestV1001" : {
        "type" : "object",
        "properties" : {
          "switchId" : {
            "type" : "string"
          },
          "ports" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "PortResponseV1001" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/PortViewV1001"
          }
        }
      },
      "PortView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "dhcpSnoopingTrust" : {
            "type" : "boolean"
          },
          "arpInspectionTrust" : {
            "type" : "boolean"
          },
          "ignoreFields" : {
            "type" : "string"
          },
          "ipsg" : {
            "type" : "boolean"
          },
          "lldpEnable" : {
            "type" : "boolean"
          },
          "poeBudget" : {
            "type" : "number",
            "format" : "float"
          },
          "poeCapability" : {
            "type" : "boolean"
          },
          "poeClass" : {
            "type" : "string",
            "enum" : [ "__NULL", "UNSET", "ZERO", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT" ]
          },
          "poeEnable" : {
            "type" : "boolean"
          },
          "poePriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "portEnable" : {
            "type" : "boolean"
          },
          "portProtected" : {
            "type" : "boolean"
          },
          "portSpeed" : {
            "type" : "string",
            "enum" : [ "__NULL", "UNSET", "NONE", "AUTO", "TEN_M_FULL", "TEN_M_HALF", "ONE_HUNDRED_M_FULL", "ONE_HUNDRED_M_HALF", "ONE_G_FULL", "ONE_G_FULL_MASTER", "ONE_G_FULL_SLAVE", "TWO_POINT_FIVE_G_FULL", "TWO_POINT_FIVE_G_FULL_MASTER", "TWO_POINT_FIVE_G_FULL_SLAVE", "FIVE_G_FULL", "FIVE_G_FULL_MASTER", "FIVE_G_FULL_SLAVE", "TEN_G_FULL", "TEN_G_FULL_MASTER", "TEN_G_FULL_SLAVE", "TWENTY_FIVE_G_FULL", "FORTY_G_FULL", "ONE_HUNDRED_G_FULL", "OPTIC" ]
          },
          "ports" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "revert" : {
            "type" : "boolean"
          },
          "rstpAdminEdgePort" : {
            "type" : "boolean"
          },
          "adminPtToPt" : {
            "type" : "string",
            "enum" : [ "AUTO", "DISABLE", "ENABLE" ]
          },
          "stpBpduGuard" : {
            "type" : "boolean"
          },
          "stpRootGuard" : {
            "type" : "boolean"
          },
          "switchId" : {
            "type" : "string"
          },
          "untaggedVlan" : {
            "type" : "string"
          },
          "taggedVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "voiceVlan" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lldpQos" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LldpQosView"
            }
          },
          "ingressAcl" : {
            "type" : "string"
          },
          "egressAcl" : {
            "type" : "string"
          },
          "vsixIngressAcl" : {
            "type" : "string"
          },
          "vsixEgressAcl" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "string"
          },
          "lag" : {
            "$ref" : "#/components/schemas/LagView"
          },
          "switchMac" : {
            "type" : "string"
          },
          "profileName" : {
            "type" : "string"
          }
        }
      },
      "PortViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "ports" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "ignoreFields" : {
            "type" : "string"
          },
          "revert" : {
            "type" : "boolean"
          },
          "portSpeed" : {
            "type" : "string",
            "enum" : [ "__NULL", "UNSET", "NONE", "AUTO", "TEN_M_FULL", "TEN_M_HALF", "ONE_HUNDRED_M_FULL", "ONE_HUNDRED_M_HALF", "ONE_G_FULL", "ONE_G_FULL_MASTER", "ONE_G_FULL_SLAVE", "TWO_POINT_FIVE_G_FULL", "TWO_POINT_FIVE_G_FULL_MASTER", "TWO_POINT_FIVE_G_FULL_SLAVE", "FIVE_G_FULL", "FIVE_G_FULL_MASTER", "FIVE_G_FULL_SLAVE", "TEN_G_FULL", "TEN_G_FULL_MASTER", "TEN_G_FULL_SLAVE", "TWENTY_FIVE_G_FULL", "FORTY_G_FULL", "ONE_HUNDRED_G_FULL", "OPTIC" ]
          },
          "poeClass" : {
            "type" : "string",
            "enum" : [ "__NULL", "UNSET", "ZERO", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT" ]
          },
          "poeBudget" : {
            "type" : "number",
            "format" : "float"
          },
          "poePriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "poeEnable" : {
            "type" : "boolean"
          },
          "poeCapability" : {
            "type" : "boolean"
          },
          "portEnable" : {
            "type" : "boolean"
          },
          "portProtected" : {
            "type" : "boolean"
          },
          "dhcpSnoopingTrust" : {
            "type" : "boolean"
          },
          "arpInspectionTrust" : {
            "type" : "boolean"
          },
          "rstpAdminEdgePort" : {
            "type" : "boolean"
          },
          "stpBpduGuard" : {
            "type" : "boolean"
          },
          "stpRootGuard" : {
            "type" : "boolean"
          },
          "ipsg" : {
            "type" : "boolean"
          },
          "lldpEnable" : {
            "type" : "boolean"
          },
          "lldpQos" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LldpQosViewV1001"
            }
          },
          "taggedVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedVlan" : {
            "type" : "string"
          },
          "voiceVlan" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ingressAcl" : {
            "type" : "string"
          },
          "egressAcl" : {
            "type" : "string"
          },
          "vsixIngressAcl" : {
            "type" : "string"
          },
          "vsixEgressAcl" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "string"
          },
          "flexibleAuthenticationEnabled" : {
            "type" : "boolean"
          },
          "authenticationCustomize" : {
            "type" : "boolean"
          },
          "authenticationProfileId" : {
            "type" : "string"
          },
          "authenticationType" : {
            "type" : "string",
            "enum" : [ "__NULL", "802.1x", "macauth", "802.1x_and_macauth" ]
          },
          "changeAuthOrder" : {
            "type" : "boolean"
          },
          "dot1xPortControl" : {
            "type" : "string",
            "enum" : [ "__NULL", "auto", "force_authorized", "force_unauthorized", "" ]
          },
          "authDefaultVlan" : {
            "type" : "integer",
            "format" : "int32"
          },
          "restrictedVlan" : {
            "type" : "integer",
            "format" : "int32"
          },
          "criticalVlan" : {
            "type" : "integer",
            "format" : "int32"
          },
          "guestVlan" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authFailAction" : {
            "type" : "string",
            "enum" : [ "__NULL", "block", "restricted_vlan" ]
          },
          "authTimeoutAction" : {
            "type" : "string",
            "enum" : [ "__NULL", "none", "failure", "success", "critical_vlan" ]
          },
          "shouldAlertAaaAndRadiusNotApply" : {
            "type" : "boolean"
          },
          "switchLevelAuthDefaultVlan" : {
            "type" : "integer",
            "format" : "int32"
          },
          "profileAuthDefaultVlan" : {
            "type" : "integer",
            "format" : "int32"
          },
          "enableAuthPorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "switchMac" : {
            "type" : "string"
          },
          "profileName" : {
            "type" : "string"
          },
          "switchPortProfileId" : {
            "type" : "string"
          },
          "adminPtToPt" : {
            "type" : "string",
            "enum" : [ "AUTO", "DISABLE", "ENABLE" ]
          },
          "portSecurity" : {
            "type" : "boolean"
          },
          "portSecurityMaxEntries" : {
            "type" : "integer",
            "format" : "int32"
          },
          "switchMacAcl" : {
            "type" : "string"
          },
          "poeScheduler" : {
            "$ref" : "#/components/schemas/SchedulerViewV1000"
          }
        }
      },
      "PortsDtoV1001" : {
        "required" : [ "switchId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "ports" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "ignoreFields" : {
            "type" : "string"
          },
          "revert" : {
            "type" : "boolean"
          },
          "portSpeed" : {
            "type" : "string",
            "enum" : [ "__NULL", "UNSET", "NONE", "AUTO", "TEN_M_FULL", "TEN_M_HALF", "ONE_HUNDRED_M_FULL", "ONE_HUNDRED_M_HALF", "ONE_G_FULL", "ONE_G_FULL_MASTER", "ONE_G_FULL_SLAVE", "TWO_POINT_FIVE_G_FULL", "TWO_POINT_FIVE_G_FULL_MASTER", "TWO_POINT_FIVE_G_FULL_SLAVE", "FIVE_G_FULL", "FIVE_G_FULL_MASTER", "FIVE_G_FULL_SLAVE", "TEN_G_FULL", "TEN_G_FULL_MASTER", "TEN_G_FULL_SLAVE", "TWENTY_FIVE_G_FULL", "FORTY_G_FULL", "ONE_HUNDRED_G_FULL", "OPTIC" ]
          },
          "poeClass" : {
            "type" : "string",
            "enum" : [ "__NULL", "UNSET", "ZERO", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT" ]
          },
          "poeBudget" : {
            "type" : "number",
            "format" : "float"
          },
          "poePriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "poeEnable" : {
            "type" : "boolean"
          },
          "poeCapability" : {
            "type" : "boolean"
          },
          "portEnable" : {
            "type" : "boolean"
          },
          "portProtected" : {
            "type" : "boolean"
          },
          "dhcpSnoopingTrust" : {
            "type" : "boolean"
          },
          "arpInspectionTrust" : {
            "type" : "boolean"
          },
          "rstpAdminEdgePort" : {
            "type" : "boolean"
          },
          "adminPtToPt" : {
            "type" : "string",
            "enum" : [ "AUTO", "DISABLE", "ENABLE" ]
          },
          "stpBpduGuard" : {
            "type" : "boolean"
          },
          "stpRootGuard" : {
            "type" : "boolean"
          },
          "ipsg" : {
            "type" : "boolean"
          },
          "lldpEnable" : {
            "type" : "boolean"
          },
          "lldpQos" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LldpQosViewV1001"
            }
          },
          "taggedVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedVlan" : {
            "type" : "string"
          },
          "voiceVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "ingressAcl" : {
            "type" : "string"
          },
          "egressAcl" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "string"
          },
          "flexibleAuthenticationEnabled" : {
            "type" : "boolean"
          },
          "authenticationType" : {
            "type" : "string",
            "enum" : [ "__NULL", "802.1x", "macauth", "802.1x_and_macauth" ]
          },
          "authenticationCustomize" : {
            "type" : "boolean"
          },
          "authenticationProfileId" : {
            "type" : "string"
          },
          "changeAuthOrder" : {
            "type" : "boolean"
          },
          "dot1xPortControl" : {
            "type" : "string",
            "enum" : [ "__NULL", "auto", "force_authorized", "force_unauthorized", "" ]
          },
          "authDefaultVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "restrictedVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "criticalVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "guestVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "authFailAction" : {
            "type" : "string",
            "enum" : [ "__NULL", "block", "restricted_vlan" ]
          },
          "authTimeoutAction" : {
            "type" : "string",
            "enum" : [ "__NULL", "none", "failure", "success", "critical_vlan" ]
          },
          "switchId" : {
            "type" : "string"
          },
          "switchPortProfileId" : {
            "type" : "string"
          },
          "portSecurity" : {
            "type" : "boolean"
          },
          "portSecurityMaxEntries" : {
            "type" : "integer",
            "format" : "int32"
          },
          "switchMacAcl" : {
            "type" : "string"
          },
          "poeScheduler" : {
            "$ref" : "#/components/schemas/SchedulerViewV1000"
          }
        }
      },
      "PortsRequestPayload" : {
        "type" : "object",
        "properties" : {
          "switchId" : {
            "type" : "string"
          },
          "ports" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ProfileAclRuleViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "sequence" : {
            "type" : "integer",
            "format" : "int32"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "permit", "deny" ]
          },
          "destination" : {
            "type" : "string"
          },
          "destinationPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "protocol" : {
            "type" : "string",
            "enum" : [ "ip", "tcp", "udp", "ipv6" ]
          },
          "source" : {
            "type" : "string"
          },
          "sourcePort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dscpMatching" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dscpMarking" : {
            "type" : "integer",
            "format" : "int32"
          },
          "internalPriority" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ProfileAclViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "aclType" : {
            "type" : "string",
            "enum" : [ "standard", "extended", "IPv6" ]
          },
          "aclRules" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProfileAclRuleViewV1001"
            }
          }
        }
      },
      "ProfileBo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "pattern" : "^.{1,64}$",
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "venues" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "acls" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AclBo"
            }
          },
          "profileType" : {
            "type" : "string",
            "enum" : [ "Regular", "CLI" ]
          },
          "vlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VlanBo"
            }
          },
          "voiceVlanConfigs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VoiceVlanConfigBo"
            }
          },
          "trustedPorts" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrustedPortBo"
            }
          },
          "venueCliTemplate" : {
            "$ref" : "#/components/schemas/AcxVenueCliTemplateBo"
          },
          "isTemplate" : {
            "type" : "boolean"
          },
          "templateId" : {
            "type" : "string"
          },
          "templateVersion" : {
            "type" : "integer",
            "format" : "int64"
          },
          "applyOnboardOnly" : {
            "type" : "boolean"
          },
          "portProfileMappings" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortProfileAndProfileMappingBo"
            }
          }
        }
      },
      "ProfileDtoV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "acls" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProfileAclViewV1001"
            }
          },
          "profileType" : {
            "type" : "string",
            "enum" : [ "Regular", "CLI" ]
          },
          "vlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProfileVlanViewV1001"
            }
          },
          "voiceVlanConfigs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VoiceVlanConfigViewV1001"
            }
          },
          "trustedPorts" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrustedPortViewV1001"
            }
          },
          "venueCliTemplate" : {
            "$ref" : "#/components/schemas/AcxVenueCliTemplateViewV1001"
          },
          "applyOnboardOnly" : {
            "type" : "boolean"
          }
        }
      },
      "ProfileVenue" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "venue" : {
            "$ref" : "#/components/schemas/Venue"
          }
        }
      },
      "ProfileView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "acls" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AclView"
            }
          },
          "vlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VlanView"
            }
          },
          "voiceVlanConfigs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VoiceVlanConfigView"
            }
          },
          "trustedPorts" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrustedPortView"
            }
          },
          "profileType" : {
            "type" : "string",
            "enum" : [ "Regular", "CLI" ]
          },
          "venueCliTemplate" : {
            "$ref" : "#/components/schemas/AcxVenueCliTemplateView"
          },
          "venues" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "venueCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "templateId" : {
            "type" : "string"
          },
          "templateVersion" : {
            "type" : "integer",
            "format" : "int64"
          },
          "applyOnboardOnly" : {
            "type" : "boolean"
          }
        }
      },
      "ProfileViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "acls" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProfileAclViewV1001"
            }
          },
          "profileType" : {
            "type" : "string",
            "enum" : [ "Regular", "CLI" ]
          },
          "vlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProfileVlanViewV1001"
            }
          },
          "voiceVlanConfigs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VoiceVlanConfigViewV1001"
            }
          },
          "trustedPorts" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrustedPortViewV1001"
            }
          },
          "venueCliTemplate" : {
            "$ref" : "#/components/schemas/AcxVenueCliTemplateViewV1001"
          },
          "venues" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "venueCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "templateId" : {
            "type" : "string"
          },
          "templateVersion" : {
            "type" : "integer",
            "format" : "int64"
          },
          "applyOnboardOnly" : {
            "type" : "boolean"
          }
        }
      },
      "ProfileVlanResponseV1001" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/ProfileVlanViewV1001"
          }
        }
      },
      "ProfileVlanViewV1001" : {
        "required" : [ "vlanId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "vlanName" : {
            "type" : "string"
          },
          "ipv4DhcpSnooping" : {
            "type" : "boolean"
          },
          "arpInspection" : {
            "type" : "boolean"
          },
          "igmpSnooping" : {
            "type" : "string",
            "enum" : [ "active", "passive", "none" ]
          },
          "multicastVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "spanningTreeProtocol" : {
            "type" : "string",
            "enum" : [ "rstp", "stp", "none" ]
          },
          "spanningTreePriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "switchFamilyModels" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchFamilyModelViewV1001"
            }
          }
        }
      },
      "QueryRequest" : {
        "type" : "object",
        "properties" : {
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortField" : {
            "type" : "string"
          },
          "sortOrder" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        }
      },
      "QueryResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ScheduleTimeSlot" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "startDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalCapacityVenue" : {
            "type" : "integer",
            "format" : "int32"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "WAITING_REMINDER", "IN_QUEUE", "ACTIVE", "COMPLETED" ]
          }
        }
      },
      "ScheduleTimeSlotView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "startDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDateTime" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ScheduleTimeSlotViewV1000" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "startDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDateTime" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "SchedulerBo" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "NO_SCHEDULE", "CUSTOM" ]
          },
          "mon" : {
            "type" : "string"
          },
          "tue" : {
            "type" : "string"
          },
          "wed" : {
            "type" : "string"
          },
          "thu" : {
            "type" : "string"
          },
          "fri" : {
            "type" : "string"
          },
          "sat" : {
            "type" : "string"
          },
          "sun" : {
            "type" : "string"
          },
          "timeZone" : {
            "type" : "string"
          }
        }
      },
      "SchedulerViewV1000" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "NO_SCHEDULE", "CUSTOM" ]
          },
          "mon" : {
            "type" : "string"
          },
          "tue" : {
            "type" : "string"
          },
          "wed" : {
            "type" : "string"
          },
          "thu" : {
            "type" : "string"
          },
          "fri" : {
            "type" : "string"
          },
          "sat" : {
            "type" : "string"
          },
          "sun" : {
            "type" : "string"
          }
        }
      },
      "SearchableQueryRequest" : {
        "type" : "object",
        "properties" : {
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortField" : {
            "type" : "string"
          },
          "sortOrder" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          },
          "filterType" : {
            "type" : "string",
            "deprecated" : true
          },
          "filters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "searchString" : {
            "type" : "string"
          },
          "searchTargetFields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SkipScheduleUpgradeDtoV1000" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "switchIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SkipScheduleUpgradeRequestView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "venueIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "switchIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SortInfo" : {
        "type" : "object",
        "properties" : {
          "sortColumn" : {
            "type" : "string",
            "enum" : [ "startTime" ]
          },
          "dir" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        }
      },
      "SpecificSettingBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "serialNumber" : {
            "type" : "string"
          },
          "igmpSnooping" : {
            "type" : "string",
            "enum" : [ "active", "passive", "none" ]
          },
          "jumboMode" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "dhcpServerEnabled" : {
            "type" : "boolean"
          },
          "dhcpClientEnabled" : {
            "type" : "boolean"
          },
          "trustPorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "vlanCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mgmtInterfaceEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "StackConfigBo" : {
        "type" : "object",
        "properties" : {
          "activeSwitchId" : {
            "type" : "string"
          },
          "suggestedId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "zeroTouchEnabled" : {
            "type" : "boolean"
          },
          "unitId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitName" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "rearModule" : {
            "type" : "string",
            "enum" : [ "stack-40g", "uplink-40g", "uplink-100g", "none" ]
          },
          "stackMemberList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StackMemberBo"
            }
          },
          "active" : {
            "type" : "boolean"
          }
        }
      },
      "StackMemberBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "unitId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitName" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          }
        }
      },
      "StackMembers" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "model" : {
            "type" : "string"
          },
          "unitId" : {
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "priority" : {
            "maximum" : 255,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "insufficientLicense" : {
            "type" : "boolean"
          }
        }
      },
      "StackMembersView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "rearModule" : {
            "type" : "string"
          },
          "memberSerials" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "StackMembersViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          }
        }
      },
      "StaticRouteBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "destinationIp" : {
            "pattern" : "\"^(\\\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\b)\\\\.(\\\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\b)\\\\.(\\\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\b)\\\\.(\\\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\b)\\\\/([1-9]|[12]\\\\d|3[0-2])$\"",
            "type" : "string"
          },
          "nextHop" : {
            "pattern" : "^(\\\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\b)\\\\.(\\\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\b)\\\\.(\\\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\b)\\\\.(\\\\b([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\b)$",
            "type" : "string"
          },
          "adminDistance" : {
            "maximum" : 255,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "uniqueValue" : {
            "type" : "string"
          }
        }
      },
      "StaticRouteResponseV1001" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/StaticRouteViewV1001"
          }
        }
      },
      "StaticRouteView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "destinationIp" : {
            "pattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\.(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\.(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\.(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\/([0-9]|[1-2]\\d|3[0-2])$",
            "type" : "string"
          },
          "nextHop" : {
            "pattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\.(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\.(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\.(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$",
            "type" : "string"
          },
          "adminDistance" : {
            "maximum" : 255,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "staticRouteViewList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StaticRouteView"
            }
          }
        }
      },
      "StaticRouteViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "destinationIp" : {
            "pattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\.(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\.(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\.(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\/([0-9]|[1-2]\\d|3[0-2])$",
            "type" : "string"
          },
          "nextHop" : {
            "pattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\.(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\.(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\.(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$",
            "type" : "string"
          },
          "adminDistance" : {
            "maximum" : 255,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "StringErrorCodeResponse" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorCode"
            }
          }
        }
      },
      "StringResponse" : {
        "type" : "object",
        "properties" : {
          "response" : {
            "type" : "string"
          }
        }
      },
      "SwitchAclRuleViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "sequence" : {
            "type" : "integer",
            "format" : "int32"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "permit", "deny" ]
          },
          "destination" : {
            "type" : "string"
          },
          "destinationPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "protocol" : {
            "type" : "string",
            "enum" : [ "ip", "tcp", "udp", "ipv6" ]
          },
          "source" : {
            "type" : "string"
          },
          "sourcePort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dscpMatching" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dscpMarking" : {
            "type" : "integer",
            "format" : "int32"
          },
          "internalPriority" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SwitchAclViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "aclType" : {
            "type" : "string",
            "enum" : [ "standard", "extended", "IPv6" ]
          },
          "aclRules" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchAclRuleViewV1001"
            }
          }
        }
      },
      "SwitchAndVenueView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "serialNumber" : {
            "type" : "string"
          },
          "switchName" : {
            "type" : "string"
          },
          "switchModel" : {
            "type" : "string"
          },
          "venueId" : {
            "type" : "string"
          },
          "venueName" : {
            "type" : "string"
          }
        }
      },
      "SwitchAndVenueViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "serialNumber" : {
            "type" : "string"
          },
          "switchName" : {
            "type" : "string"
          },
          "switchModel" : {
            "type" : "string"
          },
          "venueId" : {
            "type" : "string"
          },
          "venueName" : {
            "type" : "string"
          }
        }
      },
      "SwitchFamilyModel" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "model" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "taggedPorts" : {
            "type" : "string"
          },
          "untaggedPorts" : {
            "type" : "string"
          },
          "voicePorts" : {
            "type" : "string"
          },
          "vlan" : {
            "$ref" : "#/components/schemas/Vlan"
          }
        }
      },
      "SwitchFamilyModelBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "taggedPorts" : {
            "type" : "string"
          },
          "untaggedPorts" : {
            "type" : "string"
          },
          "voicePorts" : {
            "type" : "string"
          },
          "slots" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FamilyModelSlotBo"
            }
          }
        }
      },
      "SwitchFamilyModelView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "taggedPorts" : {
            "type" : "string"
          },
          "untaggedPorts" : {
            "type" : "string"
          },
          "voicePorts" : {
            "type" : "string"
          },
          "slots" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FamilyModelSlot"
            }
          }
        }
      },
      "SwitchFamilyModelViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "taggedPorts" : {
            "type" : "string"
          },
          "untaggedPorts" : {
            "type" : "string"
          },
          "voicePorts" : {
            "type" : "string"
          },
          "slots" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FamilyModelSlotViewV1001"
            }
          }
        }
      },
      "SwitchPortProfile" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "DYNAMIC", "STATIC" ]
          },
          "taggedVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedVlan" : {
            "type" : "integer",
            "format" : "int32"
          },
          "poeEnable" : {
            "type" : "boolean"
          },
          "poeClass" : {
            "type" : "string",
            "enum" : [ "__NULL", "UNSET", "ZERO", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT" ]
          },
          "poePriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "portSpeed" : {
            "type" : "string",
            "enum" : [ "__NULL", "UNSET", "NONE", "AUTO", "TEN_M_FULL", "TEN_M_HALF", "ONE_HUNDRED_M_FULL", "ONE_HUNDRED_M_HALF", "ONE_G_FULL", "ONE_G_FULL_MASTER", "ONE_G_FULL_SLAVE", "TWO_POINT_FIVE_G_FULL", "TWO_POINT_FIVE_G_FULL_MASTER", "TWO_POINT_FIVE_G_FULL_SLAVE", "FIVE_G_FULL", "FIVE_G_FULL_MASTER", "FIVE_G_FULL_SLAVE", "TEN_G_FULL", "TEN_G_FULL_MASTER", "TEN_G_FULL_SLAVE", "TWENTY_FIVE_G_FULL", "FORTY_G_FULL", "ONE_HUNDRED_G_FULL", "OPTIC" ]
          },
          "ingressAcl" : {
            "type" : "string"
          },
          "egressAcl" : {
            "type" : "string"
          },
          "radius" : {
            "type" : "string"
          },
          "portProtected" : {
            "type" : "boolean"
          },
          "rstpAdminEdgePort" : {
            "type" : "boolean"
          },
          "stpBpduGuard" : {
            "type" : "boolean"
          },
          "stpRootGuard" : {
            "type" : "boolean"
          },
          "dhcpSnoopingTrust" : {
            "type" : "boolean"
          },
          "ipsg" : {
            "type" : "boolean"
          },
          "dot1x" : {
            "type" : "boolean"
          },
          "macAuth" : {
            "type" : "boolean"
          },
          "ports" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "lldpTlvs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LldpTlv"
            }
          },
          "macOuis" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MacOui"
            }
          },
          "profileSource" : {
            "type" : "string",
            "enum" : [ "PROFILE_LEVEL", "SWITCH_LEVEL" ]
          }
        }
      },
      "SwitchPortProfileBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "DYNAMIC", "STATIC" ]
          },
          "ports" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "taggedVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedVlan" : {
            "type" : "integer",
            "format" : "int32"
          },
          "poeEnable" : {
            "type" : "boolean"
          },
          "poeClass" : {
            "type" : "string",
            "enum" : [ "__NULL", "0", "1", "2", "3", "4", "5", "6", "7", "8", "UNSET" ]
          },
          "poePriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "portSpeed" : {
            "type" : "string",
            "enum" : [ "__NULL", "NONE", "AUTO", "10-FULL", "10-HALF", "100-FULL", "100-HALF", "1000-FULL", "1000-FULL-MASTER", "1000-FULL-SLAVE", "2500-FULL", "2500-FULL-MASTER", "2500-FULL-SLAVE", "5G-FULL", "5G-FULL-MASTER", "5G-FULL-SLAVE", "10G-FULL", "10G-FULL-MASTER", "10G-FULL-SLAVE", "25G-FULL", "40G-FULL", "100G-FULL", "OPTIC" ]
          },
          "ingressAcl" : {
            "type" : "string"
          },
          "egressAcl" : {
            "type" : "string"
          },
          "radius" : {
            "type" : "string"
          },
          "portProtected" : {
            "type" : "boolean"
          },
          "rstpAdminEdgePort" : {
            "type" : "boolean"
          },
          "stpBpduGuard" : {
            "type" : "boolean"
          },
          "stpRootGuard" : {
            "type" : "boolean"
          },
          "dhcpSnoopingTrust" : {
            "type" : "boolean"
          },
          "ipsg" : {
            "type" : "boolean"
          },
          "dot1x" : {
            "type" : "boolean"
          },
          "macAuth" : {
            "type" : "boolean"
          },
          "switchLldpTlvBos" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LldpTlvBo"
            }
          },
          "switchMacOuiBos" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MacOuiBo"
            }
          },
          "tenantId" : {
            "type" : "string"
          }
        }
      },
      "SwitchPositionView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "floorplanId" : {
            "type" : "string"
          },
          "xpercent" : {
            "type" : "number",
            "format" : "float"
          },
          "ypercent" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "SwitchPositionViewV1001" : {
        "type" : "object",
        "properties" : {
          "floorPlanId" : {
            "type" : "string"
          },
          "xPercent" : {
            "type" : "number",
            "format" : "float"
          },
          "yPercent" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "SwitchScheduleViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "timeSlot" : {
            "$ref" : "#/components/schemas/ScheduleTimeSlotViewV1000"
          },
          "version" : {
            "type" : "string"
          }
        }
      },
      "SwitchVersion" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "name" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "enum" : [ "RECOMMENDED", "CRITICAL", "BETA", "SOLO" ]
          }
        }
      },
      "SwitchVersionView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "enum" : [ "RECOMMENDED", "CRITICAL", "BETA", "SOLO" ]
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "SwitchVersionViewV1000" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "enum" : [ "RECOMMENDED", "CRITICAL", "BETA", "SOLO" ]
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "SwitchVersionViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "modelGroup" : {
            "type" : "string",
            "enum" : [ "ICX71", "ICX7X", "ICX82", "ICX81", "ICX71E" ]
          },
          "versions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchVersionViewV1000"
            }
          }
        }
      },
      "SwitchVlan" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "vlanId" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "vlanName" : {
            "type" : "string"
          },
          "ipv4DhcpSnooping" : {
            "type" : "boolean"
          },
          "ipv4DhcpSnoopingTrustPort" : {
            "type" : "string"
          },
          "arpInspection" : {
            "type" : "boolean"
          },
          "arpInspectionTrustPort" : {
            "type" : "string"
          },
          "igmpSnooping" : {
            "type" : "string",
            "enum" : [ "active", "passive", "none" ]
          },
          "multicastVersion" : {
            "maximum" : 3,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "spanningTreeProtocol" : {
            "type" : "string",
            "enum" : [ "rstp", "stp", "none" ]
          },
          "spanningTreePriority" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "switchVlanPortModels" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchVlanPortModel"
            }
          },
          "vni" : {
            "type" : "integer",
            "format" : "int32"
          },
          "enableAsDefaultVlan" : {
            "type" : "boolean"
          },
          "usedByVePort" : {
            "type" : "boolean"
          },
          "notSpanningTreePriorityZeroOrStepsOf4096" : {
            "type" : "boolean"
          },
          "defaultVlan" : {
            "type" : "boolean"
          },
          "stp" : {
            "type" : "boolean"
          }
        }
      },
      "SwitchVlanConcise" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "vlanConfigName" : {
            "maxLength" : 32,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "SwitchVlanDtoV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "vlanName" : {
            "type" : "string"
          },
          "ipv4DhcpSnooping" : {
            "type" : "boolean"
          },
          "arpInspection" : {
            "type" : "boolean"
          },
          "igmpSnooping" : {
            "type" : "string",
            "enum" : [ "active", "passive", "none" ]
          },
          "multicastVersion" : {
            "maximum" : 3,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "spanningTreeProtocol" : {
            "type" : "string",
            "enum" : [ "rstp", "stp", "none" ]
          },
          "switchVlanPortModels" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchVlanPortModelViewV1001"
            }
          },
          "enableAsDefaultVlan" : {
            "type" : "boolean"
          }
        }
      },
      "SwitchVlanOverviewV1001" : {
        "type" : "object",
        "properties" : {
          "switchId" : {
            "type" : "string"
          },
          "defaultVlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vlanList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchVlanViewV1001"
            }
          }
        }
      },
      "SwitchVlanPortModel" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "switchModel" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "taggedPorts" : {
            "type" : "string"
          },
          "untaggedPorts" : {
            "type" : "string"
          },
          "voicePorts" : {
            "type" : "string"
          },
          "switchVlan" : {
            "$ref" : "#/components/schemas/SwitchVlan"
          },
          "taggedPortsList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedPortsList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "voicePortsList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "taggedPortsSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedPortsSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "voicePortsSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "allPorts" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SwitchVlanPortModelBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "switchModel" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "taggedPorts" : {
            "type" : "string"
          },
          "untaggedPorts" : {
            "type" : "string"
          },
          "voicePorts" : {
            "type" : "string"
          },
          "taggedPortsList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedPortsList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "voicePortsList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SwitchVlanPortModelViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "switchModel" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "taggedPorts" : {
            "type" : "string"
          },
          "untaggedPorts" : {
            "type" : "string"
          },
          "voicePorts" : {
            "type" : "string"
          }
        }
      },
      "SwitchVlanRequest" : {
        "type" : "object",
        "properties" : {
          "isDefault" : {
            "type" : "boolean"
          },
          "switchIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SwitchVlanResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "defaultVlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vlanList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchVlanView"
            }
          }
        }
      },
      "SwitchVlanResponseV1001" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/SwitchVlanViewV1001"
          }
        }
      },
      "SwitchVlanView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "vlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vlanName" : {
            "type" : "string"
          },
          "ipv4DhcpSnooping" : {
            "type" : "boolean"
          },
          "arpInspection" : {
            "type" : "boolean"
          },
          "igmpSnooping" : {
            "type" : "string",
            "enum" : [ "active", "passive", "none" ]
          },
          "multicastVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "spanningTreeProtocol" : {
            "type" : "string",
            "enum" : [ "rstp", "stp", "none" ]
          },
          "taggedPorts" : {
            "type" : "string"
          },
          "untaggedPorts" : {
            "type" : "string"
          },
          "vePort" : {
            "$ref" : "#/components/schemas/VePortView"
          },
          "switchVlanPortModels" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchVlanPortModelBo"
            }
          },
          "enableAsDefaultVlan" : {
            "type" : "boolean"
          }
        }
      },
      "SwitchVlanViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "vlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vlanName" : {
            "type" : "string"
          },
          "ipv4DhcpSnooping" : {
            "type" : "boolean"
          },
          "arpInspection" : {
            "type" : "boolean"
          },
          "igmpSnooping" : {
            "type" : "string",
            "enum" : [ "active", "passive", "none" ]
          },
          "multicastVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "spanningTreeProtocol" : {
            "type" : "string",
            "enum" : [ "rstp", "stp", "none" ]
          },
          "taggedPorts" : {
            "type" : "string"
          },
          "untaggedPorts" : {
            "type" : "string"
          },
          "switchVlanPortModels" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchVlanPortModelViewV1001"
            }
          },
          "enableAsDefaultVlan" : {
            "type" : "boolean"
          },
          "usedByVePort" : {
            "type" : "boolean"
          },
          "isAuthDefaultVlan" : {
            "type" : "boolean"
          },
          "isAuthVlan" : {
            "type" : "boolean"
          }
        }
      },
      "SwitchVlansDtoV1001" : {
        "required" : [ "switchId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "vlanName" : {
            "type" : "string"
          },
          "ipv4DhcpSnooping" : {
            "type" : "boolean"
          },
          "arpInspection" : {
            "type" : "boolean"
          },
          "igmpSnooping" : {
            "type" : "string",
            "enum" : [ "active", "passive", "none" ]
          },
          "multicastVersion" : {
            "maximum" : 3,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "spanningTreeProtocol" : {
            "type" : "string",
            "enum" : [ "rstp", "stp", "none" ]
          },
          "switchVlanPortModels" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchVlanPortModelViewV1001"
            }
          },
          "enableAsDefaultVlan" : {
            "type" : "boolean"
          },
          "switchId" : {
            "type" : "string"
          }
        }
      },
      "SyncAdminPasswordView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenantId" : {
            "type" : "string"
          },
          "switchIdList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SyslogServerConfigBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "ip" : {
            "type" : "string"
          }
        }
      },
      "Tenant" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "venues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Venue"
            }
          },
          "tenantLatestFirmwares" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TenantLatestFirmware"
            }
          },
          "firmwareVersion" : {
            "type" : "string"
          },
          "latestBetaVersion" : {
            "$ref" : "#/components/schemas/SwitchVersion"
          },
          "latestReleaseVersion" : {
            "$ref" : "#/components/schemas/SwitchVersion"
          },
          "latestReleaseVersionAboveTen" : {
            "$ref" : "#/components/schemas/SwitchVersion"
          },
          "preDownloadFirmware" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "latestVersionMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "TenantLatestFirmware" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "supportModelGroup" : {
            "type" : "string",
            "enum" : [ "ICX71", "ICX7X", "ICX82", "ICX81", "ICX71E" ]
          },
          "version" : {
            "type" : "string"
          }
        }
      },
      "TrustedPort" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "trustedPortType" : {
            "type" : "string",
            "enum" : [ "all", "dhcp", "arp" ]
          },
          "model" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "vlanDemand" : {
            "type" : "boolean"
          },
          "trustPorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "TrustedPortBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenantId" : {
            "type" : "string"
          },
          "trustedPortType" : {
            "type" : "string",
            "enum" : [ "all", "dhcp", "arp" ]
          },
          "model" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "vlanDemand" : {
            "type" : "boolean"
          },
          "trustPorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "slots" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FamilyModelSlotBo"
            }
          }
        }
      },
      "TrustedPortView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "trustedPortType" : {
            "type" : "string",
            "enum" : [ "all", "dhcp", "arp" ]
          },
          "model" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "vlanDemand" : {
            "type" : "boolean"
          },
          "trustPorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "slots" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FamilyModelSlot"
            }
          }
        }
      },
      "TrustedPortViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "trustedPortType" : {
            "type" : "string",
            "enum" : [ "all", "dhcp", "arp" ]
          },
          "model" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "vlanDemand" : {
            "type" : "boolean"
          },
          "trustPorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "slots" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FamilyModelSlotViewV1001"
            }
          }
        }
      },
      "UpdatePortBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "ports" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "portSpeed" : {
            "type" : "string",
            "enum" : [ "__NULL", "UNSET", "NONE", "AUTO", "TEN_M_FULL", "TEN_M_HALF", "ONE_HUNDRED_M_FULL", "ONE_HUNDRED_M_HALF", "ONE_G_FULL", "ONE_G_FULL_MASTER", "ONE_G_FULL_SLAVE", "TWO_POINT_FIVE_G_FULL", "TWO_POINT_FIVE_G_FULL_MASTER", "TWO_POINT_FIVE_G_FULL_SLAVE", "FIVE_G_FULL", "FIVE_G_FULL_MASTER", "FIVE_G_FULL_SLAVE", "TEN_G_FULL", "TEN_G_FULL_MASTER", "TEN_G_FULL_SLAVE", "TWENTY_FIVE_G_FULL", "FORTY_G_FULL", "ONE_HUNDRED_G_FULL", "OPTIC" ]
          },
          "poeClass" : {
            "type" : "string",
            "enum" : [ "__NULL", "UNSET", "ZERO", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT" ]
          },
          "poePriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lldpQos" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LldpQosBo"
            }
          },
          "taggedVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedVlan" : {
            "type" : "string"
          },
          "ingressAcl" : {
            "type" : "string"
          },
          "egressAcl" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "string"
          },
          "switchSerialNumber" : {
            "type" : "string"
          },
          "ignoreFields" : {
            "type" : "string"
          },
          "poeBudget" : {
            "type" : "integer",
            "format" : "int32"
          },
          "voiceVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "portEnable" : {
            "type" : "boolean"
          },
          "poeEnable" : {
            "type" : "boolean"
          },
          "poeCapability" : {
            "type" : "boolean"
          },
          "portProtected" : {
            "type" : "boolean"
          },
          "lldpEnable" : {
            "type" : "boolean"
          },
          "rstpAdminEdgePort" : {
            "type" : "boolean"
          },
          "stpBpduGuard" : {
            "type" : "boolean"
          },
          "stpRootGuard" : {
            "type" : "boolean"
          },
          "dhcpSnoopingTrust" : {
            "type" : "boolean"
          },
          "arpInspectionTrust" : {
            "type" : "boolean"
          },
          "ipsg" : {
            "type" : "boolean"
          },
          "revert" : {
            "type" : "boolean"
          },
          "flexibleAuthenticationEnabled" : {
            "type" : "boolean"
          },
          "authenticationCustomize" : {
            "type" : "boolean"
          },
          "authenticationProfileId" : {
            "type" : "string"
          },
          "authenticationType" : {
            "type" : "string",
            "enum" : [ "__NULL", "802.1x", "macauth", "802.1x_and_macauth" ]
          },
          "changeAuthOrder" : {
            "type" : "boolean"
          },
          "dot1xPortControl" : {
            "type" : "string",
            "enum" : [ "__NULL", "auto", "force_authorized", "force_unauthorized", "" ]
          },
          "authDefaultVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "restrictedVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "criticalVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "guestVlan" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "authFailAction" : {
            "type" : "string",
            "enum" : [ "__NULL", "block", "restricted_vlan" ]
          },
          "authTimeoutAction" : {
            "type" : "string",
            "enum" : [ "__NULL", "none", "failure", "success", "critical_vlan" ]
          },
          "defaultVlan" : {
            "$ref" : "#/components/schemas/SwitchVlan"
          },
          "switchPortProfileId" : {
            "type" : "string"
          },
          "adminPtToPt" : {
            "type" : "string",
            "enum" : [ "AUTO", "DISABLE", "ENABLE" ]
          },
          "portSecurity" : {
            "type" : "boolean"
          },
          "portSecurityMaxEntries" : {
            "type" : "integer",
            "format" : "int32"
          },
          "switchMacAcl" : {
            "type" : "string"
          },
          "poeScheduler" : {
            "$ref" : "#/components/schemas/SchedulerBo"
          },
          "portSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ignoreFieldSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "authenticationDataByProfile" : {
            "$ref" : "#/components/schemas/AuthenticationProfile"
          }
        }
      },
      "UpdatePortsRequestPayload" : {
        "type" : "object",
        "properties" : {
          "switchId" : {
            "type" : "string"
          }
        }
      },
      "UpdateVenueSettingBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "dns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "syslogEnabled" : {
            "type" : "boolean"
          },
          "syslogPrimaryServer" : {
            "type" : "string"
          },
          "syslogSecondaryServer" : {
            "type" : "string"
          },
          "profileId" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "UpgradeSchedule" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "timeSlot" : {
            "$ref" : "#/components/schemas/ScheduleTimeSlot"
          },
          "version" : {
            "$ref" : "#/components/schemas/SwitchVersion"
          },
          "versionAboveTen" : {
            "$ref" : "#/components/schemas/SwitchVersion"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "RUNNING", "FINISHED", "FAIL" ]
          },
          "downloadJobId" : {
            "type" : "string"
          },
          "downloadTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "upgradeScheduleLevel" : {
            "type" : "string",
            "enum" : [ "VENUE", "SWITCH" ]
          },
          "supportModelGroupVersions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpgradeScheduleFirmware"
            }
          },
          "supportModelGroupVersionMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "switchLevelUpgrade" : {
            "type" : "boolean"
          },
          "upgradeTimeLater" : {
            "type" : "boolean"
          },
          "venueLevelUpgrade" : {
            "type" : "boolean"
          }
        }
      },
      "UpgradeScheduleFirmware" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "supportModelGroup" : {
            "type" : "string",
            "enum" : [ "ICX71", "ICX7X", "ICX82", "ICX81", "ICX71E" ]
          },
          "version" : {
            "type" : "string"
          },
          "upgradeSchedule" : {
            "$ref" : "#/components/schemas/UpgradeSchedule"
          }
        }
      },
      "UpgradeScheduleFirmwareViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "timeSlot" : {
            "$ref" : "#/components/schemas/ScheduleTimeSlotViewV1000"
          },
          "supportModelGroupVersions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModelVersionViewV1001"
            }
          }
        }
      },
      "UpgradeScheduleView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "timeSlot" : {
            "$ref" : "#/components/schemas/ScheduleTimeSlotView"
          },
          "version" : {
            "$ref" : "#/components/schemas/SwitchVersion"
          },
          "versionAboveTen" : {
            "$ref" : "#/components/schemas/SwitchVersion"
          }
        }
      },
      "UpgradeScheduleViewV1000" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "timeSlot" : {
            "$ref" : "#/components/schemas/ScheduleTimeSlotViewV1000"
          },
          "version" : {
            "$ref" : "#/components/schemas/SwitchVersionViewV1000"
          },
          "versionAboveTen" : {
            "$ref" : "#/components/schemas/SwitchVersionViewV1000"
          }
        }
      },
      "UpgradeStatusDetailsCriteria" : {
        "type" : "object",
        "properties" : {
          "venueId" : {
            "type" : "string"
          }
        }
      },
      "UpgradeStatusDetailsView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "switchName" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "targetFirmware" : {
            "type" : "string"
          },
          "switchStatus" : {
            "type" : "string",
            "enum" : [ "ONLINE", "OFFLINE", "PROVISION", "DISCOVERY", "HBLOST", "REBOOTING", "FIRMWARE_UPGRADING", "UNRECOGNIZED", "RELOADING", "PRIME_UPGRADE_COMPLETED" ]
          },
          "lastStatusUpdateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "upgradeStatusDetailsViewList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpgradeStatusDetailsView"
            }
          }
        }
      },
      "UpgradeSwitchCriteria" : {
        "type" : "object",
        "properties" : {
          "search" : {
            "type" : "string"
          },
          "venueIdList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "UpgradeSwitchQueryFilterV1000" : {
        "type" : "object",
        "properties" : {
          "searchFilter" : {
            "type" : "string"
          },
          "venueIdList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "UpgradeSwitchQueryFilterV1001" : {
        "type" : "object",
        "properties" : {
          "searchFilter" : {
            "type" : "string"
          },
          "venueIdList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "searchTargetFields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "UpgradeSwitchView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "venueId" : {
            "type" : "string"
          },
          "venueName" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "switchName" : {
            "type" : "string"
          },
          "isStack" : {
            "type" : "boolean"
          },
          "model" : {
            "type" : "string"
          },
          "currentFirmware" : {
            "type" : "string"
          },
          "availableVersion" : {
            "$ref" : "#/components/schemas/SwitchVersion"
          },
          "switchNextSchedule" : {
            "$ref" : "#/components/schemas/UpgradeScheduleView"
          },
          "venueNextSchedule" : {
            "$ref" : "#/components/schemas/UpgradeScheduleView"
          },
          "preDownload" : {
            "type" : "boolean"
          },
          "isSwitchLevelSchedule" : {
            "type" : "boolean"
          },
          "upgradeSwitchViewList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpgradeSwitchView"
            }
          }
        }
      },
      "UpgradeSwitchViewV1000" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "venueId" : {
            "type" : "string"
          },
          "venueName" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "switchName" : {
            "type" : "string"
          },
          "isStack" : {
            "type" : "boolean"
          },
          "model" : {
            "type" : "string"
          },
          "currentFirmware" : {
            "type" : "string"
          },
          "availableVersion" : {
            "$ref" : "#/components/schemas/SwitchVersionViewV1000"
          },
          "switchNextSchedule" : {
            "$ref" : "#/components/schemas/UpgradeScheduleViewV1000"
          },
          "venueNextSchedule" : {
            "$ref" : "#/components/schemas/UpgradeScheduleViewV1000"
          },
          "preDownload" : {
            "type" : "boolean"
          },
          "isSwitchLevelSchedule" : {
            "type" : "boolean"
          }
        }
      },
      "UpgradeSwitchViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "venueId" : {
            "type" : "string"
          },
          "venueName" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "switchName" : {
            "type" : "string"
          },
          "isStack" : {
            "type" : "boolean"
          },
          "model" : {
            "type" : "string"
          },
          "currentFirmware" : {
            "type" : "string"
          },
          "switchNextSchedule" : {
            "$ref" : "#/components/schemas/SwitchScheduleViewV1001"
          },
          "venueNextSchedule" : {
            "$ref" : "#/components/schemas/UpgradeScheduleFirmwareViewV1001"
          },
          "preDownload" : {
            "type" : "boolean"
          },
          "isSwitchLevelSchedule" : {
            "type" : "boolean"
          }
        }
      },
      "UpgradeVenueCriteria" : {
        "type" : "object",
        "properties" : {
          "search" : {
            "type" : "string"
          },
          "firmwareVersion" : {
            "type" : "string"
          },
          "firmwareType" : {
            "type" : "string"
          },
          "updateAvailable" : {
            "type" : "boolean"
          }
        }
      },
      "UpgradeVenueFirmwareViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "venueId" : {
            "type" : "string"
          },
          "venueName" : {
            "type" : "string"
          },
          "versions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModelVersionViewV1001"
            }
          },
          "nextSchedule" : {
            "$ref" : "#/components/schemas/UpgradeScheduleFirmwareViewV1001"
          },
          "lastScheduleUpdateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "preDownload" : {
            "type" : "boolean"
          },
          "switchCounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModelSwitchCountViewV1001"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "NONE", "INITIATE", "SUCCESS", "FAILED" ]
          },
          "scheduleCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UpgradeVenueQueryFilterV1000" : {
        "type" : "object",
        "properties" : {
          "searchFilter" : {
            "type" : "string"
          },
          "firmwareVersion" : {
            "type" : "string"
          }
        }
      },
      "UpgradeVenueQueryFilterV1001" : {
        "type" : "object",
        "properties" : {
          "searchFilter" : {
            "type" : "string"
          },
          "firmwareVersion" : {
            "type" : "string"
          },
          "modelGroup" : {
            "type" : "string",
            "enum" : [ "ICX71", "ICX7X", "ICX82", "ICX81", "ICX71E" ]
          }
        }
      },
      "UpgradeVenueView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "switchFirmwareVersion" : {
            "$ref" : "#/components/schemas/SwitchVersion"
          },
          "switchFirmwareVersionAboveTen" : {
            "$ref" : "#/components/schemas/SwitchVersion"
          },
          "availableVersions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchVersion"
            }
          },
          "nextSchedule" : {
            "$ref" : "#/components/schemas/UpgradeScheduleView"
          },
          "lastScheduleUpdateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "preDownload" : {
            "type" : "boolean"
          },
          "switchCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "aboveTenSwitchCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "NONE", "INITIATE", "SUCCESS", "FAILED" ]
          },
          "scheduleCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "upgradeVenueViewList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpgradeVenueView"
            }
          }
        }
      },
      "UpgradeVenueViewV1000" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "venueId" : {
            "type" : "string"
          },
          "venueName" : {
            "type" : "string"
          },
          "switchFirmwareVersion" : {
            "$ref" : "#/components/schemas/SwitchVersionViewV1000"
          },
          "switchFirmwareVersionAboveTen" : {
            "$ref" : "#/components/schemas/SwitchVersionViewV1000"
          },
          "availableVersions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchVersionViewV1000"
            }
          },
          "nextSchedule" : {
            "$ref" : "#/components/schemas/UpgradeScheduleViewV1000"
          },
          "lastScheduleUpdateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "preDownload" : {
            "type" : "boolean"
          },
          "switchCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "aboveTenSwitchCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "NONE", "INITIATE", "SUCCESS", "FAILED" ]
          },
          "scheduleCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "VePortBo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "veId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "defaultVlan" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "ospfArea" : {
            "type" : "string"
          },
          "dhcpRelayAgent" : {
            "type" : "string"
          },
          "ipAddressType" : {
            "type" : "string",
            "enum" : [ "static", "dynamic" ]
          },
          "ipAddress" : {
            "type" : "string"
          },
          "ipSubnetMask" : {
            "type" : "string"
          },
          "ingressAcl" : {
            "type" : "string"
          },
          "egressAcl" : {
            "type" : "string"
          },
          "vsixIngressAcl" : {
            "type" : "string"
          },
          "vsixEgressAcl" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "ifIsDhcpVEDefaultCase" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          }
        }
      },
      "VePortDtoV1001" : {
        "type" : "object",
        "properties" : {
          "veId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "ospfArea" : {
            "type" : "string"
          },
          "dhcpRelayAgent" : {
            "type" : "string"
          },
          "ipAddressType" : {
            "type" : "string",
            "enum" : [ "static", "dynamic" ]
          },
          "ipAddress" : {
            "type" : "string"
          },
          "ipSubnetMask" : {
            "type" : "string"
          },
          "ingressAcl" : {
            "type" : "string"
          },
          "egressAcl" : {
            "type" : "string"
          }
        }
      },
      "VePortResponseV1001" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/VePortViewV1001"
          }
        }
      },
      "VePortView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "veId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "defaultVlan" : {
            "type" : "boolean"
          },
          "name" : {
            "pattern" : "^(?:(?!\").){1,64}$",
            "type" : "string"
          },
          "ospfArea" : {
            "type" : "string"
          },
          "dhcpRelayAgent" : {
            "type" : "string"
          },
          "ipAddressType" : {
            "type" : "string",
            "enum" : [ "static", "dynamic" ]
          },
          "ipAddress" : {
            "type" : "string"
          },
          "ipSubnetMask" : {
            "type" : "string"
          },
          "ingressAclName" : {
            "type" : "string"
          },
          "egressAclName" : {
            "type" : "string"
          },
          "vsixIngressAclName" : {
            "type" : "string"
          },
          "vsixEgressAclName" : {
            "type" : "string"
          },
          "switchId" : {
            "type" : "string"
          },
          "tenantId" : {
            "type" : "string"
          },
          "switchName" : {
            "type" : "string"
          },
          "deviceStatus" : {
            "type" : "string"
          },
          "stack" : {
            "type" : "boolean"
          },
          "syncedSwitchConfig" : {
            "type" : "boolean"
          },
          "portType" : {
            "type" : "string",
            "enum" : [ "NONE", "IP", "VE", "UNRECOGNIZED" ]
          },
          "connectedVe" : {
            "type" : "boolean"
          },
          "vePortViewList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VePortView"
            }
          }
        }
      },
      "VePortViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "veId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "pattern" : "^(?:(?!\").){1,64}$",
            "type" : "string"
          },
          "ospfArea" : {
            "type" : "string"
          },
          "dhcpRelayAgent" : {
            "type" : "string"
          },
          "ipAddressType" : {
            "type" : "string",
            "enum" : [ "static", "dynamic" ]
          },
          "ipAddress" : {
            "type" : "string"
          },
          "ipSubnetMask" : {
            "type" : "string"
          },
          "ingressAclName" : {
            "type" : "string"
          },
          "egressAclName" : {
            "type" : "string"
          },
          "connectedVe" : {
            "type" : "boolean"
          },
          "switchId" : {
            "type" : "string"
          },
          "switchName" : {
            "type" : "string"
          },
          "deviceStatus" : {
            "type" : "string"
          },
          "syncedSwitchConfig" : {
            "type" : "boolean"
          },
          "vsixIngressAclName" : {
            "type" : "string"
          },
          "vsixEgressAclName" : {
            "type" : "string"
          }
        }
      },
      "Venue" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "name" : {
            "type" : "string"
          },
          "dns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "switchLoginUsername" : {
            "type" : "string"
          },
          "switchLoginPassword" : {
            "type" : "string"
          },
          "syslogEnabled" : {
            "type" : "boolean"
          },
          "syslogPrimaryServer" : {
            "type" : "string"
          },
          "syslogSecondaryServer" : {
            "type" : "string"
          },
          "dnsList" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "profileId" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "firmware" : {
            "type" : "string"
          },
          "switchFirmwareVersion" : {
            "$ref" : "#/components/schemas/SwitchVersion"
          },
          "switchFirmwareVersionAboveTen" : {
            "$ref" : "#/components/schemas/SwitchVersion"
          },
          "venueCurrentFirmwares" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VenueCurrentFirmware"
            }
          },
          "upgradeSchedule" : {
            "$ref" : "#/components/schemas/UpgradeSchedule"
          },
          "lastScheduleUpdateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "timeZone" : {
            "type" : "string"
          },
          "addressLine" : {
            "type" : "string"
          },
          "cliApplied" : {
            "type" : "boolean"
          },
          "preDownloadFirmware" : {
            "type" : "boolean"
          },
          "isTemplate" : {
            "type" : "boolean"
          },
          "templateId" : {
            "type" : "string"
          },
          "templateVersion" : {
            "type" : "integer",
            "format" : "int64"
          },
          "isEnforced" : {
            "type" : "boolean"
          },
          "switchProfileIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "switchCliProfileIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "VenueCurrentFirmware" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "supportModelGroup" : {
            "type" : "string",
            "enum" : [ "ICX71", "ICX7X", "ICX82", "ICX81", "ICX71E" ]
          },
          "version" : {
            "type" : "string"
          },
          "venue" : {
            "$ref" : "#/components/schemas/Venue"
          }
        }
      },
      "VenueCurrentVersionView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "currentVersions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "currentVersionsAboveTen" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "VenueCurrentVersionViewV1000" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "currentVersions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "currentVersionsAboveTen" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "VenueCurrentVersionViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "currentVersions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModelCurrentVersionViewV1001"
            }
          }
        }
      },
      "VenueDtoV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "syslogEnabled" : {
            "type" : "boolean"
          },
          "syslogPrimaryServer" : {
            "type" : "string"
          },
          "syslogSecondaryServer" : {
            "type" : "string"
          },
          "dns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "profileId" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "VenueResponseV1001" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/VenueViewV1001"
          }
        }
      },
      "VenueSwitchBo" : {
        "type" : "object",
        "properties" : {
          "switches" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "venueId" : {
            "type" : "string"
          }
        }
      },
      "VenueTemplateAaaServerResponseV1001" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/VenueTemplateAaaServerViewV1001"
          }
        }
      },
      "VenueTemplateAaaServerViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "purpose" : {
            "type" : "string",
            "enum" : [ "UNSPECIFIED", "DEFAULT", "AUTHENTICATION_ONLY", "AUTHORIZATION_ONLY", "ACCOUNTING_ONLY" ]
          },
          "level" : {
            "type" : "string",
            "enum" : [ "UNSPECIFIED", "READ_WRITE", "PORT_CONFIG", "READ_ONLY", "LEVEL_NONE" ]
          },
          "serverType" : {
            "type" : "string",
            "enum" : [ "__NULL", "RADIUS", "TACACS_PLUS", "LOCAL", "NONE_TYPE" ]
          },
          "secret" : {
            "type" : "string"
          },
          "ip" : {
            "type" : "string"
          },
          "acctPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authPort" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "VenueTemplateDtoV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "syslogEnabled" : {
            "type" : "boolean"
          },
          "syslogPrimaryServer" : {
            "type" : "string"
          },
          "syslogSecondaryServer" : {
            "type" : "string"
          },
          "dns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "profileId" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "VenueTemplateViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "dns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "syslogEnabled" : {
            "type" : "boolean"
          },
          "syslogPrimaryServer" : {
            "type" : "string"
          },
          "syslogSecondaryServer" : {
            "type" : "string"
          },
          "cliApplied" : {
            "type" : "boolean"
          },
          "profileId" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "switchProfileIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "switchCliProfileIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "VenueView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "dns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "switchLoginUsername" : {
            "type" : "string"
          },
          "switchLoginPassword" : {
            "type" : "string"
          },
          "syslogEnabled" : {
            "type" : "boolean"
          },
          "syslogPrimaryServer" : {
            "type" : "string"
          },
          "syslogSecondaryServer" : {
            "type" : "string"
          },
          "cliApplied" : {
            "type" : "boolean"
          },
          "profileId" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "switchProfileIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "switchCliProfileIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "VenueViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "dns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "syslogEnabled" : {
            "type" : "boolean"
          },
          "syslogPrimaryServer" : {
            "type" : "string"
          },
          "syslogSecondaryServer" : {
            "type" : "string"
          },
          "cliApplied" : {
            "type" : "boolean"
          },
          "profileId" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Vlan" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "tenant" : {
            "$ref" : "#/components/schemas/Tenant"
          },
          "vlanId" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "vlanName" : {
            "type" : "string"
          },
          "rootBridgeFamilyId" : {
            "type" : "string",
            "enum" : [ "__NULL", "ICX7150", "ICX7250", "ICX7650", "ICX7850", "ICX7550", "ICX8200", "ICX8100" ]
          },
          "ipv4DhcpSnooping" : {
            "type" : "boolean"
          },
          "ipv4DhcpSnoopingTrustPort" : {
            "type" : "string"
          },
          "arpInspection" : {
            "type" : "boolean"
          },
          "arpInspectionTrustPort" : {
            "type" : "string"
          },
          "igmpSnooping" : {
            "type" : "string",
            "enum" : [ "active", "passive", "none" ]
          },
          "multicastVersion" : {
            "maximum" : 3,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "spanningTreeProtocol" : {
            "type" : "string",
            "enum" : [ "rstp", "stp", "none" ]
          },
          "spanningTreePriority" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "switchFamilyModels" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchFamilyModel"
            }
          },
          "defaultVlan" : {
            "type" : "boolean"
          }
        }
      },
      "VlanBo" : {
        "required" : [ "enableAsDefaultVlan", "vlanId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "vlanId" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "vlanName" : {
            "type" : "string"
          },
          "rootBridgeFamilyId" : {
            "type" : "string",
            "enum" : [ "__NULL", "ICX7150", "ICX7250", "ICX7650", "ICX7850", "ICX7550", "ICX8200", "ICX8100" ]
          },
          "ipv4DhcpSnooping" : {
            "type" : "boolean"
          },
          "ipv4DhcpSnoopingTrustPort" : {
            "type" : "string"
          },
          "ipv4DhcpSnoopingTrustPortList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "arpInspection" : {
            "type" : "boolean"
          },
          "arpInspectionTrustPort" : {
            "type" : "string"
          },
          "arpInspectionTrustPortList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "arpTrustPortsList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "dhcpTrustPortsList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "igmpSnooping" : {
            "type" : "string",
            "enum" : [ "active", "passive", "none" ]
          },
          "multicastVersion" : {
            "maximum" : 3,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "spanningTreeProtocol" : {
            "type" : "string",
            "enum" : [ "rstp", "stp", "none" ]
          },
          "spanningTreePriority" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "switchFamilyModels" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchFamilyModelBo"
            }
          },
          "managementVlan" : {
            "type" : "boolean"
          },
          "switchVlanPortModels" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchVlanPortModelBo"
            }
          },
          "switchId" : {
            "type" : "string"
          },
          "enableAsDefaultVlan" : {
            "type" : "boolean"
          },
          "deleteVlanEnabled" : {
            "type" : "boolean"
          },
          "igmpSnoopingTypeChanged" : {
            "type" : "boolean"
          },
          "rapidSpanningTreeProtocol" : {
            "type" : "boolean"
          },
          "taggedPortsList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untaggedPortsList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "notDummyVlan" : {
            "type" : "boolean"
          },
          "defaultVlan" : {
            "type" : "boolean"
          },
          "dummyVlan" : {
            "type" : "boolean"
          },
          "switchVlanPortModel" : {
            "$ref" : "#/components/schemas/SwitchVlanPortModelBo"
          }
        }
      },
      "VlanIntersectContent" : {
        "type" : "object",
        "properties" : {
          "switchId" : {
            "type" : "string"
          },
          "vlanConfigName" : {
            "type" : "string"
          },
          "profileLevel" : {
            "type" : "boolean"
          },
          "defaultVlan" : {
            "type" : "boolean"
          },
          "vlanId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "VlanIntersectionResponse" : {
        "type" : "object",
        "properties" : {
          "switchDefaultVlan" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VlanIntersectContent"
            }
          },
          "profileVlan" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VlanIntersectContent"
            }
          },
          "switchVlan" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VlanIntersectContent"
            }
          }
        }
      },
      "VlanTaggingRequest" : {
        "type" : "object",
        "properties" : {
          "model" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          }
        }
      },
      "VlanVePortView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "vlanId" : {
            "type" : "string"
          },
          "vlanName" : {
            "type" : "string"
          },
          "usedByVePort" : {
            "type" : "boolean"
          }
        }
      },
      "VlanView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "vlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vlanName" : {
            "type" : "string"
          },
          "rootBridgeFamilyId" : {
            "type" : "string",
            "enum" : [ "__NULL", "ICX7150", "ICX7250", "ICX7650", "ICX7850", "ICX7550", "ICX8200", "ICX8100" ]
          },
          "ipv4DhcpSnooping" : {
            "type" : "boolean"
          },
          "ipv4DhcpSnoopingTrustPort" : {
            "type" : "string"
          },
          "arpInspection" : {
            "type" : "boolean"
          },
          "arpInspectionTrustPort" : {
            "type" : "string"
          },
          "igmpSnooping" : {
            "type" : "string",
            "enum" : [ "active", "passive", "none" ]
          },
          "multicastVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "spanningTreeProtocol" : {
            "type" : "string",
            "enum" : [ "rstp", "stp", "none" ]
          },
          "spanningTreePriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "switchFamilyModels" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchFamilyModelView"
            }
          }
        }
      },
      "VlanVniMappingItem" : {
        "type" : "object",
        "properties" : {
          "vlanId" : {
            "type" : "string"
          },
          "vni" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "VoiceVlan" : {
        "type" : "object",
        "properties" : {
          "vlanId" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "taggedPorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "VoiceVlanBo" : {
        "type" : "object",
        "properties" : {
          "vlanId" : {
            "maximum" : 4095,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "taggedPorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "VoiceVlanConfig" : {
        "type" : "object",
        "properties" : {
          "model" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "voiceVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VoiceVlan"
            }
          }
        }
      },
      "VoiceVlanConfigBo" : {
        "type" : "object",
        "properties" : {
          "model" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "voiceVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VoiceVlanBo"
            }
          }
        }
      },
      "VoiceVlanConfigView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "voiceVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VoiceVlanView"
            }
          }
        }
      },
      "VoiceVlanConfigViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string",
            "enum" : [ "ICX7150-24", "ICX7150-24P", "ICX7150-48", "ICX7150-48P", "ICX7150-48PF", "ICX7150-48ZP", "ICX7150-C12P", "ICX7150-C10ZP", "ICX7150-C08P", "ICX7150-C08PT", "ICX7150-24F", "ICX7250-48", "ICX7650-48ZP", "ICX7650-48P", "ICX7650-48F", "ICX7850-32Q", "ICX7850-48FS", "ICX7850-48F", "ICX7850-48C", "ICX7550-24", "ICX7550-48", "ICX7550-24P", "ICX7550-48P", "ICX7550-24ZP", "ICX7550-48ZP", "ICX7550-24F", "ICX7550-48F", "ICX7550-24XZP", "ICX8200-24", "ICX8200-24P", "ICX8200-24F", "ICX8200-24FX", "ICX8200-24ZP", "ICX8200-48", "ICX8200-48F", "ICX8200-48P", "ICX8200-48PF", "ICX8200-48PF2", "ICX8200-48ZP2", "ICX8200-C08P", "ICX8200-C08PDC", "ICX8200-C08PF", "ICX8200-C08PT", "ICX8200-C08ZP", "ICX8100-24", "ICX8100-24P", "ICX8100-48", "ICX8100-48P", "ICX8100-C08PF", "ICX8100-24-X", "ICX8100-48-X", "ICX8100-24P-X", "ICX8100-48P-X", "ICX8100-C08PF-X", "ICX7150-24-ES-POE", "ICX7150-48-ES-POE", "ICX7150-C12-ES-POE", "ICX8200-24PV", "ICX8200-C08PFV" ]
          },
          "voiceVlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VoiceVlanViewV1001"
            }
          }
        }
      },
      "VoiceVlanView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "vlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "taggedPorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "VoiceVlanViewV1001" : {
        "type" : "object",
        "properties" : {
          "vlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "taggedPorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "WebAuthPageTemplateBo" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "maxLength" : 37,
            "minLength" : 0,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 32,
            "minLength" : 0,
            "type" : "string"
          },
          "webAuthPasswordLabel" : {
            "maxLength" : 32,
            "minLength" : 0,
            "type" : "string"
          },
          "webAuthCustomTitle" : {
            "maxLength" : 128,
            "minLength" : 0,
            "type" : "string"
          },
          "webAuthCustomTop" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "webAuthCustomLoginButton" : {
            "maxLength" : 32,
            "minLength" : 0,
            "type" : "string"
          },
          "webAuthCustomBottom" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "tag" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "tenantId" : {
            "type" : "string"
          }
        }
      },
      "WebAuthPageTemplateResponseV1001" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string"
          },
          "response" : {
            "$ref" : "#/components/schemas/WebAuthPageTemplateViewV1001"
          }
        }
      },
      "WebAuthPageTemplateView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "webAuthUserIdLabel" : {
            "type" : "string"
          },
          "webAuthPasswordLabel" : {
            "type" : "string"
          },
          "webAuthCustomTitle" : {
            "type" : "string"
          },
          "webAuthCustomTop" : {
            "type" : "string"
          },
          "webAuthCustomLoginButton" : {
            "type" : "string"
          },
          "webAuthCustomBottom" : {
            "type" : "string"
          },
          "tag" : {
            "type" : "string"
          },
          "venueCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "switchCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "switchVenueInfos" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SwitchAndVenueView"
            }
          },
          "webAuthPageTemplateViewList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WebAuthPageTemplateView"
            }
          }
        }
      },
      "WebAuthPageTemplateViewV1001" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "webAuthPasswordLabel" : {
            "type" : "string"
          },
          "webAuthCustomTitle" : {
            "type" : "string"
          },
          "webAuthCustomTop" : {
            "type" : "string"
          },
          "webAuthCustomLoginButton" : {
            "type" : "string"
          },
          "webAuthCustomBottom" : {
            "type" : "string"
          },
          "venueCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "switchCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      }
    },
    "securitySchemes" : {
      "jwtAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}